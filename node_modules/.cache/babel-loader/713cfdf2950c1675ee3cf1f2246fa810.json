{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\blitz\\\\src\\\\Pages\\\\Dashboard\\\\Campaigns\\\\postingInstructionsDialog.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostingInstructionsDialog = ({\n  open,\n  onClose,\n  onSave,\n  initialInstructions = \"\"\n}) => {\n  _s();\n  const [instructions, setInstructions] = useState(initialInstructions);\n  const inputRef = useRef(null);\n\n  // Focus on the text field when the dialog opens and reset instructions to initial state on open\n  useEffect(() => {\n    if (open) {\n      var _inputRef$current;\n      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      setInstructions(initialInstructions);\n    }\n  }, [open, initialInstructions]);\n  const handleSave = () => {\n    onSave(instructions);\n    onClose(); // Optionally close the dialog on save\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: \"Posting Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        id: \"posting-instructions\",\n        label: \"Instructions\",\n        type: \"text\",\n        fullWidth: true,\n        multiline: true,\n        minRows: 4,\n        value: instructions,\n        onChange: e => setInstructions(e.target.value),\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSave,\n        color: \"primary\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(PostingInstructionsDialog, \"qsqPrJjaVgttycigS91gVdDXAnA=\");\n_c = PostingInstructionsDialog;\nexport default PostingInstructionsDialog;\nvar _c;\n$RefreshReg$(_c, \"PostingInstructionsDialog\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Dialog","DialogTitle","DialogContent","TextField","DialogActions","Button","jsxDEV","_jsxDEV","PostingInstructionsDialog","open","onClose","onSave","initialInstructions","_s","instructions","setInstructions","inputRef","_inputRef$current","current","focus","handleSave","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","autoFocus","margin","id","label","type","multiline","minRows","value","onChange","e","target","variant","onClick","color","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/GitHub/blitz/src/Pages/Dashboard/Campaigns/postingInstructionsDialog.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from '@mui/material';\r\n\r\nconst PostingInstructionsDialog = ({ open, onClose, onSave, initialInstructions = \"\" }) => {\r\n  const [instructions, setInstructions] = useState(initialInstructions);\r\n  const inputRef = useRef(null);\r\n\r\n  // Focus on the text field when the dialog opens and reset instructions to initial state on open\r\n  useEffect(() => {\r\n    if (open) {\r\n      inputRef.current?.focus();\r\n      setInstructions(initialInstructions);\r\n    }\r\n  }, [open, initialInstructions]);\r\n\r\n  const handleSave = () => {\r\n    onSave(instructions);\r\n    onClose(); // Optionally close the dialog on save\r\n  };\r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Posting Instructions</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          id=\"posting-instructions\"\r\n          label=\"Instructions\"\r\n          type=\"text\"\r\n          fullWidth\r\n          multiline\r\n          minRows={4}\r\n          value={instructions}\r\n          onChange={(e) => setInstructions(e.target.value)}\r\n          variant=\"outlined\"\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>Cancel</Button>\r\n        <Button onClick={handleSave} color=\"primary\">Save</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default PostingInstructionsDialog;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,SAASC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,SAAS,EAAEC,aAAa,EAAEC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErG,MAAMC,yBAAyB,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,MAAM;EAAEC,mBAAmB,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EACzF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGhB,QAAQ,CAACa,mBAAmB,CAAC;EACrE,MAAMI,QAAQ,GAAGlB,MAAM,CAAC,IAAI,CAAC;;EAE7B;EACAD,SAAS,CAAC,MAAM;IACd,IAAIY,IAAI,EAAE;MAAA,IAAAQ,iBAAA;MACR,CAAAA,iBAAA,GAAAD,QAAQ,CAACE,OAAO,cAAAD,iBAAA,uBAAhBA,iBAAA,CAAkBE,KAAK,CAAC,CAAC;MACzBJ,eAAe,CAACH,mBAAmB,CAAC;IACtC;EACF,CAAC,EAAE,CAACH,IAAI,EAAEG,mBAAmB,CAAC,CAAC;EAE/B,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACvBT,MAAM,CAACG,YAAY,CAAC;IACpBJ,OAAO,CAAC,CAAC,CAAC,CAAC;EACb,CAAC;EAED,oBACEH,OAAA,CAACP,MAAM;IAACS,IAAI,EAAEA,IAAK;IAACC,OAAO,EAAEA,OAAQ;IAACW,QAAQ,EAAC,IAAI;IAACC,SAAS;IAAAC,QAAA,gBAC3DhB,OAAA,CAACN,WAAW;MAAAsB,QAAA,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC/CpB,OAAA,CAACL,aAAa;MAAAqB,QAAA,eACZhB,OAAA,CAACJ,SAAS;QACRyB,SAAS;QACTC,MAAM,EAAC,OAAO;QACdC,EAAE,EAAC,sBAAsB;QACzBC,KAAK,EAAC,cAAc;QACpBC,IAAI,EAAC,MAAM;QACXV,SAAS;QACTW,SAAS;QACTC,OAAO,EAAE,CAAE;QACXC,KAAK,EAAErB,YAAa;QACpBsB,QAAQ,EAAGC,CAAC,IAAKtB,eAAe,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;QACjDI,OAAO,EAAC;MAAU;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACW,CAAC,eAChBpB,OAAA,CAACH,aAAa;MAAAmB,QAAA,gBACZhB,OAAA,CAACF,MAAM;QAACmC,OAAO,EAAE9B,OAAQ;QAAAa,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACzCpB,OAAA,CAACF,MAAM;QAACmC,OAAO,EAAEpB,UAAW;QAACqB,KAAK,EAAC,SAAS;QAAAlB,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEb,CAAC;AAACd,EAAA,CAzCIL,yBAAyB;AAAAkC,EAAA,GAAzBlC,yBAAyB;AA2C/B,eAAeA,yBAAyB;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}