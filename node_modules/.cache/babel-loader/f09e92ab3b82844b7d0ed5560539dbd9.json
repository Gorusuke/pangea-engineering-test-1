{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\blitz\\\\src\\\\Pages\\\\Dashboard\\\\invoicing\\\\invoicing.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Navbar from \"../../../Components/Navbar/NavBar\";\nimport \"./dedInvoicing.css\";\nimport { FormControl, InputLabel, Select, MenuItem, Button, Typography } from \"@material-ui/core\";\nimport { StyledTableRow, StyledTableCell } from \"../../../Utils/styledcell\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport { LineChart, Line, XAxis, YAxis, Tooltip } from \"recharts\";\nimport Paper from \"@mui/material/Paper\";\nimport { useMutation, useQuery } from \"react-query\";\nimport client from \"../../../API\";\nimport { useIsMounted } from \"../../../Hooks/use-is-mounted\";\nimport InvoiceDialog from \"./invoicedialog\"; // Adjust path as needed\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport InvoiceEdit from \"./editInvoice\"; // Assuming the component is named InvoiceEdit inside editInvoice.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Invoicing = () => {\n  _s();\n  const isMounted = useIsMounted();\n  const [statusFilter, setStatusFilter] = useState(\"\");\n  const [invoices, setInvoices] = useState([]);\n  const [filteredInvoices, setFilteredInvoices] = useState([]);\n  const [campaignNames, setCampaignNames] = useState({});\n  const [accountBalance, setAccountBalance] = useState(\"Loading...\");\n  const [creditline, setCreditline] = useState(\"Loading...\");\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    fetchInvoices();\n  };\n  // Add to the Invoicing component's functional body\n\n  const [editOpen, setEditOpen] = useState(false); // This will control the visibility of the invoiceEdit dialog\n  const [currentInvoice, setCurrentInvoice] = useState(null); // This will hold the currently selected invoice for editing\n\n  const handleEditDialogOpen = invoice => {\n    setCurrentInvoice(invoice); // Correctly sets the current invoice for editing\n    setEditOpen(true); // Opens the dialog\n  };\n  const handleEditDialogClose = (refresh = false) => {\n    setEditOpen(false); // Closes the dialog\n    setCurrentInvoice(null); // Clears the current editing context\n    if (refresh) {\n      fetchInvoices(); // Optionally refreshes the invoices if needed\n    }\n  };\n\n  // Fetch company balance and credit line when component mounts\n  // Assuming useQuery to fetch current user's company data\n  const {\n    mutate: fetchCompanyData\n  } = useMutation(client.companies.listFetch, {\n    onSuccess: data => {\n      // Assuming the response structure is directly the data needed\n      if (data && data.balance != undefined && data.credit_line != undefined) {\n        setAccountBalance(`$${parseFloat(data.balance).toFixed(2)}`);\n        setCreditline(data.credit_line ? `$${parseFloat(data.credit_line).toFixed(2)}` : \"No Credit Line Established\");\n      } else {\n        // Handle case where data is undefined or not as expected\n        console.error(\"Received data is not in the expected format:\", data);\n        setAccountBalance(\"Data format error\");\n        setCreditline(\"Data format error\");\n      }\n    },\n    onError: error => {\n      console.error(\"Error fetching company data:\", error);\n      setAccountBalance(\"Error loading balance\");\n      setCreditline(\"Error loading credit line\");\n    }\n  });\n  useEffect(() => {\n    if (!isMounted) return;\n    fetchCompanyData();\n    fetchInvoices();\n    fetchCampaigns();\n  }, [isMounted]);\n  const {\n    mutate: fetchInvoices\n  } = useMutation(client.invoices.list, {\n    onSuccess: async data => {\n      setInvoices(data.invoices); // Adjust based on actual API response\n    },\n    onError: error => {\n      console.error(\"Error fetching invoices:\", error);\n    }\n  });\n  const {\n    mutate: fetchCampaigns\n  } = useMutation(client.campaigns.list, {\n    onSuccess: data => {\n      const campaignNamesMap = {};\n      data.forEach(campaign => {\n        if (campaign) {\n          // Ensure the campaign isn't null from a failed fetch\n          campaignNamesMap[campaign.id] = campaign.name;\n        }\n      });\n      setCampaignNames(campaignNamesMap);\n    },\n    onError: error => {\n      console.error(\"Error fetching campaigns:\", error);\n    }\n  });\n  useEffect(() => {\n    // Filter invoices whenever the invoices list or statusFilter changes\n    setFilteredInvoices(invoices.filter(invoice => statusFilter === \"\" || invoice.status === statusFilter));\n  }, [invoices, statusFilter]);\n  const handleStatusFilterChange = event => {\n    setStatusFilter(event.target.value);\n  };\n  const formatAmount = amount => {\n    // First, ensure amount is a number and format it to two decimal places with toFixed\n    const formattedAmount = parseFloat(amount).toFixed(2);\n    // Then, add commas where appropriate for thousands, millions, etc.\n    return `$${formattedAmount.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`;\n  };\n  // Calculations for the summary\n  const totalInvoices = invoices.length;\n  const totalAmountDue = invoices.reduce((acc, invoice) => acc + parseFloat(invoice.amount_due), 0);\n  const invoicesByStatus = invoices.reduce((acc, invoice) => {\n    acc[invoice.status] = (acc[invoice.status] || 0) + 1;\n    return acc;\n  }, {});\n  const getChartData = () => {\n    // Assuming invoices have a 'created_at' field and an 'amount_due' field\n    const sortedInvoices = [...invoices].sort((a, b) => new Date(a.created_at) - new Date(b.created_at));\n    const chartData = sortedInvoices.reduce((acc, invoice) => {\n      const date = new Date(invoice.created_at).toLocaleDateString();\n      const existing = acc.find(item => item.date === date);\n      if (existing) {\n        existing.cost += parseFloat(invoice.amount_due);\n      } else {\n        acc.push({\n          date,\n          cost: parseFloat(invoice.amount_due)\n        });\n      }\n      return acc;\n    }, []);\n    return chartData;\n  };\n  const renderCampaignCostsLineChart = () => {\n    const chartData = getChartData();\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        style: {\n          margin: \"20px 0\"\n        },\n        children: \"Invoice Amounts Over Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LineChart, {\n        width: 500,\n        height: 300,\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Line, {\n          type: \"monotone\",\n          dataKey: \"cost\",\n          stroke: \"#8884d8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  const [selectedIds, setSelectedIds] = useState([]);\n  const handleSelectInvoice = (event, id) => {\n    setSelectedIds(prev => {\n      const selectedIndex = prev.indexOf(id);\n      let newSelected = [];\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(prev, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(prev.slice(1));\n      } else if (selectedIndex === prev.length - 1) {\n        newSelected = newSelected.concat(prev.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(prev.slice(0, selectedIndex), prev.slice(selectedIndex + 1));\n      }\n      return newSelected;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invoice-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"header\",\n          children: \"Invoicing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          style: {\n            marginBottom: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleOpen,\n            children: \"Create Invoice\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InvoiceDialog, {\n            open: open,\n            onClose: handleClose,\n            invoiceInfo: undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"status-filter-label\",\n              children: \"Select Filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"status-filter-label\",\n              value: statusFilter,\n              onChange: handleStatusFilterChange,\n              displayEmpty: true,\n              inputProps: {\n                \"aria-label\": \"Without label\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: \"All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Sent\",\n                children: \"Sent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Paid\",\n                children: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Failed\",\n                children: \"Failed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Advance\",\n                children: \"Advance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            sx: {\n              minWidth: 700\n            },\n            \"aria-label\": \"customized table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: \"Campaign Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: \"PO Number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: \"Amount Due\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: \"Created At\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: filteredInvoices.map(invoice => /*#__PURE__*/_jsxDEV(StyledTableRow, {\n                children: [/*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: campaignNames[invoice.campaign_id] || \"Creator Payout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: invoice.po_number || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: formatAmount(invoice.amount_due)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: invoice.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: new Date(invoice.created_at).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StyledTableCell, {\n                  align: \"center\",\n                  children: invoice.status !== \"Paid\" && /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: () => handleEditDialogOpen(invoice),\n                    startIcon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 22\n                    }, this),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 9\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)]\n              }, invoice.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), currentInvoice && /*#__PURE__*/_jsxDEV(InvoiceEdit, {\n          open: editOpen,\n          onClose: handleEditDialogClose,\n          invoiceInfo: currentInvoice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-column\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Account Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: accountBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Line of Credit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: creditline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Invoices: \", totalInvoices]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), Object.entries(invoicesByStatus).map(([status, count]) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [status, \": \", count]\n        }, status, true, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payment History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: renderCampaignCostsLineChart()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n};\n_s(Invoicing, \"/NMtmWnymrGD8wUIYoDEmcXJRM8=\", false, function () {\n  return [useIsMounted, useMutation, useMutation, useMutation];\n});\n_c = Invoicing;\nexport default Invoicing;\nvar _c;\n$RefreshReg$(_c, \"Invoicing\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","FormControl","InputLabel","Select","MenuItem","Button","Typography","StyledTableRow","StyledTableCell","Table","TableBody","TableContainer","TableHead","TableRow","LineChart","Line","XAxis","YAxis","Tooltip","Paper","useMutation","useQuery","client","useIsMounted","InvoiceDialog","EditIcon","InvoiceEdit","jsxDEV","_jsxDEV","Fragment","_Fragment","Invoicing","_s","isMounted","statusFilter","setStatusFilter","invoices","setInvoices","filteredInvoices","setFilteredInvoices","campaignNames","setCampaignNames","accountBalance","setAccountBalance","creditline","setCreditline","open","setOpen","handleOpen","handleClose","fetchInvoices","editOpen","setEditOpen","currentInvoice","setCurrentInvoice","handleEditDialogOpen","invoice","handleEditDialogClose","refresh","mutate","fetchCompanyData","companies","listFetch","onSuccess","data","balance","undefined","credit_line","parseFloat","toFixed","console","error","onError","fetchCampaigns","list","campaigns","campaignNamesMap","forEach","campaign","id","name","filter","status","handleStatusFilterChange","event","target","value","formatAmount","amount","formattedAmount","replace","totalInvoices","length","totalAmountDue","reduce","acc","amount_due","invoicesByStatus","getChartData","sortedInvoices","sort","a","b","Date","created_at","chartData","date","toLocaleDateString","existing","find","item","cost","push","renderCampaignCostsLineChart","children","variant","style","margin","fileName","_jsxFileName","lineNumber","columnNumber","width","height","dataKey","type","stroke","selectedIds","setSelectedIds","handleSelectInvoice","prev","selectedIndex","indexOf","newSelected","concat","slice","className","marginBottom","color","onClick","onClose","invoiceInfo","fullWidth","labelId","onChange","displayEmpty","inputProps","component","sx","minWidth","align","map","campaign_id","po_number","startIcon","Object","entries","count","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/GitHub/blitz/src/Pages/Dashboard/invoicing/invoicing.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Navbar from \"../../../Components/Navbar/NavBar\";\r\nimport \"./dedInvoicing.css\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport { StyledTableRow, StyledTableCell } from \"../../../Utils/styledcell\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport { LineChart, Line, XAxis, YAxis, Tooltip } from \"recharts\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { useMutation, useQuery } from \"react-query\";\r\nimport client from \"../../../API\";\r\nimport { useIsMounted } from \"../../../Hooks/use-is-mounted\";\r\nimport InvoiceDialog from \"./invoicedialog\"; // Adjust path as needed\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport InvoiceEdit from \"./editInvoice\"; // Assuming the component is named InvoiceEdit inside editInvoice.js\r\nconst Invoicing = () => {\r\n  const isMounted = useIsMounted();\r\n\r\n  const [statusFilter, setStatusFilter] = useState(\"\");\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [filteredInvoices, setFilteredInvoices] = useState([]);\r\n  const [campaignNames, setCampaignNames] = useState({});\r\n  const [accountBalance, setAccountBalance] = useState(\"Loading...\");\r\n  const [creditline, setCreditline] = useState(\"Loading...\");\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    fetchInvoices();\r\n  };\r\n  // Add to the Invoicing component's functional body\r\n\r\n  const [editOpen, setEditOpen] = useState(false);  // This will control the visibility of the invoiceEdit dialog\r\n  const [currentInvoice, setCurrentInvoice] = useState(null);  // This will hold the currently selected invoice for editing\r\n  \r\n  const handleEditDialogOpen = (invoice) => {\r\n    setCurrentInvoice(invoice); // Correctly sets the current invoice for editing\r\n    setEditOpen(true); // Opens the dialog\r\n  };\r\n  \r\n  const handleEditDialogClose = (refresh = false) => {\r\n    setEditOpen(false); // Closes the dialog\r\n    setCurrentInvoice(null); // Clears the current editing context\r\n    if (refresh) {\r\n      fetchInvoices(); // Optionally refreshes the invoices if needed\r\n    }\r\n  };\r\n  \r\n  // Fetch company balance and credit line when component mounts\r\n  // Assuming useQuery to fetch current user's company data\r\n  const { mutate: fetchCompanyData } = useMutation(client.companies.listFetch, {\r\n    onSuccess: (data) => {\r\n      // Assuming the response structure is directly the data needed\r\n      if (data && data.balance != undefined && data.credit_line != undefined) {\r\n        setAccountBalance(`$${parseFloat(data.balance).toFixed(2)}`);\r\n        setCreditline(\r\n          data.credit_line\r\n            ? `$${parseFloat(data.credit_line).toFixed(2)}`\r\n            : \"No Credit Line Established\",\r\n        );\r\n      } else {\r\n        // Handle case where data is undefined or not as expected\r\n        console.error(\"Received data is not in the expected format:\", data);\r\n        setAccountBalance(\"Data format error\");\r\n        setCreditline(\"Data format error\");\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error fetching company data:\", error);\r\n      setAccountBalance(\"Error loading balance\");\r\n      setCreditline(\"Error loading credit line\");\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!isMounted) return;\r\n\r\n    fetchCompanyData();\r\n    fetchInvoices();\r\n    fetchCampaigns();\r\n  }, [isMounted]);\r\n\r\n  const { mutate: fetchInvoices } = useMutation(client.invoices.list, {\r\n    onSuccess: async (data) => {\r\n      setInvoices(data.invoices); // Adjust based on actual API response\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error fetching invoices:\", error);\r\n    },\r\n  });\r\n\r\n  const { mutate: fetchCampaigns } = useMutation(client.campaigns.list, {\r\n    onSuccess: (data) => {\r\n      const campaignNamesMap = {};\r\n      data.forEach((campaign) => {\r\n        if (campaign) {\r\n          // Ensure the campaign isn't null from a failed fetch\r\n          campaignNamesMap[campaign.id] = campaign.name;\r\n        }\r\n      });\r\n      setCampaignNames(campaignNamesMap);\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error fetching campaigns:\", error);\r\n    },\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Filter invoices whenever the invoices list or statusFilter changes\r\n    setFilteredInvoices(\r\n      invoices.filter(\r\n        (invoice) => statusFilter === \"\" || invoice.status === statusFilter,\r\n      ),\r\n    );\r\n  }, [invoices, statusFilter]);\r\n\r\n  const handleStatusFilterChange = (event) => {\r\n    setStatusFilter(event.target.value);\r\n  };\r\n\r\n  const formatAmount = (amount) => {\r\n    // First, ensure amount is a number and format it to two decimal places with toFixed\r\n    const formattedAmount = parseFloat(amount).toFixed(2);\r\n    // Then, add commas where appropriate for thousands, millions, etc.\r\n    return `$${formattedAmount.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`;\r\n  };\r\n  // Calculations for the summary\r\n  const totalInvoices = invoices.length;\r\n  const totalAmountDue = invoices.reduce(\r\n    (acc, invoice) => acc + parseFloat(invoice.amount_due),\r\n    0,\r\n  );\r\n  const invoicesByStatus = invoices.reduce((acc, invoice) => {\r\n    acc[invoice.status] = (acc[invoice.status] || 0) + 1;\r\n    return acc;\r\n  }, {});\r\n\r\n  const getChartData = () => {\r\n    // Assuming invoices have a 'created_at' field and an 'amount_due' field\r\n    const sortedInvoices = [...invoices].sort(\r\n      (a, b) => new Date(a.created_at) - new Date(b.created_at),\r\n    );\r\n    const chartData = sortedInvoices.reduce((acc, invoice) => {\r\n      const date = new Date(invoice.created_at).toLocaleDateString();\r\n      const existing = acc.find((item) => item.date === date);\r\n      if (existing) {\r\n        existing.cost += parseFloat(invoice.amount_due);\r\n      } else {\r\n        acc.push({ date, cost: parseFloat(invoice.amount_due) });\r\n      }\r\n      return acc;\r\n    }, []);\r\n    return chartData;\r\n  };\r\n\r\n  const renderCampaignCostsLineChart = () => {\r\n    const chartData = getChartData();\r\n\r\n    return (\r\n      <>\r\n        <Typography variant=\"h6\" style={{ margin: \"20px 0\" }}>\r\n          Invoice Amounts Over Time\r\n        </Typography>\r\n        <LineChart width={500} height={300} data={chartData}>\r\n          <XAxis dataKey=\"date\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Line type=\"monotone\" dataKey=\"cost\" stroke=\"#8884d8\" />\r\n        </LineChart>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const [selectedIds, setSelectedIds] = useState([]);\r\n\r\n  const handleSelectInvoice = (event, id) => {\r\n    setSelectedIds((prev) => {\r\n      const selectedIndex = prev.indexOf(id);\r\n      let newSelected = [];\r\n\r\n      if (selectedIndex === -1) {\r\n        newSelected = newSelected.concat(prev, id);\r\n      } else if (selectedIndex === 0) {\r\n        newSelected = newSelected.concat(prev.slice(1));\r\n      } else if (selectedIndex === prev.length - 1) {\r\n        newSelected = newSelected.concat(prev.slice(0, -1));\r\n      } else if (selectedIndex > 0) {\r\n        newSelected = newSelected.concat(\r\n          prev.slice(0, selectedIndex),\r\n          prev.slice(selectedIndex + 1),\r\n        );\r\n      }\r\n\r\n      return newSelected;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard\">\r\n      <Navbar />\r\n      <div className=\"invoice-container\">\r\n        <div className=\"left-column\">\r\n          <h1 className=\"header\">Invoicing</h1>\r\n          <div className=\"button-container\" style={{ marginBottom: \"10px\" }}>\r\n            {/* Added \"Create Payment\" button */}\r\n            <Button variant=\"contained\" color=\"primary\" onClick={handleOpen}>\r\n              Create Invoice\r\n            </Button>\r\n            <InvoiceDialog\r\n              open={open}\r\n              onClose={handleClose}\r\n              invoiceInfo={undefined}\r\n            />\r\n\r\n            <FormControl fullWidth>\r\n              <InputLabel id=\"status-filter-label\">Select Filter</InputLabel>\r\n              <Select\r\n                labelId=\"status-filter-label\"\r\n                value={statusFilter}\r\n                onChange={handleStatusFilterChange}\r\n                displayEmpty\r\n                inputProps={{ \"aria-label\": \"Without label\" }}\r\n              >\r\n                <MenuItem value=\"\">All</MenuItem>\r\n\r\n                <MenuItem value=\"Sent\">Sent</MenuItem>\r\n                <MenuItem value=\"Paid\">Paid</MenuItem>\r\n                <MenuItem value=\"Failed\">Failed</MenuItem>\r\n                <MenuItem value=\"Advance\">Advance</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <TableContainer component={Paper}>\r\n            <Table sx={{ minWidth: 700 }} aria-label=\"customized table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <StyledTableCell align=\"center\">\r\n                    Campaign Name\r\n                  </StyledTableCell>\r\n                  <StyledTableCell align=\"center\">PO Number</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Amount Due</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Status</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Created At</StyledTableCell>\r\n                  <StyledTableCell align=\"center\">Edit</StyledTableCell>\r\n\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {filteredInvoices.map((invoice) => (\r\n                  <StyledTableRow key={invoice.id}>\r\n                    <StyledTableCell align=\"center\">\r\n                      {campaignNames[invoice.campaign_id] || \"Creator Payout\"}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                      {invoice.po_number || \"N/A\"}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                      {formatAmount(invoice.amount_due)}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                      {invoice.status}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n                      {new Date(invoice.created_at).toLocaleDateString()}\r\n                    </StyledTableCell>\r\n                    <StyledTableCell align=\"center\">\r\n      {invoice.status !== \"Paid\" && (\r\n        <Button\r\n          onClick={() => handleEditDialogOpen(invoice)}\r\n          startIcon={<EditIcon />}\r\n        >\r\n          Edit\r\n        </Button>\r\n      )}\r\n    </StyledTableCell>\r\n  </StyledTableRow>\r\n))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n          {currentInvoice && (\r\n  <InvoiceEdit\r\n    open={editOpen}\r\n    onClose={handleEditDialogClose}\r\n    invoiceInfo={currentInvoice}\r\n  />\r\n)}\r\n        </div>\r\n        <div className=\"right-column\">\r\n          {/* Account Balance section */}\r\n          <h2>Account Balance</h2>\r\n          <p>{accountBalance}</p>\r\n          <h2>Line of Credit</h2>\r\n          <p>{creditline}</p>\r\n          {/* Summary section */}\r\n          <h2>Summary</h2>\r\n          <p>Total Invoices: {totalInvoices}</p>\r\n          {Object.entries(invoicesByStatus).map(([status, count]) => (\r\n            <p key={status}>\r\n              {status}: {count}\r\n            </p>\r\n          ))}\r\n\r\n          {/* Payment History placeholder */}\r\n          <h2>Payment History</h2>\r\n          {/* Render the chart in the right column or wherever appropriate */}\r\n          <div className=\"chart-container\">\r\n            {renderCampaignCostsLineChart()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Invoicing;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}