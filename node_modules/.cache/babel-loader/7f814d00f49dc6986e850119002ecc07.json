{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\blitz\\\\src\\\\Pages\\\\Dashboard\\\\dashboard\\\\dashboard.js\",\n  _s = $RefreshSig$();\n/* Additional styling as before... */\nimport React, { useState, useEffect } from \"react\";\nimport \"./dashboard.css\";\nimport Navbar from \"../../../Components/Navbar/NavBar\";\nimport { Button, Table, TableBody, TableCell, TableHead, TableRow, Select, MenuItem, Typography,\n// For titles\nGrid } from \"@mui/material\";\nimport { useMutation } from \"react-query\";\nimport client from \"../../../API\";\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, Legend, LineChart, Line } from \"recharts\";\nimport { useIsMounted } from \"../../../Hooks/use-is-mounted\";\nimport styled from 'styled-components';\nimport RecentUpdates from \"./recentUpdates\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #f0f0f0;\n`;\n_c = DashboardContainer;\nconst ContentContainer = styled.div`\n  display: flex;\n  margin-left: 16.5rem;\n  max-width: 1650px;\n`;\n_c2 = ContentContainer;\nconst LeftColumn = styled.div`\n  flex: 0 0 70%;\n  padding-right: 20px;\n`;\n_c3 = LeftColumn;\nconst RightColumn = styled.div`\n  flex: 0 0 30%;\n  padding-left: 20px;\n`;\n_c4 = RightColumn;\nconst StyledTableHead = styled(TableHead)`\n  background-color: #424242; // Darker background for headers\n  & th {\n    color: white; // White text for headers\n  }\n`;\n_c5 = StyledTableHead;\nconst StyledGraphContainer = styled.div`\nmax-width: 600px; // Maximum width for graphs\nmargin: 20px;\noverflow: hidden; // Prevent overflow\nborder-radius: 10px; // Rounded corners for graphs\n`;\n_c6 = StyledGraphContainer;\nconst RecentUpdatesBanner = styled.div`\n  width: 100%; // Full width\n  margin-bottom: 20px; // Space between updates and the rest of the content\n  display: flex;\n  margin-left: 16.5rem;\n`;\n_c7 = RecentUpdatesBanner;\nconst Dashboard = () => {\n  _s();\n  const isMounted = useIsMounted();\n  const [dataView, setDataView] = useState(\"campaigns\");\n  const [campaigns, setCampaigns] = useState([]);\n  const [payouts, setPayouts] = useState([]);\n  const [invoices, setInvoices] = useState([]);\n  const [accountBalance, setAccountBalance] = useState(\"Loading...\");\n  const [userInfo, setUserInfo] = useState({\n    firstName: \"\",\n    lastName: \"\",\n    companyId: \"\"\n  });\n  const [companyname, setCompanyName] = useState(\"\");\n  const [creditline, setCreditline] = useState(\"Loading...\");\n  const [aggregateChartData, setAggregateChartData] = useState([]);\n\n  // API call setup\n  const fetchHandler = {\n    campaigns: useMutation(client.campaigns.list, {\n      onSuccess: data => setCampaigns(data),\n      onError: error => console.error(\"Error fetching campaigns:\", error)\n    }),\n    payouts: useMutation(client.payouts.list, {\n      onSuccess: data => setPayouts(data.payouts || []),\n      onError: error => console.error(\"Error fetching payouts:\", error)\n    }),\n    invoices: useMutation(client.invoices.list, {\n      onSuccess: data => setInvoices(data.invoices || []),\n      onError: error => console.error(\"Error fetching invoices:\", error)\n    })\n  };\n\n  // Load data based on the selected view\n  useEffect(() => {\n    if (isMounted) {\n      fetchHandler[dataView].mutate();\n    }\n  }, [isMounted, dataView]);\n  const handleDataViewChange = event => {\n    setDataView(event.target.value);\n  };\n  const tableHeaders = {\n    campaigns: [\"Name\", \"Campaign Sum\", \"Creators\", \"Proposal Date\", \"Campaign Status\"],\n    payouts: [\"Creator ID\", \"Amount\", \"Payout Date\", \"BlitzPay\", \"Status\"],\n    invoices: [\"Campaign/Creator\", \"Amount Due\", \"Status\"] // Modified headers for invoices\n  };\n  const renderTableData = () => {\n    const dataSets = {\n      campaigns,\n      payouts,\n      invoices\n    };\n    const data = dataSets[dataView] || [];\n    return data.map((item, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n      children: tableHeaders[dataView].map(header => /*#__PURE__*/_jsxDEV(TableCell, {\n        children: item[header.toLowerCase().replace(/\\s/g, '_')]\n      }, header, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this))\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this));\n  };\n  const {\n    mutate: fetchUserInfo,\n    isError,\n    error\n  } = useMutation(client.users.fetchUser, {\n    onSuccess: data => {\n      // Assuming the response structure is directly the data needed\n      const {\n        first_name,\n        last_name,\n        companyname\n      } = data;\n      setUserInfo({\n        firstName: first_name,\n        lastName: last_name\n      });\n      setCompanyName(companyname);\n    },\n    onError: error => {\n      console.error(\"Error fetching user or company info:\", error);\n    }\n  });\n  const {\n    mutate: fetchCompanyData\n  } = useMutation(client.companies.listFetch, {\n    onSuccess: data => {\n      // Assuming the response structure is directly the data needed\n      if (data && data.balance != undefined && data.credit_line != undefined) {\n        setAccountBalance(`$${parseFloat(data.balance).toFixed(2)}`);\n        setCreditline(data.credit_line ? `$${parseFloat(data.credit_line).toFixed(2)}` : \"No Credit Line Established\");\n      } else {\n        // Handle case where data is undefined or not as expected\n        console.error(\"Received data is not in the expected format:\", data);\n        setAccountBalance(\"Data format error\");\n        setCreditline(\"Data format error\");\n      }\n    },\n    onError: error => {\n      console.error(\"Error fetching company data:\", error);\n      setAccountBalance(\"Error loading balance\");\n      setCreditline(\"Error loading credit line\");\n    }\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const campaignsData = await client.campaigns.list();\n        const payoutsData = await client.payouts.list();\n        const invoicesData = await client.invoices.list();\n        setCampaigns(campaignsData);\n        setPayouts(payoutsData.payouts || []);\n        setInvoices(invoicesData.invoices || []);\n\n        // Aggregate data for chart\n        const combinedData = [...campaignsData, ...payoutsData.payouts, ...invoicesData.invoices].map(data => ({\n          date: new Date(data.proposal_date || data.payout_date || data.invoice_date).getTime(),\n          // Normalize date\n          value: data.campaign_sum || data.amount || data.amount_due // Assume similar data structure\n        })).sort((a, b) => a.date - b.date); // Sort by date\n\n        setAggregateChartData(combinedData);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  useEffect(() => {\n    isMounted && fetchUserInfo();\n    fetchCompanyData();\n  }, [isMounted]);\n  useEffect(() => {\n    if (isMounted) {\n      client.users.fetchUser().then(setUserInfo).catch(console.error);\n      client.companies.listFetch().then(data => {\n        setAccountBalance(`$${parseFloat(data.balance).toFixed(2)}`);\n      }).catch(console.error);\n    }\n  }, [isMounted]);\n  const renderAggregateChart = () => /*#__PURE__*/_jsxDEV(StyledGraphContainer, {\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      width: 500,\n      height: 300,\n      data: aggregateChartData,\n      children: [/*#__PURE__*/_jsxDEV(XAxis, {\n        dataKey: \"date\",\n        tickFormatter: tick => new Date(tick).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        labelFormatter: label => new Date(label).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        type: \"monotone\",\n        dataKey: \"value\",\n        stroke: \"#8884d8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n  const renderYouTubeVideos = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n      width: \"560\",\n      height: \"315\",\n      src: \"https://www.youtube.com/watch?v=c71osU3gK64&ab_channel=TheCultureClub\",\n      title: \"YouTube video player\",\n      frameBorder: \"0\",\n      allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n      allowFullScreen: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DashboardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RecentUpdatesBanner, {\n      children: /*#__PURE__*/_jsxDEV(RecentUpdates, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentContainer, {\n      children: [/*#__PURE__*/_jsxDEV(LeftColumn, {\n        children: [/*#__PURE__*/_jsxDEV(Select, {\n          value: dataView,\n          onChange: handleDataViewChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"campaigns\",\n            children: \"Campaigns\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"payouts\",\n            children: \"Payouts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"invoices\",\n            children: \"Invoices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [userInfo.firstName, \" \", userInfo.lastName, \"'s Dashboard - \", companyname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Account Balance: \", accountBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"CreditLine Balance: \", creditline]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(StyledTableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: tableHeaders[dataView].map(header => /*#__PURE__*/_jsxDEV(TableCell, {\n                children: header\n              }, header, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: renderTableData()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(RightColumn, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Aggregate Usage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 9\n        }, this), renderAggregateChart(), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Watch Tutorials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 11\n        }, this), renderYouTubeVideos()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"iL6lVDvFLfrzFjrTpSIPk6zDxMU=\", false, function () {\n  return [useIsMounted, useMutation, useMutation, useMutation, useMutation, useMutation];\n});\n_c8 = Dashboard;\nexport default Dashboard;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"DashboardContainer\");\n$RefreshReg$(_c2, \"ContentContainer\");\n$RefreshReg$(_c3, \"LeftColumn\");\n$RefreshReg$(_c4, \"RightColumn\");\n$RefreshReg$(_c5, \"StyledTableHead\");\n$RefreshReg$(_c6, \"StyledGraphContainer\");\n$RefreshReg$(_c7, \"RecentUpdatesBanner\");\n$RefreshReg$(_c8, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","Button","Table","TableBody","TableCell","TableHead","TableRow","Select","MenuItem","Typography","Grid","useMutation","client","BarChart","Bar","XAxis","YAxis","Tooltip","Legend","LineChart","Line","useIsMounted","styled","RecentUpdates","jsxDEV","_jsxDEV","DashboardContainer","div","_c","ContentContainer","_c2","LeftColumn","_c3","RightColumn","_c4","StyledTableHead","_c5","StyledGraphContainer","_c6","RecentUpdatesBanner","_c7","Dashboard","_s","isMounted","dataView","setDataView","campaigns","setCampaigns","payouts","setPayouts","invoices","setInvoices","accountBalance","setAccountBalance","userInfo","setUserInfo","firstName","lastName","companyId","companyname","setCompanyName","creditline","setCreditline","aggregateChartData","setAggregateChartData","fetchHandler","list","onSuccess","data","onError","error","console","mutate","handleDataViewChange","event","target","value","tableHeaders","renderTableData","dataSets","map","item","index","children","header","toLowerCase","replace","fileName","_jsxFileName","lineNumber","columnNumber","fetchUserInfo","isError","users","fetchUser","first_name","last_name","fetchCompanyData","companies","listFetch","balance","undefined","credit_line","parseFloat","toFixed","fetchData","campaignsData","payoutsData","invoicesData","combinedData","date","Date","proposal_date","payout_date","invoice_date","getTime","campaign_sum","amount","amount_due","sort","a","b","then","catch","renderAggregateChart","width","height","dataKey","tickFormatter","tick","toLocaleDateString","labelFormatter","label","type","stroke","renderYouTubeVideos","src","title","frameBorder","allow","allowFullScreen","onChange","variant","_c8","$RefreshReg$"],"sources":["C:/Users/HP/Documents/GitHub/blitz/src/Pages/Dashboard/dashboard/dashboard.js"],"sourcesContent":["/* Additional styling as before... */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport \"./dashboard.css\";\r\nimport Navbar from \"../../../Components/Navbar/NavBar\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Select,\r\n  MenuItem,\r\n  Typography, // For titles\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport { useMutation } from \"react-query\";\r\nimport client from \"../../../API\";\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  Tooltip,\r\n  Legend,\r\n  LineChart,\r\n  Line,\r\n} from \"recharts\";\r\nimport { useIsMounted } from \"../../../Hooks/use-is-mounted\";\r\nimport styled from 'styled-components';\r\nimport RecentUpdates from \"./recentUpdates\";\r\nconst DashboardContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #f0f0f0;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  display: flex;\r\n  margin-left: 16.5rem;\r\n  max-width: 1650px;\r\n`;\r\n\r\nconst LeftColumn = styled.div`\r\n  flex: 0 0 70%;\r\n  padding-right: 20px;\r\n`;\r\n\r\nconst RightColumn = styled.div`\r\n  flex: 0 0 30%;\r\n  padding-left: 20px;\r\n`;\r\nconst StyledTableHead = styled(TableHead)`\r\n  background-color: #424242; // Darker background for headers\r\n  & th {\r\n    color: white; // White text for headers\r\n  }\r\n`;\r\nconst StyledGraphContainer = styled.div`\r\nmax-width: 600px; // Maximum width for graphs\r\nmargin: 20px;\r\noverflow: hidden; // Prevent overflow\r\nborder-radius: 10px; // Rounded corners for graphs\r\n`;\r\n\r\nconst RecentUpdatesBanner = styled.div`\r\n  width: 100%; // Full width\r\n  margin-bottom: 20px; // Space between updates and the rest of the content\r\n  display: flex;\r\n  margin-left: 16.5rem;\r\n`;\r\nconst Dashboard = () => {\r\n  const isMounted = useIsMounted();\r\n\r\n  const [dataView, setDataView] = useState(\"campaigns\");\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [payouts, setPayouts] = useState([]);\r\n  const [invoices, setInvoices] = useState([]);\r\n  const [accountBalance, setAccountBalance] = useState(\"Loading...\");\r\n  const [userInfo, setUserInfo] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    companyId: \"\",\r\n  });\r\n  const [companyname, setCompanyName] = useState(\"\");\r\n  const [creditline, setCreditline] = useState(\"Loading...\");\r\n  const [aggregateChartData, setAggregateChartData] = useState([]);\r\n\r\n  // API call setup\r\n  const fetchHandler = {\r\n    campaigns: useMutation(client.campaigns.list, {\r\n      onSuccess: (data) => setCampaigns(data),\r\n      onError: (error) => console.error(\"Error fetching campaigns:\", error),\r\n    }),\r\n    payouts: useMutation(client.payouts.list, {\r\n      onSuccess: (data) => setPayouts(data.payouts || []),\r\n      onError: (error) => console.error(\"Error fetching payouts:\", error),\r\n    }),\r\n    invoices: useMutation(client.invoices.list, {\r\n      onSuccess: (data) => setInvoices(data.invoices || []),\r\n      onError: (error) => console.error(\"Error fetching invoices:\", error),\r\n    }),\r\n  };\r\n\r\n  // Load data based on the selected view\r\n  useEffect(() => {\r\n    if (isMounted) {\r\n      fetchHandler[dataView].mutate();\r\n    }\r\n  }, [isMounted, dataView]);\r\n\r\n  const handleDataViewChange = (event) => {\r\n    setDataView(event.target.value);\r\n  };\r\n\r\n  const tableHeaders = {\r\n    campaigns: [\"Name\", \"Campaign Sum\", \"Creators\", \"Proposal Date\", \"Campaign Status\"],\r\n    payouts: [\"Creator ID\", \"Amount\", \"Payout Date\", \"BlitzPay\", \"Status\"],\r\n    invoices: [\"Campaign/Creator\", \"Amount Due\", \"Status\"],  // Modified headers for invoices\r\n  };\r\n\r\n  const renderTableData = () => {\r\n    const dataSets = { campaigns, payouts, invoices };\r\n    const data = dataSets[dataView] || [];\r\n    return data.map((item, index) => (\r\n      <TableRow key={index}>\r\n        {tableHeaders[dataView].map((header) => (\r\n          <TableCell key={header}>{item[header.toLowerCase().replace(/\\s/g, '_')]}</TableCell>\r\n        ))}\r\n      </TableRow>\r\n    ));\r\n  };\r\n  \r\n\r\n  const {\r\n    mutate: fetchUserInfo,\r\n    isError,\r\n    error,\r\n  } = useMutation(client.users.fetchUser, {\r\n    onSuccess: (data) => {\r\n      // Assuming the response structure is directly the data needed\r\n      const { first_name, last_name, companyname } = data;\r\n      setUserInfo({\r\n        firstName: first_name,\r\n        lastName: last_name,\r\n      });\r\n      setCompanyName(companyname);\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error fetching user or company info:\", error);\r\n    },\r\n  });\r\n\r\n  const { mutate: fetchCompanyData } = useMutation(client.companies.listFetch, {\r\n    onSuccess: (data) => {\r\n      // Assuming the response structure is directly the data needed\r\n      if (data && data.balance != undefined && data.credit_line != undefined) {\r\n        setAccountBalance(`$${parseFloat(data.balance).toFixed(2)}`);\r\n        setCreditline(\r\n          data.credit_line\r\n            ? `$${parseFloat(data.credit_line).toFixed(2)}`\r\n            : \"No Credit Line Established\"\r\n        );\r\n      } else {\r\n        // Handle case where data is undefined or not as expected\r\n        console.error(\"Received data is not in the expected format:\", data);\r\n        setAccountBalance(\"Data format error\");\r\n        setCreditline(\"Data format error\");\r\n      }\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error fetching company data:\", error);\r\n      setAccountBalance(\"Error loading balance\");\r\n      setCreditline(\"Error loading credit line\");\r\n    },\r\n  });\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const campaignsData = await client.campaigns.list();\r\n        const payoutsData = await client.payouts.list();\r\n        const invoicesData = await client.invoices.list();\r\n\r\n        setCampaigns(campaignsData);\r\n        setPayouts(payoutsData.payouts || []);\r\n        setInvoices(invoicesData.invoices || []);\r\n\r\n        // Aggregate data for chart\r\n        const combinedData = [...campaignsData, ...payoutsData.payouts, ...invoicesData.invoices]\r\n          .map(data => ({\r\n            date: new Date(data.proposal_date || data.payout_date || data.invoice_date).getTime(), // Normalize date\r\n            value: data.campaign_sum || data.amount || data.amount_due // Assume similar data structure\r\n          }))\r\n          .sort((a, b) => a.date - b.date); // Sort by date\r\n\r\n        setAggregateChartData(combinedData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  useEffect(() => {\r\n    isMounted && fetchUserInfo();\r\n    fetchCompanyData();\r\n  }, [isMounted]);\r\n  useEffect(() => {\r\n    if (isMounted) {\r\n      client.users.fetchUser().then(setUserInfo).catch(console.error);\r\n      client.companies.listFetch().then(data => {\r\n        setAccountBalance(`$${parseFloat(data.balance).toFixed(2)}`);\r\n      }).catch(console.error);\r\n    }\r\n  }, [isMounted]);\r\n\r\n  const renderAggregateChart = () => (\r\n    <StyledGraphContainer>\r\n      <LineChart width={500} height={300} data={aggregateChartData}>\r\n        <XAxis dataKey=\"date\" tickFormatter={(tick) => new Date(tick).toLocaleDateString()} />\r\n        <YAxis />\r\n        <Tooltip labelFormatter={(label) => new Date(label).toLocaleDateString()} />\r\n        <Line type=\"monotone\" dataKey=\"value\" stroke=\"#8884d8\" />\r\n      </LineChart>\r\n    </StyledGraphContainer>\r\n  );\r\n\r\n\r\n  const renderYouTubeVideos = () => (\r\n    <div>\r\n      {/* Example embedding a YouTube video */}\r\n      <iframe\r\n        width=\"560\"\r\n        height=\"315\"\r\n        src=\"https://www.youtube.com/watch?v=c71osU3gK64&ab_channel=TheCultureClub\"\r\n        title=\"YouTube video player\"\r\n        frameBorder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowFullScreen\r\n      ></iframe>\r\n    </div>\r\n  );\r\n  return (\r\n    <DashboardContainer>\r\n      <Navbar />\r\n      <RecentUpdatesBanner>\r\n          <RecentUpdates />\r\n        </RecentUpdatesBanner>\r\n      <ContentContainer>\r\n      \r\n      <LeftColumn>\r\n          <Select value={dataView} onChange={handleDataViewChange}>\r\n            <MenuItem value=\"campaigns\">Campaigns</MenuItem>\r\n            <MenuItem value=\"payouts\">Payouts</MenuItem>\r\n            <MenuItem value=\"invoices\">Invoices</MenuItem>\r\n          </Select>\r\n          <Typography variant=\"h6\">{userInfo.firstName} {userInfo.lastName}'s Dashboard - {companyname}</Typography>\r\n          <Typography variant=\"h6\">Account Balance: {accountBalance}</Typography>\r\n          <Typography variant=\"h6\">CreditLine Balance: {creditline}</Typography>\r\n\r\n          <Table>\r\n            <StyledTableHead>\r\n              <TableRow>\r\n                {tableHeaders[dataView].map(header => (\r\n                  <TableCell key={header}>{header}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </StyledTableHead>\r\n            <TableBody>{renderTableData()}</TableBody>\r\n          </Table>\r\n        </LeftColumn>\r\n        <RightColumn>\r\n        <Typography variant=\"h6\">Aggregate Usage</Typography>\r\n\r\n          {renderAggregateChart()}\r\n          <Typography variant=\"h6\">Watch Tutorials</Typography>\r\n\r\n          {renderYouTubeVideos()}\r\n        </RightColumn>\r\n      </ContentContainer>\r\n    </DashboardContainer>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}