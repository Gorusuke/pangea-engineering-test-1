{"ast":null,"code":"import { API_ENDPOINTS } from \"./endpoints\";\nimport { HttpClient } from \"./http-client\";\nclass Client {\n  constructor() {\n    this.users = {\n      login: input => HttpClient.post(API_ENDPOINTS.USERS_LOGIN, input),\n      register: input => HttpClient.post(API_ENDPOINTS.USERS_REGISTER, input)\n    };\n    this.campaigns = {\n      launch: input => HttpClient.post(API_ENDPOINTS.LAUNCH_CAMPAIGN, input),\n      list: () => HttpClient.get(API_ENDPOINTS.CAMPAIGNS),\n      create: input => HttpClient.post(API_ENDPOINTS.CAMPAIGNS, input),\n      fetch: input => HttpClient.get(`${API_ENDPOINTS.CAMPAIGNS}/${input}`),\n      update: input => HttpClient.post(API_ENDPOINTS.UPDATE_CAMPAIGN, input),\n      updateCreatorList: input => HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_LIST, input),\n      updateCreatorDetails: input => HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_DETAILS, input),\n      removeCreators: input => HttpClient.post(API_ENDPOINTS.REMOVE_CREATORS, input),\n      updateCreatorPrices: input => HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_PRICES, input),\n      updateCampaignSum: input => HttpClient.post(API_ENDPOINTS.UPDATE_CAMPAIGN_SUM, input),\n      updateLinksCodes: input => HttpClient.post(API_ENDPOINTS.UPDATE_LINKS_CODES, input),\n      complete: (index, input) => HttpClient.post(`${API_ENDPOINTS.COMPLETE_CAMPAIGN}/${index}`, input),\n      delete: input => HttpClient.post(API_ENDPOINTS.DELETE_CAMPAIGN, input),\n      generateReport: input => HttpClient.post(API_ENDPOINTS.GENERATE_REPORT, input)\n    };\n    this.payouts = {\n      list: () => HttpClient.get(API_ENDPOINTS.PAYOUTS),\n      create: input => HttpClient.post(API_ENDPOINTS.PAYOUTS, input),\n      delete: input => HttpClient.post(API_ENDPOINTS.PAYOUT_DELETE, input)\n    };\n    this.creators = {\n      list: () => HttpClient.get(API_ENDPOINTS.CREATORS),\n      payout: input => HttpClient.get(API_ENDPOINTS.CREATOR_PAYOUT_READ, {\n        sheetId: input\n      }),\n      data: () => HttpClient.get(API_ENDPOINTS.CREATOR_DATA_READ)\n    };\n    this.invoices = {\n      list: () => HttpClient.get(API_ENDPOINTS.INVOICES)\n    };\n  }\n}\nexport default new Client();","map":{"version":3,"names":["API_ENDPOINTS","HttpClient","Client","constructor","users","login","input","post","USERS_LOGIN","register","USERS_REGISTER","campaigns","launch","LAUNCH_CAMPAIGN","list","get","CAMPAIGNS","create","fetch","update","UPDATE_CAMPAIGN","updateCreatorList","UPDATE_CREATOR_LIST","updateCreatorDetails","UPDATE_CREATOR_DETAILS","removeCreators","REMOVE_CREATORS","updateCreatorPrices","UPDATE_CREATOR_PRICES","updateCampaignSum","UPDATE_CAMPAIGN_SUM","updateLinksCodes","UPDATE_LINKS_CODES","complete","index","COMPLETE_CAMPAIGN","delete","DELETE_CAMPAIGN","generateReport","GENERATE_REPORT","payouts","PAYOUTS","PAYOUT_DELETE","creators","CREATORS","payout","CREATOR_PAYOUT_READ","sheetId","data","CREATOR_DATA_READ","invoices","INVOICES"],"sources":["C:/Users/HP/Documents/GitHub/blitz/src/API/index.js"],"sourcesContent":["import { API_ENDPOINTS } from \"./endpoints\";\r\nimport { HttpClient } from \"./http-client\";\r\n\r\nclass Client {\r\n  users = {\r\n    login: (input) => HttpClient.post(API_ENDPOINTS.USERS_LOGIN, input),\r\n    register: (input) => HttpClient.post(API_ENDPOINTS.USERS_REGISTER, input),\r\n  };\r\n\r\n  campaigns = {\r\n    launch: (input) => HttpClient.post(API_ENDPOINTS.LAUNCH_CAMPAIGN, input),\r\n    list: () => HttpClient.get(API_ENDPOINTS.CAMPAIGNS),\r\n    create: (input) => HttpClient.post(API_ENDPOINTS.CAMPAIGNS, input),\r\n    fetch: (input) => HttpClient.get(`${API_ENDPOINTS.CAMPAIGNS}/${input}`),\r\n    update: (input) => HttpClient.post(API_ENDPOINTS.UPDATE_CAMPAIGN, input),\r\n    updateCreatorList: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_LIST, input),\r\n    updateCreatorDetails: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_DETAILS, input),\r\n    removeCreators: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.REMOVE_CREATORS, input),\r\n    updateCreatorPrices: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_PRICES, input),\r\n    updateCampaignSum: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.UPDATE_CAMPAIGN_SUM, input),\r\n    updateLinksCodes: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.UPDATE_LINKS_CODES, input),\r\n    complete: (index, input) =>\r\n      HttpClient.post(`${API_ENDPOINTS.COMPLETE_CAMPAIGN}/${index}`, input),\r\n    delete: (input) => HttpClient.post(API_ENDPOINTS.DELETE_CAMPAIGN, input),\r\n    generateReport: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.GENERATE_REPORT, input),\r\n  };\r\n\r\n  payouts = {\r\n    list: () => HttpClient.get(API_ENDPOINTS.PAYOUTS),\r\n    create: (input) => HttpClient.post(API_ENDPOINTS.PAYOUTS, input),\r\n    delete: (input) => HttpClient.post(API_ENDPOINTS.PAYOUT_DELETE, input),\r\n  };\r\n\r\n  creators = {\r\n    list: () => HttpClient.get(API_ENDPOINTS.CREATORS),\r\n    payout: (input) =>\r\n      HttpClient.get(API_ENDPOINTS.CREATOR_PAYOUT_READ, { sheetId: input }),\r\n    data: () => HttpClient.get(API_ENDPOINTS.CREATOR_DATA_READ),\r\n  };\r\n\r\n  invoices = {\r\n    list: () => HttpClient.get(API_ENDPOINTS.INVOICES),\r\n  };\r\n}\r\n\r\nexport default new Client();\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}