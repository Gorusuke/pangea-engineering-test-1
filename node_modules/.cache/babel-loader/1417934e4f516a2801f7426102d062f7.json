{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\blitz\\\\src\\\\Pages\\\\Dashboard\\\\Search\\\\leftColumnSearch.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Grid, FormControl, InputLabel, Select, MenuItem, TextField, Button, makeStyles, Checkbox, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    margin: theme.spacing(2),\n    width: 200\n  },\n  content: {\n    marginTop: theme.spacing(3)\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  table: {\n    minWidth: 650\n  },\n  filterContainer: {\n    marginBottom: theme.spacing(3)\n  },\n  csvTable: {\n    width: \"100%\"\n  }\n}));\nconst LeftColumn = ({\n  onCreatorSelect\n}) => {\n  _s();\n  const classes = useStyles();\n  const [filter, setFilter] = useState(\"\");\n  const [region, setRegion] = useState(\"\"); // Default to showing ALL Regions\n  const [platform, setPlatform] = useState(\"TikTok\"); // Default to TikTok Brand, and remove the option for None\n  const [promotionType, setPromotionType] = useState(\"Brand\"); // Assuming you want to start with TikTok Brand\n  const [data, setData] = useState([]);\n  const [race, setRace] = useState(\"\");\n  const [gender, setGender] = useState(\"\");\n  const [furtherLocation, setFurtherLocation] = useState(\"\");\n  const [selectedItems, setSelectedItems] = useState(new Set());\n  const [avgViews, setAvgViews] = useState(\"\");\n  const [selectedCreatorsData, setSelectedCreatorsData] = useState([]);\n  const [campaignName, setCampaignName] = useState(\"\");\n  const [dialogMessage, setDialogMessage] = useState(\"\");\n  const [campaignSum, setCampaignSum] = useState(0);\n  const handleResetFilters = () => {\n    setRegion(\"\");\n    setPlatform(\"TikTok\");\n    setPromotionType(\"Brand\");\n    setRace(\"\");\n    setGender(\"\");\n    setFurtherLocation(\"\");\n    setFilter(\"\");\n    setAvgViews(\"\"); // Reset this as well if you're including the AVG Views Filter\n  };\n  useEffect(() => {\n    const sum = calculateTotalCampaignSum();\n    setCampaignSum(sum);\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:5100/api/sheets/creatorData/read\");\n        if (!response.ok) throw new Error(\"Network response was not ok\");\n        const jsonData = await response.json();\n        setData(jsonData); // Assuming jsonData is an array of arrays\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    };\n    fetchData();\n  }, [selectedCreatorsData]);\n  const platformIndexMap = {\n    TikTok: 2,\n    // Column 3 in human-readable form, index 2 in zero-based indexing\n    Instagram: 3,\n    // Column 4 in human-readable form, index 3 in zero-based indexing\n    Youtube: 4 // Column 5 in human-readable form, index 4 in zero-based indexing\n  };\n  const priceColumnMap = {\n    TikTok: {\n      Sound: 8,\n      // Column index for TikTok Sound price\n      Brand: 9 // Column index for TikTok Brand price\n    },\n    Instagram: {\n      Sound: 11,\n      // Column index for Instagram Sound price\n      Brand: 12 // Column index for Instagram Brand price\n    }\n  };\n  const handleFilterChange = e => {\n    setFilter(e.target.value.toLowerCase());\n  };\n  const handleRegionChange = e => {\n    setRegion(e.target.value);\n  };\n  const handlePlatformChange = e => {\n    const newPlatform = e.target.value;\n    setPlatform(newPlatform);\n    // Reset promotionType based on the platform selected\n    // Default to the first available promotion type for the new platform\n    setPromotionType(promotionTypeOptions[newPlatform][0]);\n  };\n  // Assuming each row in your data includes a unique identifier at index 0\n  // Assuming the structure of your `data` array and the unique identifier is at index 0\n  const handleSelectItem = uniqueId => {\n    var _priceColumnMap$platf;\n    // Find the item data based on uniqueId\n    const item = filteredData.find(item => item[0] === uniqueId);\n    if (!item) return; // Exit if item not found\n\n    // Extract pricing info based on platform and promotionType\n    const priceColumn = ((_priceColumnMap$platf = priceColumnMap[platform]) === null || _priceColumnMap$platf === void 0 ? void 0 : _priceColumnMap$platf[promotionType]) || null;\n    const price = item[priceColumn] ? item[priceColumn] : \"Unknown\";\n\n    // Construct relevant data object for the selected item\n    const relevantData = {\n      id: uniqueId,\n      name: item[0],\n      // Assuming the name is at index 0 of item\n      price: price,\n      other: item[17] // Assuming additional info is at index 17\n    };\n\n    // Check if item is already selected, toggle its state accordingly\n    const isNewSelection = !selectedItems.has(uniqueId);\n    setSelectedItems(prevSelectedItems => {\n      const updatedSet = new Set(prevSelectedItems);\n      if (isNewSelection) {\n        updatedSet.add(uniqueId);\n      } else {\n        updatedSet.delete(uniqueId);\n      }\n      return updatedSet;\n    });\n\n    // Update selected creators data\n    setSelectedCreatorsData(prev => {\n      return isNewSelection ? [...prev, relevantData] // Add to selected creators if new selection\n      : prev.filter(creator => creator.id !== uniqueId); // Remove if deselection\n    });\n\n    // Optionally, trigger any action with the selected creator's data\n    if (isNewSelection) {\n      props.onCreatorSelect(relevantData);\n    }\n  };\n  const searchFilter = row => {\n    // If there is no filter set, don't filter out this row\n    if (!filter) return true;\n\n    // Assuming columns at index 5, 6, and 7 are the \"viability\" columns\n    const searchColumns = [0, 5, 6, 7];\n    return searchColumns.some(index => {\n      // Ensure that undefined values are not causing an error\n      const value = row[index] ? row[index].toString().toLowerCase() : \"\";\n      return value.toString().toLowerCase().includes(filter);\n    });\n  };\n  const calculateTotalCampaignSum = () => {\n    const sum = selectedCreatorsData.reduce((accumulator, creator) => {\n      // Remove any non-numeric characters (including the dollar sign) before conversion\n      const cleanedPriceString = creator.price.replace(/[^0-9.-]+/g, \"\");\n      const price = parseFloat(cleanedPriceString);\n      // Check if the conversion was successful (i.e., the result is a finite number)\n      if (isFinite(price)) {\n        return accumulator + price;\n      } else {\n        console.error(`Invalid price format detected: ${creator.price}`);\n        return accumulator;\n      }\n    }, 0);\n    return sum;\n  };\n  const handlePromotionTypeChange = e => {\n    setPromotionType(e.target.value);\n  };\n  const getColumnWidth = index => {\n    // Define custom widths for specific columns by their index or header name\n    const customWidths = {\n      0: \"50px\",\n      // Example: Column for checkboxes might be narrower\n      1: \"150px\" // Adjust width for the second column\n      // Add more custom widths as needed\n      // You can also use headers[index] to set widths by header name if preferable\n    };\n\n    // Return the custom width if defined, otherwise return a default width\n    return customWidths[index] || \"125px\"; // Default width for columns not explicitly set\n  };\n  const promotionTypeOptions = {\n    TikTok: [\"Sound\", \"Brand\", \"Livestream\"],\n    Instagram: [\"Sound\", \"Brand\", \"Story Set\"],\n    Youtube: [\"30 Second Integration\", \"60 Second Integration\"]\n  };\n  const platformToColumnsMap = {\n    TikTok: [2],\n    // Column 3 in human-readable form\n    Instagram: [3],\n    // Column 4 in human-readable form\n    Youtube: [4] // Column 5 in human-readable form\n  };\n  // ... inside your component where you define platformColumns\n  const alwaysVisibleColumns = [1, 8, 15, 18]; // Columns 9, 16, and 18 in human-readable form\n\n  // Determine which columns to display based on the selected platform and promotion type\n  const columnsToShow = [...alwaysVisibleColumns, ...(platformToColumnsMap[platform] || []), ...(promotionType && platform ? [priceColumnMap[platform][promotionType] + 1] : [])];\n  const headers = data[0] || []; // Fallback to an empty array if data[0] is undefined\n\n  const filteredData = data.filter(row => {\n    var _row$, _row$2, _row$3, _row$4, _row$5;\n    const regionMatch = region ? (_row$ = row[6]) === null || _row$ === void 0 ? void 0 : _row$.toString().toLowerCase().includes(region.toLowerCase()) : true;\n\n    // Ensuring platform has a non-NULL and non-empty value\n    const platformMatch = platform ? !isNaN(row[platformIndexMap[platform]]) && row[platformIndexMap[platform]] !== null && row[platformIndexMap[platform]] !== \"\" : true;\n    let raceMatch = race ? (_row$2 = row[4]) === null || _row$2 === void 0 ? void 0 : _row$2.toString().toLowerCase().includes(race.toLowerCase()) : true;\n    let genderMatch = gender ? (_row$3 = row[4]) === null || _row$3 === void 0 ? void 0 : _row$3.toString().toLowerCase().split(/[\\s,]+/).includes(gender.toLowerCase()) // Assuming gender is in column 6 (index 5)\n    : true;\n    const locationMatch = furtherLocation ? (_row$4 = row[4]) === null || _row$4 === void 0 ? void 0 : _row$4.toString().toLowerCase().includes(furtherLocation.toLowerCase()) : true;\n\n    // Special handling for gender to ensure \"Male\" does not match \"Female\"\n    if (gender === \"male\" && (_row$5 = row[4]) !== null && _row$5 !== void 0 && _row$5.toLowerCase().includes(\"female\")) {\n      genderMatch = false;\n    }\n\n    // Updated to ensure 'Promotion Type' is not NULL or empty if selected\n    const promotionTypeColumnIndex = promotionType && platform ? priceColumnMap[platform][promotionType] : null;\n    const promotionTypeMatch = promotionTypeColumnIndex !== null ? row[promotionTypeColumnIndex] !== null && row[promotionTypeColumnIndex] !== \"\" : true;\n    return regionMatch && platformMatch && raceMatch && genderMatch && locationMatch && promotionTypeMatch && searchFilter(row);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          className: classes.filterContainer,\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"region-select-label\",\n              children: \"Select Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"region-select-label\",\n              id: \"region-select\",\n              value: region,\n              onChange: handleRegionChange,\n              label: \"Select Region\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"ALL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"NACAUKAUS\",\n                children: \"NACAUKAUS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"EU\",\n                children: \"EU\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"LATAM\",\n                children: \"LATAM\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 311,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Asia\",\n                children: \"Asia\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"platform-select-label\",\n              children: \"Platform\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"platform-select-label\",\n              id: \"platform-select\",\n              value: platform,\n              onChange: handlePlatformChange,\n              label: \"Platform\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"TikTok\",\n                children: \"TikTok\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 327,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Instagram\",\n                children: \"Instagram\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"promotion-type-label\",\n              children: \"Promotion Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"promotion-type-label\",\n              id: \"promotion-type-select\",\n              value: promotionType,\n              onChange: handlePromotionTypeChange,\n              label: \"Promotion Type\",\n              children: platform && promotionTypeOptions[platform].map(type => /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 346,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"race-select-label\",\n              children: \"Race\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"race-select-label\",\n              id: \"race-select\",\n              value: race,\n              onChange: e => setRace(e.target.value),\n              label: \"Race\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Asian\",\n                children: \"Asian\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 365,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Black\",\n                children: \"Black\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Hispanic\",\n                children: \"Hispanic\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"White\",\n                children: \"White\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"gender-select-label\",\n              children: \"Gender\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"gender-select-label\",\n              id: \"gender-select\",\n              value: gender,\n              onChange: e => setGender(e.target.value),\n              label: \"Gender\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Male\",\n                children: \"Male\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Female\",\n                children: \"Female\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 386,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Other\",\n                children: \"Other\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"further-location-select-label\",\n              children: \"Location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"further-location-select-label\",\n              id: \"further-location-select\",\n              value: furtherLocation,\n              onChange: e => setFurtherLocation(e.target.value),\n              label: \"Further Location\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 402,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"US\",\n                children: \"US\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 405,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"UK\",\n                children: \"UK\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"Canada\",\n                children: \"Canada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            variant: \"outlined\",\n            className: classes.formControl,\n            fullWidth: true,\n            children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n              id: \"avg-views-select-label\",\n              children: \"AVG Views\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              labelId: \"avg-views-select-label\",\n              id: \"avg-views-select\",\n              value: avgViews,\n              onChange: e => setAvgViews(e.target.value),\n              label: \"AVG Views\",\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"\",\n                children: /*#__PURE__*/_jsxDEV(\"em\", {\n                  children: \"None\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"10-50000\",\n                children: \"10-50,000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"50000-100000\",\n                children: \"50,000-100,000\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: \"100000+\",\n                children: \"100,000+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"search-field\",\n            label: \"Search\",\n            variant: \"outlined\",\n            size: \"small\",\n            fullWidth: true,\n            className: classes.formControl,\n            value: filter,\n            onChange: handleFilterChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleResetFilters,\n        className: classes.button,\n        fullWidth: true,\n        children: \"Reset Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.csvSection,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"csvTable\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 19\n              }, this), headers.map((header, index) => columnsToShow.includes(index + 1) && /*#__PURE__*/_jsxDEV(\"th\", {\n                style: {\n                  width: getColumnWidth(index)\n                },\n                children: header\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 25\n              }, this) // Apply dynamic width based on column index\n              )]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: filteredData.map((row, idx) => {\n              if (!row) return null; // Ensure row is not undefined\n\n              const isSelected = selectedItems.has(row[0]); // Check if the row is selected\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  backgroundColor: isSelected ? \"lightgreen\" : \"transparent\"\n                } // Highlight selected rows\n                ,\n                onClick: () => handleSelectItem(row[0]) // Add row click handler\n                ,\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: isSelected,\n                    onChange: e => {\n                      e.stopPropagation(); // Prevent row click event from firing\n                      handleSelectItem(row[0]);\n                    },\n                    color: \"primary\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 496,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 495,\n                  columnNumber: 23\n                }, this), row.map((value, index) => columnsToShow.includes(index + 1) ? /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    width: getColumnWidth(index)\n                  },\n                  children: index === 14 ? /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: value,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: value\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 31\n                  }, this) : value !== null && value !== void 0 ? value : \"N/A\"\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 27\n                }, this) : null)]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 459,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 291,\n    columnNumber: 5\n  }, this);\n};\n_s(LeftColumn, \"PWBregtpoTvjIVDvm46Uw2s+tGE=\", false, function () {\n  return [useStyles];\n});\n_c = LeftColumn;\nexport default LeftColumn;\nvar _c;\n$RefreshReg$(_c, \"LeftColumn\");","map":{"version":3,"names":["React","useState","useEffect","Grid","FormControl","InputLabel","Select","MenuItem","TextField","Button","makeStyles","Checkbox","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","jsxDEV","_jsxDEV","useStyles","theme","formControl","margin","spacing","width","content","marginTop","selectEmpty","button","table","minWidth","filterContainer","marginBottom","csvTable","LeftColumn","onCreatorSelect","_s","classes","filter","setFilter","region","setRegion","platform","setPlatform","promotionType","setPromotionType","data","setData","race","setRace","gender","setGender","furtherLocation","setFurtherLocation","selectedItems","setSelectedItems","Set","avgViews","setAvgViews","selectedCreatorsData","setSelectedCreatorsData","campaignName","setCampaignName","dialogMessage","setDialogMessage","campaignSum","setCampaignSum","handleResetFilters","sum","calculateTotalCampaignSum","fetchData","response","fetch","ok","Error","jsonData","json","error","console","platformIndexMap","TikTok","Instagram","Youtube","priceColumnMap","Sound","Brand","handleFilterChange","e","target","value","toLowerCase","handleRegionChange","handlePlatformChange","newPlatform","promotionTypeOptions","handleSelectItem","uniqueId","_priceColumnMap$platf","item","filteredData","find","priceColumn","price","relevantData","id","name","other","isNewSelection","has","prevSelectedItems","updatedSet","add","delete","prev","creator","props","searchFilter","row","searchColumns","some","index","toString","includes","reduce","accumulator","cleanedPriceString","replace","parseFloat","isFinite","handlePromotionTypeChange","getColumnWidth","customWidths","platformToColumnsMap","alwaysVisibleColumns","columnsToShow","headers","_row$","_row$2","_row$3","_row$4","_row$5","regionMatch","platformMatch","isNaN","raceMatch","genderMatch","split","locationMatch","promotionTypeColumnIndex","promotionTypeMatch","children","container","className","xs","variant","fileName","_jsxFileName","lineNumber","columnNumber","labelId","onChange","label","map","type","fullWidth","size","color","onClick","csvSection","elevation","header","style","idx","isSelected","backgroundColor","checked","stopPropagation","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/GitHub/blitz/src/Pages/Dashboard/Search/leftColumnSearch.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  TextField,\r\n  Button,\r\n  makeStyles,\r\n  Checkbox,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n\r\n    margin: theme.spacing(2),\r\n    width: 200,\r\n\r\n  },\r\n  content: {\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1),\r\n  },\r\n \r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  filterContainer: {\r\n    marginBottom: theme.spacing(3),\r\n  },\r\n \r\n  csvTable: {\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nconst LeftColumn = ({ onCreatorSelect }) => {\r\n  const classes = useStyles();\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [region, setRegion] = useState(\"\"); // Default to showing ALL Regions\r\n  const [platform, setPlatform] = useState(\"TikTok\"); // Default to TikTok Brand, and remove the option for None\r\n  const [promotionType, setPromotionType] = useState(\"Brand\"); // Assuming you want to start with TikTok Brand\r\n  const [data, setData] = useState([]);\r\n  const [race, setRace] = useState(\"\");\r\n  const [gender, setGender] = useState(\"\");\r\n  const [furtherLocation, setFurtherLocation] = useState(\"\");\r\n  const [selectedItems, setSelectedItems] = useState(new Set());\r\n  const [avgViews, setAvgViews] = useState(\"\");\r\n  const [selectedCreatorsData, setSelectedCreatorsData] = useState([]);\r\n  const [campaignName, setCampaignName] = useState(\"\");\r\n  const [dialogMessage, setDialogMessage] = useState(\"\");\r\n  const [campaignSum, setCampaignSum] = useState(0);\r\n\r\n  const handleResetFilters = () => {\r\n    setRegion(\"\");\r\n    setPlatform(\"TikTok\");\r\n    setPromotionType(\"Brand\");\r\n    setRace(\"\");\r\n    setGender(\"\");\r\n    setFurtherLocation(\"\");\r\n    setFilter(\"\");\r\n    setAvgViews(\"\"); // Reset this as well if you're including the AVG Views Filter\r\n  };\r\n  useEffect(() => {\r\n    const sum = calculateTotalCampaignSum();\r\n    setCampaignSum(sum);\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:5100/api/sheets/creatorData/read\",\r\n        );\r\n        if (!response.ok) throw new Error(\"Network response was not ok\");\r\n        const jsonData = await response.json();\r\n        setData(jsonData); // Assuming jsonData is an array of arrays\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch data:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, [selectedCreatorsData]);\r\n  const platformIndexMap = {\r\n    TikTok: 2, // Column 3 in human-readable form, index 2 in zero-based indexing\r\n    Instagram: 3, // Column 4 in human-readable form, index 3 in zero-based indexing\r\n    Youtube: 4, // Column 5 in human-readable form, index 4 in zero-based indexing\r\n  };\r\n\r\n  const priceColumnMap = {\r\n    TikTok: {\r\n      Sound: 8, // Column index for TikTok Sound price\r\n      Brand: 9, // Column index for TikTok Brand price\r\n    },\r\n    Instagram: {\r\n      Sound: 11, // Column index for Instagram Sound price\r\n      Brand: 12, // Column index for Instagram Brand price\r\n    },\r\n  };\r\n  const handleFilterChange = (e) => {\r\n    setFilter(e.target.value.toLowerCase());\r\n  };\r\n\r\n  const handleRegionChange = (e) => {\r\n    setRegion(e.target.value);\r\n  };\r\n\r\n  const handlePlatformChange = (e) => {\r\n    const newPlatform = e.target.value;\r\n    setPlatform(newPlatform);\r\n    // Reset promotionType based on the platform selected\r\n    // Default to the first available promotion type for the new platform\r\n    setPromotionType(promotionTypeOptions[newPlatform][0]);\r\n  };\r\n  // Assuming each row in your data includes a unique identifier at index 0\r\n  // Assuming the structure of your `data` array and the unique identifier is at index 0\r\n  const handleSelectItem = (uniqueId) => {\r\n    // Find the item data based on uniqueId\r\n    const item = filteredData.find((item) => item[0] === uniqueId);\r\n    if (!item) return; // Exit if item not found\r\n  \r\n    // Extract pricing info based on platform and promotionType\r\n    const priceColumn = priceColumnMap[platform]?.[promotionType] || null;\r\n    const price = item[priceColumn] ? item[priceColumn] : \"Unknown\";\r\n  \r\n    // Construct relevant data object for the selected item\r\n    const relevantData = {\r\n      id: uniqueId,\r\n      name: item[0],  // Assuming the name is at index 0 of item\r\n      price: price,\r\n      other: item[17]  // Assuming additional info is at index 17\r\n    };\r\n  \r\n    // Check if item is already selected, toggle its state accordingly\r\n    const isNewSelection = !selectedItems.has(uniqueId);\r\n    setSelectedItems((prevSelectedItems) => {\r\n      const updatedSet = new Set(prevSelectedItems);\r\n      if (isNewSelection) {\r\n        updatedSet.add(uniqueId);\r\n      } else {\r\n        updatedSet.delete(uniqueId);\r\n      }\r\n      return updatedSet;\r\n    });\r\n  \r\n    // Update selected creators data\r\n    setSelectedCreatorsData((prev) => {\r\n      return isNewSelection\r\n        ? [...prev, relevantData]  // Add to selected creators if new selection\r\n        : prev.filter((creator) => creator.id !== uniqueId);  // Remove if deselection\r\n    });\r\n  \r\n    // Optionally, trigger any action with the selected creator's data\r\n    if (isNewSelection) {\r\n      props.onCreatorSelect(relevantData);\r\n    }\r\n  };\r\n  \r\n  const searchFilter = (row) => {\r\n    // If there is no filter set, don't filter out this row\r\n    if (!filter) return true;\r\n\r\n    // Assuming columns at index 5, 6, and 7 are the \"viability\" columns\r\n    const searchColumns = [0, 5, 6, 7];\r\n    return searchColumns.some((index) => {\r\n      // Ensure that undefined values are not causing an error\r\n      const value = row[index] ? row[index].toString().toLowerCase() : \"\";\r\n      return value.toString().toLowerCase().includes(filter);\r\n    });\r\n  };\r\n  const calculateTotalCampaignSum = () => {\r\n    const sum = selectedCreatorsData.reduce((accumulator, creator) => {\r\n      // Remove any non-numeric characters (including the dollar sign) before conversion\r\n      const cleanedPriceString = creator.price.replace(/[^0-9.-]+/g, \"\");\r\n      const price = parseFloat(cleanedPriceString);\r\n      // Check if the conversion was successful (i.e., the result is a finite number)\r\n      if (isFinite(price)) {\r\n        return accumulator + price;\r\n      } else {\r\n        console.error(`Invalid price format detected: ${creator.price}`);\r\n        return accumulator;\r\n      }\r\n    }, 0);\r\n    return sum;\r\n  };\r\n\r\n  const handlePromotionTypeChange = (e) => {\r\n    setPromotionType(e.target.value);\r\n  };\r\n  const getColumnWidth = (index) => {\r\n    // Define custom widths for specific columns by their index or header name\r\n    const customWidths = {\r\n      0: \"50px\", // Example: Column for checkboxes might be narrower\r\n      1: \"150px\", // Adjust width for the second column\r\n      // Add more custom widths as needed\r\n      // You can also use headers[index] to set widths by header name if preferable\r\n    };\r\n\r\n    // Return the custom width if defined, otherwise return a default width\r\n    return customWidths[index] || \"125px\"; // Default width for columns not explicitly set\r\n  };\r\n  const promotionTypeOptions = {\r\n    TikTok: [\"Sound\", \"Brand\", \"Livestream\"],\r\n    Instagram: [\"Sound\", \"Brand\", \"Story Set\"],\r\n    Youtube: [\"30 Second Integration\", \"60 Second Integration\"],\r\n  };\r\n  const platformToColumnsMap = {\r\n    TikTok: [2], // Column 3 in human-readable form\r\n    Instagram: [3], // Column 4 in human-readable form\r\n    Youtube: [4], // Column 5 in human-readable form\r\n  };\r\n  // ... inside your component where you define platformColumns\r\n  const alwaysVisibleColumns = [1, 8, 15, 18]; // Columns 9, 16, and 18 in human-readable form\r\n\r\n  // Determine which columns to display based on the selected platform and promotion type\r\n  const columnsToShow = [\r\n    ...alwaysVisibleColumns,\r\n    ...(platformToColumnsMap[platform] || []),\r\n    ...(promotionType && platform\r\n      ? [priceColumnMap[platform][promotionType] + 1]\r\n      : []),\r\n  ];\r\n\r\n  const headers = data[0] || []; // Fallback to an empty array if data[0] is undefined\r\n\r\n  const filteredData = data.filter((row) => {\r\n    const regionMatch = region\r\n      ? row[6]?.toString().toLowerCase().includes(region.toLowerCase())\r\n      : true;\r\n\r\n    // Ensuring platform has a non-NULL and non-empty value\r\n    const platformMatch = platform\r\n      ? !isNaN(row[platformIndexMap[platform]]) &&\r\n        row[platformIndexMap[platform]] !== null &&\r\n        row[platformIndexMap[platform]] !== \"\"\r\n      : true;\r\n\r\n    let raceMatch = race\r\n      ? row[4]?.toString().toLowerCase().includes(race.toLowerCase())\r\n      : true;\r\n    let genderMatch = gender\r\n      ? row[4]\r\n          ?.toString()\r\n          .toLowerCase()\r\n          .split(/[\\s,]+/)\r\n          .includes(gender.toLowerCase()) // Assuming gender is in column 6 (index 5)\r\n      : true;\r\n\r\n    const locationMatch = furtherLocation\r\n      ? row[4]?.toString().toLowerCase().includes(furtherLocation.toLowerCase())\r\n      : true;\r\n\r\n    // Special handling for gender to ensure \"Male\" does not match \"Female\"\r\n    if (gender === \"male\" && row[4]?.toLowerCase().includes(\"female\")) {\r\n      genderMatch = false;\r\n    }\r\n\r\n    // Updated to ensure 'Promotion Type' is not NULL or empty if selected\r\n    const promotionTypeColumnIndex =\r\n      promotionType && platform\r\n        ? priceColumnMap[platform][promotionType]\r\n        : null;\r\n    const promotionTypeMatch =\r\n      promotionTypeColumnIndex !== null\r\n        ? row[promotionTypeColumnIndex] !== null &&\r\n          row[promotionTypeColumnIndex] !== \"\"\r\n        : true;\r\n\r\n    return (\r\n      regionMatch &&\r\n      platformMatch &&\r\n      raceMatch &&\r\n      genderMatch &&\r\n      locationMatch &&\r\n      promotionTypeMatch &&\r\n      searchFilter(row)\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Grid container spacing={3}>\r\n          <div className={classes.content}>\r\n          <Grid item xs={12} className={classes.filterContainer}>\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel id=\"region-select-label\">\r\n                    Select Region\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"region-select-label\"\r\n                    id=\"region-select\"\r\n                    value={region}\r\n                    onChange={handleRegionChange}\r\n                    label=\"Select Region\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>ALL</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"NACAUKAUS\">NACAUKAUS</MenuItem>\r\n                    <MenuItem value=\"EU\">EU</MenuItem>\r\n                    <MenuItem value=\"LATAM\">LATAM</MenuItem>\r\n                    <MenuItem value=\"Asia\">Asia</MenuItem>\r\n\r\n                    {/* More regions */}\r\n                  </Select>\r\n                </FormControl>\r\n                {/* Platform Dropdown */}\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel id=\"platform-select-label\">Platform</InputLabel>\r\n                  <Select\r\n                    labelId=\"platform-select-label\"\r\n                    id=\"platform-select\"\r\n                    value={platform}\r\n                    onChange={handlePlatformChange}\r\n                    label=\"Platform\"\r\n                  >\r\n                    <MenuItem value=\"TikTok\">TikTok</MenuItem>\r\n                    <MenuItem value=\"Instagram\">Instagram</MenuItem>\r\n                 \r\n                  </Select>\r\n                </FormControl>\r\n                {/* Promotion Type Dropdown */}\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel id=\"promotion-type-label\">\r\n                    Promotion Type\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"promotion-type-label\"\r\n                    id=\"promotion-type-select\"\r\n                    value={promotionType}\r\n                    onChange={handlePromotionTypeChange}\r\n                    label=\"Promotion Type\"\r\n                  >\r\n                    {platform &&\r\n                      promotionTypeOptions[platform].map((type) => (\r\n                        <MenuItem key={type} value={type}>\r\n                          {type}\r\n                        </MenuItem>\r\n                      ))}\r\n                  </Select>\r\n                </FormControl>\r\n                {/* Race Dropdown */}\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel id=\"race-select-label\">Race</InputLabel>\r\n                  <Select\r\n                    labelId=\"race-select-label\"\r\n                    id=\"race-select\"\r\n                    value={race}\r\n                    onChange={(e) => setRace(e.target.value)}\r\n                    label=\"Race\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"Asian\">Asian</MenuItem>\r\n                    <MenuItem value=\"Black\">Black</MenuItem>\r\n                    <MenuItem value=\"Hispanic\">Hispanic</MenuItem>\r\n                    <MenuItem value=\"White\">White</MenuItem>\r\n                    <MenuItem value=\"Other\">Other</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                {/* Gender Dropdown */}\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel id=\"gender-select-label\">Gender</InputLabel>\r\n                  <Select\r\n                    labelId=\"gender-select-label\"\r\n                    id=\"gender-select\"\r\n                    value={gender}\r\n                    onChange={(e) => setGender(e.target.value)}\r\n                    label=\"Gender\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"Male\">Male</MenuItem>\r\n                    <MenuItem value=\"Female\">Female</MenuItem>\r\n                    <MenuItem value=\"Other\">Other</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                {/* Further Location Dropdown */}\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel id=\"further-location-select-label\">\r\n                    Location\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"further-location-select-label\"\r\n                    id=\"further-location-select\"\r\n                    value={furtherLocation}\r\n                    onChange={(e) => setFurtherLocation(e.target.value)}\r\n                    label=\"Further Location\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value=\"US\">US</MenuItem>\r\n                    <MenuItem value=\"UK\">UK</MenuItem>\r\n                    <MenuItem value=\"Canada\">Canada</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n                {/* For the 'Reset Filters' and 'AVG Views Filter' */}\r\n                  <FormControl\r\n                    variant=\"outlined\"\r\n                    className={classes.formControl}\r\n                    fullWidth\r\n                  >\r\n                    <InputLabel id=\"avg-views-select-label\">\r\n                      AVG Views\r\n                    </InputLabel>\r\n                    <Select\r\n                      labelId=\"avg-views-select-label\"\r\n                      id=\"avg-views-select\"\r\n                      value={avgViews}\r\n                      onChange={(e) => setAvgViews(e.target.value)}\r\n                      label=\"AVG Views\"\r\n                    >\r\n                      {/* AVG Views MenuItems */}\r\n                      <MenuItem value=\"\">\r\n                        <em>None</em>\r\n                      </MenuItem>\r\n                      <MenuItem value=\"10-50000\">10-50,000</MenuItem>\r\n                      <MenuItem value=\"50000-100000\">50,000-100,000</MenuItem>\r\n                      <MenuItem value=\"100000+\">100,000+</MenuItem>\r\n                    </Select>\r\n                  </FormControl>\r\n                  <TextField\r\n                    id=\"search-field\"\r\n                    label=\"Search\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    fullWidth\r\n                    className={classes.formControl}\r\n                    value={filter}\r\n                    onChange={handleFilterChange}\r\n                  />\r\n            </Grid>\r\n          </div>\r\n\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleResetFilters}\r\n            className={classes.button}\r\n            fullWidth\r\n          >\r\n            Reset Filters\r\n          </Button>\r\n        </Grid>\r\n\r\n        <div className={classes.csvSection}>\r\n          {/* CSV Section */}\r\n          <Paper elevation={3}>\r\n            <table className=\"csvTable\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Select</th>\r\n\r\n                  {headers.map(\r\n                    (header, index) =>\r\n                      columnsToShow.includes(index + 1) && (\r\n                        <th\r\n                          key={index}\r\n                          style={{ width: getColumnWidth(index) }}\r\n                        >\r\n                          {header}\r\n                        </th>\r\n                      ), // Apply dynamic width based on column index\r\n                  )}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredData.map((row, idx) => {\r\n                  if (!row) return null; // Ensure row is not undefined\r\n\r\n                  const isSelected = selectedItems.has(row[0]); // Check if the row is selected\r\n                  return (\r\n                    <tr\r\n                      key={idx}\r\n                      style={{\r\n                        backgroundColor: isSelected\r\n                          ? \"lightgreen\"\r\n                          : \"transparent\",\r\n                      }} // Highlight selected rows\r\n                      onClick={() => handleSelectItem(row[0])} // Add row click handler\r\n                    >\r\n                      <td>\r\n                        <Checkbox\r\n                          checked={isSelected}\r\n                          onChange={(e) => {\r\n                            e.stopPropagation(); // Prevent row click event from firing\r\n                            handleSelectItem(row[0]);\r\n                          }}\r\n                          color=\"primary\"\r\n                        />\r\n                      </td>\r\n                      {row.map((value, index) =>\r\n                        columnsToShow.includes(index + 1) ? (\r\n                          <td\r\n                            key={index}\r\n                            style={{ width: getColumnWidth(index) }}\r\n                          >\r\n                            {index === 14 ? (\r\n                              <a\r\n                                href={value}\r\n                                target=\"_blank\"\r\n                                rel=\"noopener noreferrer\"\r\n                              >\r\n                                {value}\r\n                              </a>\r\n                            ) : (\r\n                              value ?? \"N/A\"\r\n                            )}\r\n                          </td>\r\n                        ) : null,\r\n                      )}\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </Paper>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftColumn;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SACEC,IAAI,EACJC,WAAW,EACXC,UAAU,EACVC,MAAM,EACNC,QAAQ,EACRC,SAAS,EACTC,MAAM,EACNC,UAAU,EACVC,QAAQ,EACRC,KAAK,EACLC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,SAAS,EACTC,QAAQ,QACH,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,SAAS,GAAGX,UAAU,CAAEY,KAAK,KAAM;EACvCC,WAAW,EAAE;IAEXC,MAAM,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC;IACxBC,KAAK,EAAE;EAET,CAAC;EACDC,OAAO,EAAE;IACPC,SAAS,EAAEN,KAAK,CAACG,OAAO,CAAC,CAAC;EAC5B,CAAC;EACDI,WAAW,EAAE;IACXD,SAAS,EAAEN,KAAK,CAACG,OAAO,CAAC,CAAC;EAC5B,CAAC;EACDK,MAAM,EAAE;IACNN,MAAM,EAAEF,KAAK,CAACG,OAAO,CAAC,CAAC;EACzB,CAAC;EAEDM,KAAK,EAAE;IACLC,QAAQ,EAAE;EACZ,CAAC;EACDC,eAAe,EAAE;IACfC,YAAY,EAAEZ,KAAK,CAACG,OAAO,CAAC,CAAC;EAC/B,CAAC;EAEDU,QAAQ,EAAE;IACRT,KAAK,EAAE;EACT;AACF,CAAC,CAAC,CAAC;AAEH,MAAMU,UAAU,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,OAAO,GAAGlB,SAAS,CAAC,CAAC;EAC3B,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGxC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACyC,MAAM,EAAEC,SAAS,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC1C,MAAM,CAAC2C,QAAQ,EAAEC,WAAW,CAAC,GAAG5C,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;EACpD,MAAM,CAAC6C,aAAa,EAAEC,gBAAgB,CAAC,GAAG9C,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7D,MAAM,CAAC+C,IAAI,EAAEC,OAAO,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACiD,IAAI,EAAEC,OAAO,CAAC,GAAGlD,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACmD,MAAM,EAAEC,SAAS,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqD,eAAe,EAAEC,kBAAkB,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACuD,aAAa,EAAEC,gBAAgB,CAAC,GAAGxD,QAAQ,CAAC,IAAIyD,GAAG,CAAC,CAAC,CAAC;EAC7D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC4D,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAAC8D,YAAY,EAAEC,eAAe,CAAC,GAAG/D,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgE,aAAa,EAAEC,gBAAgB,CAAC,GAAGjE,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACkE,WAAW,EAAEC,cAAc,CAAC,GAAGnE,QAAQ,CAAC,CAAC,CAAC;EAEjD,MAAMoE,kBAAkB,GAAGA,CAAA,KAAM;IAC/B1B,SAAS,CAAC,EAAE,CAAC;IACbE,WAAW,CAAC,QAAQ,CAAC;IACrBE,gBAAgB,CAAC,OAAO,CAAC;IACzBI,OAAO,CAAC,EAAE,CAAC;IACXE,SAAS,CAAC,EAAE,CAAC;IACbE,kBAAkB,CAAC,EAAE,CAAC;IACtBd,SAAS,CAAC,EAAE,CAAC;IACbmB,WAAW,CAAC,EAAE,CAAC,CAAC,CAAC;EACnB,CAAC;EACD1D,SAAS,CAAC,MAAM;IACd,MAAMoE,GAAG,GAAGC,yBAAyB,CAAC,CAAC;IACvCH,cAAc,CAACE,GAAG,CAAC;IACnB,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mDACF,CAAC;QACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;QAChE,MAAMC,QAAQ,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;QACtC7B,OAAO,CAAC4B,QAAQ,CAAC,CAAC,CAAC;MACrB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACX,oBAAoB,CAAC,CAAC;EAC1B,MAAMoB,gBAAgB,GAAG;IACvBC,MAAM,EAAE,CAAC;IAAE;IACXC,SAAS,EAAE,CAAC;IAAE;IACdC,OAAO,EAAE,CAAC,CAAE;EACd,CAAC;EAED,MAAMC,cAAc,GAAG;IACrBH,MAAM,EAAE;MACNI,KAAK,EAAE,CAAC;MAAE;MACVC,KAAK,EAAE,CAAC,CAAE;IACZ,CAAC;IACDJ,SAAS,EAAE;MACTG,KAAK,EAAE,EAAE;MAAE;MACXC,KAAK,EAAE,EAAE,CAAE;IACb;EACF,CAAC;EACD,MAAMC,kBAAkB,GAAIC,CAAC,IAAK;IAChChD,SAAS,CAACgD,CAAC,CAACC,MAAM,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAAC;EACzC,CAAC;EAED,MAAMC,kBAAkB,GAAIJ,CAAC,IAAK;IAChC9C,SAAS,CAAC8C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC3B,CAAC;EAED,MAAMG,oBAAoB,GAAIL,CAAC,IAAK;IAClC,MAAMM,WAAW,GAAGN,CAAC,CAACC,MAAM,CAACC,KAAK;IAClC9C,WAAW,CAACkD,WAAW,CAAC;IACxB;IACA;IACAhD,gBAAgB,CAACiD,oBAAoB,CAACD,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;EACxD,CAAC;EACD;EACA;EACA,MAAME,gBAAgB,GAAIC,QAAQ,IAAK;IAAA,IAAAC,qBAAA;IACrC;IACA,MAAMC,IAAI,GAAGC,YAAY,CAACC,IAAI,CAAEF,IAAI,IAAKA,IAAI,CAAC,CAAC,CAAC,KAAKF,QAAQ,CAAC;IAC9D,IAAI,CAACE,IAAI,EAAE,OAAO,CAAC;;IAEnB;IACA,MAAMG,WAAW,GAAG,EAAAJ,qBAAA,GAAAd,cAAc,CAACzC,QAAQ,CAAC,cAAAuD,qBAAA,uBAAxBA,qBAAA,CAA2BrD,aAAa,CAAC,KAAI,IAAI;IACrE,MAAM0D,KAAK,GAAGJ,IAAI,CAACG,WAAW,CAAC,GAAGH,IAAI,CAACG,WAAW,CAAC,GAAG,SAAS;;IAE/D;IACA,MAAME,YAAY,GAAG;MACnBC,EAAE,EAAER,QAAQ;MACZS,IAAI,EAAEP,IAAI,CAAC,CAAC,CAAC;MAAG;MAChBI,KAAK,EAAEA,KAAK;MACZI,KAAK,EAAER,IAAI,CAAC,EAAE,CAAC,CAAE;IACnB,CAAC;;IAED;IACA,MAAMS,cAAc,GAAG,CAACrD,aAAa,CAACsD,GAAG,CAACZ,QAAQ,CAAC;IACnDzC,gBAAgB,CAAEsD,iBAAiB,IAAK;MACtC,MAAMC,UAAU,GAAG,IAAItD,GAAG,CAACqD,iBAAiB,CAAC;MAC7C,IAAIF,cAAc,EAAE;QAClBG,UAAU,CAACC,GAAG,CAACf,QAAQ,CAAC;MAC1B,CAAC,MAAM;QACLc,UAAU,CAACE,MAAM,CAAChB,QAAQ,CAAC;MAC7B;MACA,OAAOc,UAAU;IACnB,CAAC,CAAC;;IAEF;IACAlD,uBAAuB,CAAEqD,IAAI,IAAK;MAChC,OAAON,cAAc,GACjB,CAAC,GAAGM,IAAI,EAAEV,YAAY,CAAC,CAAE;MAAA,EACzBU,IAAI,CAAC3E,MAAM,CAAE4E,OAAO,IAAKA,OAAO,CAACV,EAAE,KAAKR,QAAQ,CAAC,CAAC,CAAE;IAC1D,CAAC,CAAC;;IAEF;IACA,IAAIW,cAAc,EAAE;MAClBQ,KAAK,CAAChF,eAAe,CAACoE,YAAY,CAAC;IACrC;EACF,CAAC;EAED,MAAMa,YAAY,GAAIC,GAAG,IAAK;IAC5B;IACA,IAAI,CAAC/E,MAAM,EAAE,OAAO,IAAI;;IAExB;IACA,MAAMgF,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAClC,OAAOA,aAAa,CAACC,IAAI,CAAEC,KAAK,IAAK;MACnC;MACA,MAAM/B,KAAK,GAAG4B,GAAG,CAACG,KAAK,CAAC,GAAGH,GAAG,CAACG,KAAK,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC/B,WAAW,CAAC,CAAC,GAAG,EAAE;MACnE,OAAOD,KAAK,CAACgC,QAAQ,CAAC,CAAC,CAAC/B,WAAW,CAAC,CAAC,CAACgC,QAAQ,CAACpF,MAAM,CAAC;IACxD,CAAC,CAAC;EACJ,CAAC;EACD,MAAM+B,yBAAyB,GAAGA,CAAA,KAAM;IACtC,MAAMD,GAAG,GAAGT,oBAAoB,CAACgE,MAAM,CAAC,CAACC,WAAW,EAAEV,OAAO,KAAK;MAChE;MACA,MAAMW,kBAAkB,GAAGX,OAAO,CAACZ,KAAK,CAACwB,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;MAClE,MAAMxB,KAAK,GAAGyB,UAAU,CAACF,kBAAkB,CAAC;MAC5C;MACA,IAAIG,QAAQ,CAAC1B,KAAK,CAAC,EAAE;QACnB,OAAOsB,WAAW,GAAGtB,KAAK;MAC5B,CAAC,MAAM;QACLxB,OAAO,CAACD,KAAK,CAAE,kCAAiCqC,OAAO,CAACZ,KAAM,EAAC,CAAC;QAChE,OAAOsB,WAAW;MACpB;IACF,CAAC,EAAE,CAAC,CAAC;IACL,OAAOxD,GAAG;EACZ,CAAC;EAED,MAAM6D,yBAAyB,GAAI1C,CAAC,IAAK;IACvC1C,gBAAgB,CAAC0C,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAClC,CAAC;EACD,MAAMyC,cAAc,GAAIV,KAAK,IAAK;IAChC;IACA,MAAMW,YAAY,GAAG;MACnB,CAAC,EAAE,MAAM;MAAE;MACX,CAAC,EAAE,OAAO,CAAE;MACZ;MACA;IACF,CAAC;;IAED;IACA,OAAOA,YAAY,CAACX,KAAK,CAAC,IAAI,OAAO,CAAC,CAAC;EACzC,CAAC;EACD,MAAM1B,oBAAoB,GAAG;IAC3Bd,MAAM,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,YAAY,CAAC;IACxCC,SAAS,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,WAAW,CAAC;IAC1CC,OAAO,EAAE,CAAC,uBAAuB,EAAE,uBAAuB;EAC5D,CAAC;EACD,MAAMkD,oBAAoB,GAAG;IAC3BpD,MAAM,EAAE,CAAC,CAAC,CAAC;IAAE;IACbC,SAAS,EAAE,CAAC,CAAC,CAAC;IAAE;IAChBC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAE;EAChB,CAAC;EACD;EACA,MAAMmD,oBAAoB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;;EAE7C;EACA,MAAMC,aAAa,GAAG,CACpB,GAAGD,oBAAoB,EACvB,IAAID,oBAAoB,CAAC1F,QAAQ,CAAC,IAAI,EAAE,CAAC,EACzC,IAAIE,aAAa,IAAIF,QAAQ,GACzB,CAACyC,cAAc,CAACzC,QAAQ,CAAC,CAACE,aAAa,CAAC,GAAG,CAAC,CAAC,GAC7C,EAAE,CAAC,CACR;EAED,MAAM2F,OAAO,GAAGzF,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC;;EAE/B,MAAMqD,YAAY,GAAGrD,IAAI,CAACR,MAAM,CAAE+E,GAAG,IAAK;IAAA,IAAAmB,KAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,MAAA;IACxC,MAAMC,WAAW,GAAGrG,MAAM,IAAAgG,KAAA,GACtBnB,GAAG,CAAC,CAAC,CAAC,cAAAmB,KAAA,uBAANA,KAAA,CAAQf,QAAQ,CAAC,CAAC,CAAC/B,WAAW,CAAC,CAAC,CAACgC,QAAQ,CAAClF,MAAM,CAACkD,WAAW,CAAC,CAAC,CAAC,GAC/D,IAAI;;IAER;IACA,MAAMoD,aAAa,GAAGpG,QAAQ,GAC1B,CAACqG,KAAK,CAAC1B,GAAG,CAACtC,gBAAgB,CAACrC,QAAQ,CAAC,CAAC,CAAC,IACvC2E,GAAG,CAACtC,gBAAgB,CAACrC,QAAQ,CAAC,CAAC,KAAK,IAAI,IACxC2E,GAAG,CAACtC,gBAAgB,CAACrC,QAAQ,CAAC,CAAC,KAAK,EAAE,GACtC,IAAI;IAER,IAAIsG,SAAS,GAAGhG,IAAI,IAAAyF,MAAA,GAChBpB,GAAG,CAAC,CAAC,CAAC,cAAAoB,MAAA,uBAANA,MAAA,CAAQhB,QAAQ,CAAC,CAAC,CAAC/B,WAAW,CAAC,CAAC,CAACgC,QAAQ,CAAC1E,IAAI,CAAC0C,WAAW,CAAC,CAAC,CAAC,GAC7D,IAAI;IACR,IAAIuD,WAAW,GAAG/F,MAAM,IAAAwF,MAAA,GACpBrB,GAAG,CAAC,CAAC,CAAC,cAAAqB,MAAA,uBAANA,MAAA,CACIjB,QAAQ,CAAC,CAAC,CACX/B,WAAW,CAAC,CAAC,CACbwD,KAAK,CAAC,QAAQ,CAAC,CACfxB,QAAQ,CAACxE,MAAM,CAACwC,WAAW,CAAC,CAAC,CAAC,CAAC;IAAA,EAClC,IAAI;IAER,MAAMyD,aAAa,GAAG/F,eAAe,IAAAuF,MAAA,GACjCtB,GAAG,CAAC,CAAC,CAAC,cAAAsB,MAAA,uBAANA,MAAA,CAAQlB,QAAQ,CAAC,CAAC,CAAC/B,WAAW,CAAC,CAAC,CAACgC,QAAQ,CAACtE,eAAe,CAACsC,WAAW,CAAC,CAAC,CAAC,GACxE,IAAI;;IAER;IACA,IAAIxC,MAAM,KAAK,MAAM,KAAA0F,MAAA,GAAIvB,GAAG,CAAC,CAAC,CAAC,cAAAuB,MAAA,eAANA,MAAA,CAAQlD,WAAW,CAAC,CAAC,CAACgC,QAAQ,CAAC,QAAQ,CAAC,EAAE;MACjEuB,WAAW,GAAG,KAAK;IACrB;;IAEA;IACA,MAAMG,wBAAwB,GAC5BxG,aAAa,IAAIF,QAAQ,GACrByC,cAAc,CAACzC,QAAQ,CAAC,CAACE,aAAa,CAAC,GACvC,IAAI;IACV,MAAMyG,kBAAkB,GACtBD,wBAAwB,KAAK,IAAI,GAC7B/B,GAAG,CAAC+B,wBAAwB,CAAC,KAAK,IAAI,IACtC/B,GAAG,CAAC+B,wBAAwB,CAAC,KAAK,EAAE,GACpC,IAAI;IAEV,OACEP,WAAW,IACXC,aAAa,IACbE,SAAS,IACTC,WAAW,IACXE,aAAa,IACbE,kBAAkB,IAClBjC,YAAY,CAACC,GAAG,CAAC;EAErB,CAAC,CAAC;EAEF,oBACEnG,OAAA;IAAAoI,QAAA,gBACEpI,OAAA,CAACjB,IAAI;MAACsJ,SAAS;MAAChI,OAAO,EAAE,CAAE;MAAA+H,QAAA,gBACvBpI,OAAA;QAAKsI,SAAS,EAAEnH,OAAO,CAACZ,OAAQ;QAAA6H,QAAA,eAChCpI,OAAA,CAACjB,IAAI;UAACiG,IAAI;UAACuD,EAAE,EAAE,EAAG;UAACD,SAAS,EAAEnH,OAAO,CAACN,eAAgB;UAAAuH,QAAA,gBAChDpI,OAAA,CAAChB,WAAW;YAACwJ,OAAO,EAAC,UAAU;YAACF,SAAS,EAAEnH,OAAO,CAAChB,WAAY;YAAAiI,QAAA,gBAC7DpI,OAAA,CAACf,UAAU;cAACqG,EAAE,EAAC,qBAAqB;cAAA8C,QAAA,EAAC;YAErC;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb5I,OAAA,CAACd,MAAM;cACL2J,OAAO,EAAC,qBAAqB;cAC7BvD,EAAE,EAAC,eAAe;cAClBf,KAAK,EAAEjD,MAAO;cACdwH,QAAQ,EAAErE,kBAAmB;cAC7BsE,KAAK,EAAC,eAAe;cAAAX,QAAA,gBAErBpI,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,EAAE;gBAAA6D,QAAA,eAChBpI,OAAA;kBAAAoI,QAAA,EAAI;gBAAG;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACJ,CAAC,eACX5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,WAAW;gBAAA6D,QAAA,EAAC;cAAS;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eAChD5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,IAAI;gBAAA6D,QAAA,EAAC;cAAE;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eAClC5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,OAAO;gBAAA6D,QAAA,EAAC;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eACxC5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,MAAM;gBAAA6D,QAAA,EAAC;cAAI;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAGhC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEd5I,OAAA,CAAChB,WAAW;YAACwJ,OAAO,EAAC,UAAU;YAACF,SAAS,EAAEnH,OAAO,CAAChB,WAAY;YAAAiI,QAAA,gBAC7DpI,OAAA,CAACf,UAAU;cAACqG,EAAE,EAAC,uBAAuB;cAAA8C,QAAA,EAAC;YAAQ;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eAC5D5I,OAAA,CAACd,MAAM;cACL2J,OAAO,EAAC,uBAAuB;cAC/BvD,EAAE,EAAC,iBAAiB;cACpBf,KAAK,EAAE/C,QAAS;cAChBsH,QAAQ,EAAEpE,oBAAqB;cAC/BqE,KAAK,EAAC,UAAU;cAAAX,QAAA,gBAEhBpI,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,QAAQ;gBAAA6D,QAAA,EAAC;cAAM;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eAC1C5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,WAAW;gBAAA6D,QAAA,EAAC;cAAS;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAE1C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEd5I,OAAA,CAAChB,WAAW;YAACwJ,OAAO,EAAC,UAAU;YAACF,SAAS,EAAEnH,OAAO,CAAChB,WAAY;YAAAiI,QAAA,gBAC7DpI,OAAA,CAACf,UAAU;cAACqG,EAAE,EAAC,sBAAsB;cAAA8C,QAAA,EAAC;YAEtC;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb5I,OAAA,CAACd,MAAM;cACL2J,OAAO,EAAC,sBAAsB;cAC9BvD,EAAE,EAAC,uBAAuB;cAC1Bf,KAAK,EAAE7C,aAAc;cACrBoH,QAAQ,EAAE/B,yBAA0B;cACpCgC,KAAK,EAAC,gBAAgB;cAAAX,QAAA,EAErB5G,QAAQ,IACPoD,oBAAoB,CAACpD,QAAQ,CAAC,CAACwH,GAAG,CAAEC,IAAI,iBACtCjJ,OAAA,CAACb,QAAQ;gBAAYoF,KAAK,EAAE0E,IAAK;gBAAAb,QAAA,EAC9Ba;cAAI,GADQA,IAAI;gBAAAR,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAET,CACX;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEd5I,OAAA,CAAChB,WAAW;YAACwJ,OAAO,EAAC,UAAU;YAACF,SAAS,EAAEnH,OAAO,CAAChB,WAAY;YAAAiI,QAAA,gBAC7DpI,OAAA,CAACf,UAAU;cAACqG,EAAE,EAAC,mBAAmB;cAAA8C,QAAA,EAAC;YAAI;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACpD5I,OAAA,CAACd,MAAM;cACL2J,OAAO,EAAC,mBAAmB;cAC3BvD,EAAE,EAAC,aAAa;cAChBf,KAAK,EAAEzC,IAAK;cACZgH,QAAQ,EAAGzE,CAAC,IAAKtC,OAAO,CAACsC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;cACzCwE,KAAK,EAAC,MAAM;cAAAX,QAAA,gBAEZpI,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,EAAE;gBAAA6D,QAAA,eAChBpI,OAAA;kBAAAoI,QAAA,EAAI;gBAAI;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACX5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,OAAO;gBAAA6D,QAAA,EAAC;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eACxC5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,OAAO;gBAAA6D,QAAA,EAAC;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eACxC5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,UAAU;gBAAA6D,QAAA,EAAC;cAAQ;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eAC9C5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,OAAO;gBAAA6D,QAAA,EAAC;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eACxC5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,OAAO;gBAAA6D,QAAA,EAAC;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEd5I,OAAA,CAAChB,WAAW;YAACwJ,OAAO,EAAC,UAAU;YAACF,SAAS,EAAEnH,OAAO,CAAChB,WAAY;YAAAiI,QAAA,gBAC7DpI,OAAA,CAACf,UAAU;cAACqG,EAAE,EAAC,qBAAqB;cAAA8C,QAAA,EAAC;YAAM;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACxD5I,OAAA,CAACd,MAAM;cACL2J,OAAO,EAAC,qBAAqB;cAC7BvD,EAAE,EAAC,eAAe;cAClBf,KAAK,EAAEvC,MAAO;cACd8G,QAAQ,EAAGzE,CAAC,IAAKpC,SAAS,CAACoC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;cAC3CwE,KAAK,EAAC,QAAQ;cAAAX,QAAA,gBAEdpI,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,EAAE;gBAAA6D,QAAA,eAChBpI,OAAA;kBAAAoI,QAAA,EAAI;gBAAI;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACX5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,MAAM;gBAAA6D,QAAA,EAAC;cAAI;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eACtC5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,QAAQ;gBAAA6D,QAAA,EAAC;cAAM;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eAC1C5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,OAAO;gBAAA6D,QAAA,EAAC;cAAK;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEd5I,OAAA,CAAChB,WAAW;YAACwJ,OAAO,EAAC,UAAU;YAACF,SAAS,EAAEnH,OAAO,CAAChB,WAAY;YAAAiI,QAAA,gBAC7DpI,OAAA,CAACf,UAAU;cAACqG,EAAE,EAAC,+BAA+B;cAAA8C,QAAA,EAAC;YAE/C;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb5I,OAAA,CAACd,MAAM;cACL2J,OAAO,EAAC,+BAA+B;cACvCvD,EAAE,EAAC,yBAAyB;cAC5Bf,KAAK,EAAErC,eAAgB;cACvB4G,QAAQ,EAAGzE,CAAC,IAAKlC,kBAAkB,CAACkC,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;cACpDwE,KAAK,EAAC,kBAAkB;cAAAX,QAAA,gBAExBpI,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,EAAE;gBAAA6D,QAAA,eAChBpI,OAAA;kBAAAoI,QAAA,EAAI;gBAAI;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACX5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,IAAI;gBAAA6D,QAAA,EAAC;cAAE;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eAClC5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,IAAI;gBAAA6D,QAAA,EAAC;cAAE;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eAClC5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,QAAQ;gBAAA6D,QAAA,EAAC;cAAM;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAEZ5I,OAAA,CAAChB,WAAW;YACVwJ,OAAO,EAAC,UAAU;YAClBF,SAAS,EAAEnH,OAAO,CAAChB,WAAY;YAC/B+I,SAAS;YAAAd,QAAA,gBAETpI,OAAA,CAACf,UAAU;cAACqG,EAAE,EAAC,wBAAwB;cAAA8C,QAAA,EAAC;YAExC;cAAAK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAY,CAAC,eACb5I,OAAA,CAACd,MAAM;cACL2J,OAAO,EAAC,wBAAwB;cAChCvD,EAAE,EAAC,kBAAkB;cACrBf,KAAK,EAAEhC,QAAS;cAChBuG,QAAQ,EAAGzE,CAAC,IAAK7B,WAAW,CAAC6B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;cAC7CwE,KAAK,EAAC,WAAW;cAAAX,QAAA,gBAGjBpI,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,EAAE;gBAAA6D,QAAA,eAChBpI,OAAA;kBAAAoI,QAAA,EAAI;gBAAI;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI;cAAC;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACL,CAAC,eACX5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,UAAU;gBAAA6D,QAAA,EAAC;cAAS;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eAC/C5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,cAAc;gBAAA6D,QAAA,EAAC;cAAc;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC,eACxD5I,OAAA,CAACb,QAAQ;gBAACoF,KAAK,EAAC,SAAS;gBAAA6D,QAAA,EAAC;cAAQ;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAU,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACd5I,OAAA,CAACZ,SAAS;YACRkG,EAAE,EAAC,cAAc;YACjByD,KAAK,EAAC,QAAQ;YACdP,OAAO,EAAC,UAAU;YAClBW,IAAI,EAAC,OAAO;YACZD,SAAS;YACTZ,SAAS,EAAEnH,OAAO,CAAChB,WAAY;YAC/BoE,KAAK,EAAEnD,MAAO;YACd0H,QAAQ,EAAE1E;UAAmB;YAAAqE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAEN5I,OAAA,CAACX,MAAM;QACLmJ,OAAO,EAAC,WAAW;QACnBY,KAAK,EAAC,SAAS;QACfC,OAAO,EAAEpG,kBAAmB;QAC5BqF,SAAS,EAAEnH,OAAO,CAACT,MAAO;QAC1BwI,SAAS;QAAAd,QAAA,EACV;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eAEP5I,OAAA;MAAKsI,SAAS,EAAEnH,OAAO,CAACmI,UAAW;MAAAlB,QAAA,eAEjCpI,OAAA,CAACR,KAAK;QAAC+J,SAAS,EAAE,CAAE;QAAAnB,QAAA,eAClBpI,OAAA;UAAOsI,SAAS,EAAC,UAAU;UAAAF,QAAA,gBACzBpI,OAAA;YAAAoI,QAAA,eACEpI,OAAA;cAAAoI,QAAA,gBACEpI,OAAA;gBAAAoI,QAAA,EAAI;cAAM;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EAEdvB,OAAO,CAAC2B,GAAG,CACV,CAACQ,MAAM,EAAElD,KAAK,KACZc,aAAa,CAACZ,QAAQ,CAACF,KAAK,GAAG,CAAC,CAAC,iBAC/BtG,OAAA;gBAEEyJ,KAAK,EAAE;kBAAEnJ,KAAK,EAAE0G,cAAc,CAACV,KAAK;gBAAE,CAAE;gBAAA8B,QAAA,EAEvCoB;cAAM,GAHFlD,KAAK;gBAAAmC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAIR,CACL,CAAE;cACP,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,eACR5I,OAAA;YAAAoI,QAAA,EACGnD,YAAY,CAAC+D,GAAG,CAAC,CAAC7C,GAAG,EAAEuD,GAAG,KAAK;cAC9B,IAAI,CAACvD,GAAG,EAAE,OAAO,IAAI,CAAC,CAAC;;cAEvB,MAAMwD,UAAU,GAAGvH,aAAa,CAACsD,GAAG,CAACS,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;cAC9C,oBACEnG,OAAA;gBAEEyJ,KAAK,EAAE;kBACLG,eAAe,EAAED,UAAU,GACvB,YAAY,GACZ;gBACN,CAAE,CAAC;gBAAA;gBACHN,OAAO,EAAEA,CAAA,KAAMxE,gBAAgB,CAACsB,GAAG,CAAC,CAAC,CAAC,CAAE,CAAC;gBAAA;gBAAAiC,QAAA,gBAEzCpI,OAAA;kBAAAoI,QAAA,eACEpI,OAAA,CAACT,QAAQ;oBACPsK,OAAO,EAAEF,UAAW;oBACpBb,QAAQ,EAAGzE,CAAC,IAAK;sBACfA,CAAC,CAACyF,eAAe,CAAC,CAAC,CAAC,CAAC;sBACrBjF,gBAAgB,CAACsB,GAAG,CAAC,CAAC,CAAC,CAAC;oBAC1B,CAAE;oBACFiD,KAAK,EAAC;kBAAS;oBAAAX,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAChB;gBAAC;kBAAAH,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACA,CAAC,EACJzC,GAAG,CAAC6C,GAAG,CAAC,CAACzE,KAAK,EAAE+B,KAAK,KACpBc,aAAa,CAACZ,QAAQ,CAACF,KAAK,GAAG,CAAC,CAAC,gBAC/BtG,OAAA;kBAEEyJ,KAAK,EAAE;oBAAEnJ,KAAK,EAAE0G,cAAc,CAACV,KAAK;kBAAE,CAAE;kBAAA8B,QAAA,EAEvC9B,KAAK,KAAK,EAAE,gBACXtG,OAAA;oBACE+J,IAAI,EAAExF,KAAM;oBACZD,MAAM,EAAC,QAAQ;oBACf0F,GAAG,EAAC,qBAAqB;oBAAA5B,QAAA,EAExB7D;kBAAK;oBAAAkE,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACL,CAAC,GAEJrE,KAAK,aAALA,KAAK,cAALA,KAAK,GAAI;gBACV,GAbI+B,KAAK;kBAAAmC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAcR,CAAC,GACH,IACN,CAAC;cAAA,GArCIc,GAAG;gBAAAjB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAsCN,CAAC;YAET,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACG,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC1H,EAAA,CApeIF,UAAU;EAAA,QACEf,SAAS;AAAA;AAAAgK,EAAA,GADrBjJ,UAAU;AAsehB,eAAeA,UAAU;AAAC,IAAAiJ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}