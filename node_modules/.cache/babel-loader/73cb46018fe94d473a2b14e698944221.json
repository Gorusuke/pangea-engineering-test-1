{"ast":null,"code":"import { API_ENDPOINTS } from \"./endpoints\";\nimport { HttpClient } from \"./http-client\";\nclass Client {\n  constructor() {\n    this.users = {\n      login: input => HttpClient.post(API_ENDPOINTS.USERS_LOGIN, input),\n      register: input => HttpClient.post(API_ENDPOINTS.USERS_REGISTER, input),\n      fetchUser: () => HttpClient.get(API_ENDPOINTS.FETCH_USER)\n    };\n    this.campaigns = {\n      launch: input => HttpClient.post(API_ENDPOINTS.LAUNCH_CAMPAIGN, input),\n      sendPostingInstructions: input => HttpClient.post(API_ENDPOINTS.SEND_POSTING_INSTRUCTIONS, input),\n      list: () => HttpClient.get(API_ENDPOINTS.CAMPAIGNS),\n      listAdmin: () => HttpClient.get(API_ENDPOINTS.CAMPAIGNS_ADMIN),\n      create: input => HttpClient.post(API_ENDPOINTS.CAMPAIGNS, input),\n      fetch: input => HttpClient.get(`${API_ENDPOINTS.CAMPAIGNS}${input}`),\n      update: input => HttpClient.post(API_ENDPOINTS.UPDATE_CAMPAIGN, input),\n      updateCreatorList: input => HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_LIST, input),\n      updateCreatorDetails: input => HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_DETAILS, input),\n      removeCreators: input => HttpClient.post(API_ENDPOINTS.REMOVE_CREATORS, input),\n      updateCreatorPrices: input => HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_PRICES, input),\n      updateCampaignSum: input => HttpClient.post(API_ENDPOINTS.UPDATE_CAMPAIGN_SUM, input),\n      updateLinksCodes: input => HttpClient.post(API_ENDPOINTS.UPDATE_LINKS_CODES, input),\n      complete: input => HttpClient.post(`${API_ENDPOINTS.COMPLETE_CAMPAIGN}/${input.index}`, input.params),\n      delete: input => HttpClient.post(API_ENDPOINTS.DELETE_CAMPAIGN, input),\n      generateReport: input => HttpClient.post(API_ENDPOINTS.GENERATE_REPORT, input),\n      editAdmin: input => HttpClient.post(API_ENDPOINTS.EDIT_CAMPAIGN_ADMIN, input),\n      deleteCampaignAdmin: input => HttpClient.post(API_ENDPOINTS.DELETE_CAMPAIGN_ADMIN, input),\n      fetchAdmin: input => HttpClient.get(`${API_ENDPOINTS.CAMPAIGNS}${input}`)\n    };\n    this.payouts = {\n      list: () => HttpClient.get(API_ENDPOINTS.PAYOUTS),\n      create: input => HttpClient.post(API_ENDPOINTS.PAYOUTS, input),\n      delete: input => HttpClient.post(API_ENDPOINTS.PAYOUT_DELETE, input),\n      listAdmin: () => HttpClient.get(API_ENDPOINTS.PAYOUTS_ADMIN),\n      deleteAdmin: input => HttpClient.post(API_ENDPOINTS.DELETE_PAYOUTS_ADMIN, input)\n    };\n    this.creators = {\n      list: () => HttpClient.get(API_ENDPOINTS.CREATORS),\n      add: input => HttpClient.post(API_ENDPOINTS.CREATOR_ADD, input),\n      payout: input => HttpClient.get(API_ENDPOINTS.CREATOR_PAYOUT_READ, {\n        sheetId: input\n      }),\n      data: () => HttpClient.get(API_ENDPOINTS.CREATOR_DATA_READ),\n      fetchDetails: creatorId => {\n        const url = `${API_ENDPOINTS.CREATORS_SPEC}${creatorId}`;\n        console.log(`Fetching creator details from: ${url}`);\n        return HttpClient.get(url);\n      }\n    };\n    this.invoices = {\n      list: () => HttpClient.get(API_ENDPOINTS.INVOICES),\n      delete: input => HttpClient.post(API_ENDPOINTS.DELETE_INVOICE, input),\n      listAdmin: () => HttpClient.get(API_ENDPOINTS.INVOICES_ADMIN),\n      editAdmin: input => HttpClient.post(API_ENDPOINTS.EDIT_INVOICES_ADMIN, input),\n      create: input => HttpClient.post(API_ENDPOINTS.CREATE_INVOICE, input)\n    };\n    this.companies = {\n      list: () => HttpClient.get(API_ENDPOINTS.COMPANY),\n      create: input => HttpClient.post(API_ENDPOINTS.COMPANY, input),\n      delete: input => HttpClient.post(API_ENDPOINTS.DELETE_COMPANY, input),\n      edit: input => HttpClient.post(`${API_ENDPOINTS.COMPANY}/${input.companyId}`, input.params),\n      listFetch: () => HttpClient.get(API_ENDPOINTS.FETCH_COMPANY_DATA)\n    };\n  }\n}\nexport default new Client();","map":{"version":3,"names":["API_ENDPOINTS","HttpClient","Client","constructor","users","login","input","post","USERS_LOGIN","register","USERS_REGISTER","fetchUser","get","FETCH_USER","campaigns","launch","LAUNCH_CAMPAIGN","sendPostingInstructions","SEND_POSTING_INSTRUCTIONS","list","CAMPAIGNS","listAdmin","CAMPAIGNS_ADMIN","create","fetch","update","UPDATE_CAMPAIGN","updateCreatorList","UPDATE_CREATOR_LIST","updateCreatorDetails","UPDATE_CREATOR_DETAILS","removeCreators","REMOVE_CREATORS","updateCreatorPrices","UPDATE_CREATOR_PRICES","updateCampaignSum","UPDATE_CAMPAIGN_SUM","updateLinksCodes","UPDATE_LINKS_CODES","complete","COMPLETE_CAMPAIGN","index","params","delete","DELETE_CAMPAIGN","generateReport","GENERATE_REPORT","editAdmin","EDIT_CAMPAIGN_ADMIN","deleteCampaignAdmin","DELETE_CAMPAIGN_ADMIN","fetchAdmin","payouts","PAYOUTS","PAYOUT_DELETE","PAYOUTS_ADMIN","deleteAdmin","DELETE_PAYOUTS_ADMIN","creators","CREATORS","add","CREATOR_ADD","payout","CREATOR_PAYOUT_READ","sheetId","data","CREATOR_DATA_READ","fetchDetails","creatorId","url","CREATORS_SPEC","console","log","invoices","INVOICES","DELETE_INVOICE","INVOICES_ADMIN","EDIT_INVOICES_ADMIN","CREATE_INVOICE","companies","COMPANY","DELETE_COMPANY","edit","companyId","listFetch","FETCH_COMPANY_DATA"],"sources":["C:/Users/HP/Documents/GitHub/blitz/src/API/index.js"],"sourcesContent":["import { API_ENDPOINTS } from \"./endpoints\";\r\nimport { HttpClient } from \"./http-client\";\r\n\r\nclass Client {\r\n  users = {\r\n    login: (input) => HttpClient.post(API_ENDPOINTS.USERS_LOGIN, input),\r\n    register: (input) => HttpClient.post(API_ENDPOINTS.USERS_REGISTER, input),\r\n    fetchUser: () => HttpClient.get(API_ENDPOINTS.FETCH_USER),\r\n  };\r\n\r\n  campaigns = {\r\n    launch: (input) => HttpClient.post(API_ENDPOINTS.LAUNCH_CAMPAIGN, input),\r\n    sendPostingInstructions: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.SEND_POSTING_INSTRUCTIONS, input),\r\n    list: () => HttpClient.get(API_ENDPOINTS.CAMPAIGNS),\r\n    listAdmin: () => HttpClient.get(API_ENDPOINTS.CAMPAIGNS_ADMIN),\r\n    create: (input) => HttpClient.post(API_ENDPOINTS.CAMPAIGNS, input),\r\n    fetch: (input) => HttpClient.get(`${API_ENDPOINTS.CAMPAIGNS}${input}`),\r\n    update: (input) => HttpClient.post(API_ENDPOINTS.UPDATE_CAMPAIGN, input),\r\n    updateCreatorList: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_LIST, input),\r\n    updateCreatorDetails: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_DETAILS, input),\r\n    removeCreators: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.REMOVE_CREATORS, input),\r\n    updateCreatorPrices: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.UPDATE_CREATOR_PRICES, input),\r\n    updateCampaignSum: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.UPDATE_CAMPAIGN_SUM, input),\r\n    updateLinksCodes: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.UPDATE_LINKS_CODES, input),\r\n    complete: (input) =>\r\n      HttpClient.post(\r\n        `${API_ENDPOINTS.COMPLETE_CAMPAIGN}/${input.index}`,\r\n        input.params\r\n      ),\r\n    delete: (input) => HttpClient.post(API_ENDPOINTS.DELETE_CAMPAIGN, input),\r\n    generateReport: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.GENERATE_REPORT, input),\r\n    editAdmin: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.EDIT_CAMPAIGN_ADMIN, input),\r\n    deleteCampaignAdmin: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.DELETE_CAMPAIGN_ADMIN, input),\r\n    fetchAdmin: (input) => HttpClient.get(`${API_ENDPOINTS.CAMPAIGNS}${input}`),\r\n  };\r\n\r\n  payouts = {\r\n    list: () => HttpClient.get(API_ENDPOINTS.PAYOUTS),\r\n    create: (input) => HttpClient.post(API_ENDPOINTS.PAYOUTS, input),\r\n    delete: (input) => HttpClient.post(API_ENDPOINTS.PAYOUT_DELETE, input),\r\n    listAdmin: () => HttpClient.get(API_ENDPOINTS.PAYOUTS_ADMIN),\r\n    deleteAdmin: (input) => HttpClient.post(API_ENDPOINTS.DELETE_PAYOUTS_ADMIN, input),\r\n  };\r\n\r\n  creators = {\r\n    list: () => HttpClient.get(API_ENDPOINTS.CREATORS),\r\n    add: (input) => HttpClient.post(API_ENDPOINTS.CREATOR_ADD, input),\r\n    payout: (input) =>\r\n      HttpClient.get(API_ENDPOINTS.CREATOR_PAYOUT_READ, { sheetId: input }),\r\n    data: () => HttpClient.get(API_ENDPOINTS.CREATOR_DATA_READ),\r\n    fetchDetails: (creatorId) => {\r\n      const url = `${API_ENDPOINTS.CREATORS_SPEC}${creatorId}`;\r\n      console.log(`Fetching creator details from: ${url}`);\r\n      return HttpClient.get(url);\r\n    },\r\n      };\r\n\r\n  invoices = {\r\n    list: () => HttpClient.get(API_ENDPOINTS.INVOICES),\r\n    delete: (input) => HttpClient.post(API_ENDPOINTS.DELETE_INVOICE, input),\r\n    listAdmin: () => HttpClient.get(API_ENDPOINTS.INVOICES_ADMIN),\r\n    editAdmin: (input) =>\r\n      HttpClient.post(API_ENDPOINTS.EDIT_INVOICES_ADMIN, input),\r\n    create: (input) => HttpClient.post(API_ENDPOINTS.CREATE_INVOICE, input),\r\n\r\n  };\r\n  \r\n  companies = {\r\n    list: () => HttpClient.get(API_ENDPOINTS.COMPANY),\r\n    create: (input) => HttpClient.post(API_ENDPOINTS.COMPANY, input),\r\n    delete: (input) => HttpClient.post(API_ENDPOINTS.DELETE_COMPANY, input),\r\n    edit: (input) =>\r\n      HttpClient.post(\r\n        `${API_ENDPOINTS.COMPANY}/${input.companyId}`,\r\n        input.params\r\n      ),\r\n    listFetch: () => HttpClient.get(API_ENDPOINTS.FETCH_COMPANY_DATA),\r\n  };\r\n}\r\n\r\nexport default new Client();\r\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,aAAa;AAC3C,SAASC,UAAU,QAAQ,eAAe;AAE1C,MAAMC,MAAM,CAAC;EAAAC,YAAA;IAAA,KACXC,KAAK,GAAG;MACNC,KAAK,EAAGC,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACQ,WAAW,EAAEF,KAAK,CAAC;MACnEG,QAAQ,EAAGH,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACU,cAAc,EAAEJ,KAAK,CAAC;MACzEK,SAAS,EAAEA,CAAA,KAAMV,UAAU,CAACW,GAAG,CAACZ,aAAa,CAACa,UAAU;IAC1D,CAAC;IAAA,KAEDC,SAAS,GAAG;MACVC,MAAM,EAAGT,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACgB,eAAe,EAAEV,KAAK,CAAC;MACxEW,uBAAuB,EAAGX,KAAK,IAC7BL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACkB,yBAAyB,EAAEZ,KAAK,CAAC;MACjEa,IAAI,EAAEA,CAAA,KAAMlB,UAAU,CAACW,GAAG,CAACZ,aAAa,CAACoB,SAAS,CAAC;MACnDC,SAAS,EAAEA,CAAA,KAAMpB,UAAU,CAACW,GAAG,CAACZ,aAAa,CAACsB,eAAe,CAAC;MAC9DC,MAAM,EAAGjB,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACoB,SAAS,EAAEd,KAAK,CAAC;MAClEkB,KAAK,EAAGlB,KAAK,IAAKL,UAAU,CAACW,GAAG,CAAE,GAAEZ,aAAa,CAACoB,SAAU,GAAEd,KAAM,EAAC,CAAC;MACtEmB,MAAM,EAAGnB,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAAC0B,eAAe,EAAEpB,KAAK,CAAC;MACxEqB,iBAAiB,EAAGrB,KAAK,IACvBL,UAAU,CAACM,IAAI,CAACP,aAAa,CAAC4B,mBAAmB,EAAEtB,KAAK,CAAC;MAC3DuB,oBAAoB,EAAGvB,KAAK,IAC1BL,UAAU,CAACM,IAAI,CAACP,aAAa,CAAC8B,sBAAsB,EAAExB,KAAK,CAAC;MAC9DyB,cAAc,EAAGzB,KAAK,IACpBL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACgC,eAAe,EAAE1B,KAAK,CAAC;MACvD2B,mBAAmB,EAAG3B,KAAK,IACzBL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACkC,qBAAqB,EAAE5B,KAAK,CAAC;MAC7D6B,iBAAiB,EAAG7B,KAAK,IACvBL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACoC,mBAAmB,EAAE9B,KAAK,CAAC;MAC3D+B,gBAAgB,EAAG/B,KAAK,IACtBL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACsC,kBAAkB,EAAEhC,KAAK,CAAC;MAC1DiC,QAAQ,EAAGjC,KAAK,IACdL,UAAU,CAACM,IAAI,CACZ,GAAEP,aAAa,CAACwC,iBAAkB,IAAGlC,KAAK,CAACmC,KAAM,EAAC,EACnDnC,KAAK,CAACoC,MACR,CAAC;MACHC,MAAM,EAAGrC,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAAC4C,eAAe,EAAEtC,KAAK,CAAC;MACxEuC,cAAc,EAAGvC,KAAK,IACpBL,UAAU,CAACM,IAAI,CAACP,aAAa,CAAC8C,eAAe,EAAExC,KAAK,CAAC;MACvDyC,SAAS,EAAGzC,KAAK,IACfL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACgD,mBAAmB,EAAE1C,KAAK,CAAC;MAC3D2C,mBAAmB,EAAG3C,KAAK,IACzBL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACkD,qBAAqB,EAAE5C,KAAK,CAAC;MAC7D6C,UAAU,EAAG7C,KAAK,IAAKL,UAAU,CAACW,GAAG,CAAE,GAAEZ,aAAa,CAACoB,SAAU,GAAEd,KAAM,EAAC;IAC5E,CAAC;IAAA,KAED8C,OAAO,GAAG;MACRjC,IAAI,EAAEA,CAAA,KAAMlB,UAAU,CAACW,GAAG,CAACZ,aAAa,CAACqD,OAAO,CAAC;MACjD9B,MAAM,EAAGjB,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACqD,OAAO,EAAE/C,KAAK,CAAC;MAChEqC,MAAM,EAAGrC,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACsD,aAAa,EAAEhD,KAAK,CAAC;MACtEe,SAAS,EAAEA,CAAA,KAAMpB,UAAU,CAACW,GAAG,CAACZ,aAAa,CAACuD,aAAa,CAAC;MAC5DC,WAAW,EAAGlD,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACyD,oBAAoB,EAAEnD,KAAK;IACnF,CAAC;IAAA,KAEDoD,QAAQ,GAAG;MACTvC,IAAI,EAAEA,CAAA,KAAMlB,UAAU,CAACW,GAAG,CAACZ,aAAa,CAAC2D,QAAQ,CAAC;MAClDC,GAAG,EAAGtD,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAAC6D,WAAW,EAAEvD,KAAK,CAAC;MACjEwD,MAAM,EAAGxD,KAAK,IACZL,UAAU,CAACW,GAAG,CAACZ,aAAa,CAAC+D,mBAAmB,EAAE;QAAEC,OAAO,EAAE1D;MAAM,CAAC,CAAC;MACvE2D,IAAI,EAAEA,CAAA,KAAMhE,UAAU,CAACW,GAAG,CAACZ,aAAa,CAACkE,iBAAiB,CAAC;MAC3DC,YAAY,EAAGC,SAAS,IAAK;QAC3B,MAAMC,GAAG,GAAI,GAAErE,aAAa,CAACsE,aAAc,GAAEF,SAAU,EAAC;QACxDG,OAAO,CAACC,GAAG,CAAE,kCAAiCH,GAAI,EAAC,CAAC;QACpD,OAAOpE,UAAU,CAACW,GAAG,CAACyD,GAAG,CAAC;MAC5B;IACE,CAAC;IAAA,KAELI,QAAQ,GAAG;MACTtD,IAAI,EAAEA,CAAA,KAAMlB,UAAU,CAACW,GAAG,CAACZ,aAAa,CAAC0E,QAAQ,CAAC;MAClD/B,MAAM,EAAGrC,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAAC2E,cAAc,EAAErE,KAAK,CAAC;MACvEe,SAAS,EAAEA,CAAA,KAAMpB,UAAU,CAACW,GAAG,CAACZ,aAAa,CAAC4E,cAAc,CAAC;MAC7D7B,SAAS,EAAGzC,KAAK,IACfL,UAAU,CAACM,IAAI,CAACP,aAAa,CAAC6E,mBAAmB,EAAEvE,KAAK,CAAC;MAC3DiB,MAAM,EAAGjB,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAAC8E,cAAc,EAAExE,KAAK;IAExE,CAAC;IAAA,KAEDyE,SAAS,GAAG;MACV5D,IAAI,EAAEA,CAAA,KAAMlB,UAAU,CAACW,GAAG,CAACZ,aAAa,CAACgF,OAAO,CAAC;MACjDzD,MAAM,EAAGjB,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACgF,OAAO,EAAE1E,KAAK,CAAC;MAChEqC,MAAM,EAAGrC,KAAK,IAAKL,UAAU,CAACM,IAAI,CAACP,aAAa,CAACiF,cAAc,EAAE3E,KAAK,CAAC;MACvE4E,IAAI,EAAG5E,KAAK,IACVL,UAAU,CAACM,IAAI,CACZ,GAAEP,aAAa,CAACgF,OAAQ,IAAG1E,KAAK,CAAC6E,SAAU,EAAC,EAC7C7E,KAAK,CAACoC,MACR,CAAC;MACH0C,SAAS,EAAEA,CAAA,KAAMnF,UAAU,CAACW,GAAG,CAACZ,aAAa,CAACqF,kBAAkB;IAClE,CAAC;EAAA;AACH;AAEA,eAAe,IAAInF,MAAM,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}