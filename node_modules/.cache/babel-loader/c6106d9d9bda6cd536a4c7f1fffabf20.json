{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\blitz\\\\src\\\\Pages\\\\Dashboard\\\\Campaigns\\\\campaigns.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Box, Typography, Table, TableBody, TextField, TableCell, TableContainer, TableHead, TableRow, Paper, Checkbox, FormControl, InputLabel, Select, MenuItem, Button, Card, Grid, CardContent } from \"@mui/material\";\nimport Navbar from \"../../../Components/Navbar/NavBar\";\nimport { Dialog, DialogTitle, DialogContent, DialogActions, Link } from \"@mui/material\";\nimport RecentCampaign from \"./recentCampaigns\";\nimport { useNavigate } from \"react-router-dom\"; // Use useNavigate instead of useHistory\nimport Switch from \"@mui/material/Switch\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport IconButton from \"@mui/material/IconButton\";\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\nimport { useMutation } from \"react-query\";\nimport client from \"../../../API\";\nimport PostingInstructionsDialog from './postingInstructionsDialog';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Campaigns = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [campaigns, setCampaigns] = useState([]);\n  const [selectedCampaigns, setSelectedCampaigns] = useState([]);\n  const [selectedAction, setSelectedAction] = useState(\"\");\n  const [openDialog, setOpenDialog] = useState(false);\n  const [dialogContent, setDialogContent] = useState({});\n  const [creatorsToRemove, setCreatorsToRemove] = useState([]);\n  const [liveLinks, setLiveLinks] = useState({});\n  const [boostCodes, setBoostCodes] = useState({});\n  const [poNumber, setPoNumber] = useState(\"\");\n  const [statusFilter, setStatusFilter] = useState(\"All\");\n  const [blitzAutoCampaign, setBlitzAutoCampaign] = useState(false);\n  const [isPostingDialogOpen, setPostingDialogOpen] = useState(false);\n  const [currentCreatorIdForInstructions, setCurrentCreatorIdForInstructions] = useState(null);\n  const navigate = useNavigate();\n  const handleToggleChange = async event => {\n    const newBlitzAutoCampaignValue = event.target.checked;\n    setBlitzAutoCampaign(newBlitzAutoCampaignValue); // Update local state\n    setDialogContent(prevState => ({\n      ...prevState,\n      blitzautocampaign: blitzAutoCampaign\n    }));\n    // Optionally, if you want to immediately update the backend about this change (outside the launch campaign process), you can call the API here. This step is optional and depends on your specific requirements.\n  };\n  const handleAddCreatorsClick = campaignId => {\n    navigate(`/add-creators/${campaignId}`);\n  };\n  const {\n    mutate: fetchCampaigns\n  } = useMutation(client.campaigns.list, {\n    onSuccess: data => {\n      const filteredData = statusFilter === \"All\" ? data : data.filter(campaign => campaign.campaignstatus === statusFilter);\n      setCampaigns(filteredData);\n    },\n    onError: error => {\n      console.error(\"Error fetching campaigns:\", error);\n    }\n  });\n  const handleSavePostingInstructions = instructions => {\n    // Find the creator by ID and add the posting instructions\n    const updatedCreators = dialogContent.creators.map(creator => {\n      if (creator.id === currentCreatorIdForInstructions) {\n        return {\n          ...creator,\n          postingInstructions: instructions\n        };\n      }\n      return creator;\n    });\n\n    // Update the dialogContent with the new creators list\n    setDialogContent({\n      ...dialogContent,\n      creators: updatedCreators\n    });\n\n    // Reset the currentCreatorIdForInstructions and close the PostingInstructionsDialog\n    setCurrentCreatorIdForInstructions(null);\n    setPostingDialogOpen(false);\n  };\n  const handleCompleteCampaign = async () => {\n    // Check if campaignId and poNumber are available\n    if (!dialogContent.id) {\n      alert(\"Campaign ID is missing\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:5000/api/campaigns/completeCampaign/${dialogContent.id}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          poNumber\n        }) // Include poNumber in the body of the POST request\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Failed to complete campaign: ${errorData.message || response.statusText}`);\n      }\n\n      // Assuming the response includes some JSON data you might want to check or log\n      const responseData = await response.json();\n      console.log(responseData);\n      alert(\"Campaign completed successfully, PO number updated.\");\n\n      // Optionally, refresh your campaigns data or update UI accordingly\n      fetchCampaigns();\n    } catch (error) {\n      console.error(\"Error completing campaign:\", error);\n      alert(`Error: ${error.message}`);\n    }\n  };\n  const handleGenerateReport = async () => {\n    const campaignId = dialogContent.id; // Ensure you have the campaignId correctly obtained from your dialog content\n    const creatorLinks = dialogContent.creators.map(creator => creator.liveLink).filter(link => link);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/campaigns/generate_report\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          campaignId,\n          creatorLinks\n        }) // Ensure both campaignId and creatorLinks are included\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to generate report\");\n      }\n      const reportData = await response.json();\n      console.log(reportData); // For now, just logging the report data. You can update the UI based on this data.\n      alert(\"Report generated successfully. Check the console for details.\");\n    } catch (error) {\n      console.error(\"Error generating report:\", error);\n      alert(\"Failed to generate report.\");\n    }\n  };\n  const handleOpenDialog = campaignData => {\n    setDialogContent(campaignData); // Assuming campaignData is the object with details about the campaign\n    setOpenDialog(true);\n  };\n  const handleCreatorFieldChange = (creatorId, field, value) => {\n    if (field === \"assetsApproved\" && value === true) {\n      // When assets are approved, we want to open the dialog to enter posting instructions\n      setCurrentCreatorIdForInstructions(creatorId); // Save the current creator ID\n      setPostingDialogOpen(true); // Open the Posting Instructions Dialog\n      const updatedCreators = dialogContent.creators.map(creator => {\n        if (creator.id === creatorId) {\n          return {\n            ...creator,\n            [field]: value\n          };\n        }\n        return creator;\n      });\n      setDialogContent({\n        ...dialogContent,\n        creators: updatedCreators\n      });\n      sendPostingInstructions();\n    } else {\n      const updatedCreators = dialogContent.creators.map(creator => {\n        if (creator.id === creatorId) {\n          return {\n            ...creator,\n            [field]: value\n          };\n        }\n        return creator;\n      });\n      setDialogContent({\n        ...dialogContent,\n        creators: updatedCreators\n      });\n    }\n  };\n\n  // Function to handle closing the dialog\n  const handleCloseDialog = () => {\n    setOpenDialog(false);\n  };\n  const formatCampaignSum = sum => {\n    const numericSum = parseFloat(sum.replace(/[^\\d.]/g, \"\")); // Remove any non-numeric characters\n    return `$${numericSum.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`; // Format with commas and prefix with $\n  };\n\n  // Utility function to format proposal date\n  const formatProposalDate = dateString => {\n    const date = new Date(dateString);\n    // Format the date as mm/dd/yy\n    return `${(date.getMonth() + 1).toString().padStart(2, \"0\")}/${date.getDate().toString().padStart(2, \"0\")}/${date.getFullYear().toString().substr(-2)}`;\n  };\n  const {\n    mutate: fetchAndInitializeCampaigns,\n    isLoading\n  } = useMutation(client.campaigns.list, {\n    onSuccess: data => {\n      const initializedCampaigns = data.map(campaign => ({\n        ...campaign,\n        status: \"Pending\" // Assuming you want to set all fetched campaigns to \"Pending\"\n      }));\n      setCampaigns(initializedCampaigns);\n    },\n    onError: error => {\n      console.error(\"Error fetching campaigns:\", error);\n    }\n  });\n  // This function could be added within your existing React component\n  const sendPostingInstructions = async creatorId => {\n    const creator = dialogContent.creators.find(c => c.id === creatorId);\n    if (!creator || !creator.postingInstructions) {\n      console.error(\"Creator or posting instructions not found.\");\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:5000/api/sendPostingInstructions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          creatorId: creator.id,\n          postingInstructions: creator.postingInstructions,\n          phoneNumber: creator.phoneNumber // Assuming each creator has a phoneNumber attribute\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send posting instructions');\n      }\n      const data = await response.json();\n      console.log('Posting instructions sent successfully:', data);\n    } catch (error) {\n      console.error('Error sending posting instructions:', error);\n    }\n  };\n  useEffect(() => {\n    if (!isMounted) return;\n    // Call the function\n    fetchAndInitializeCampaigns();\n    fetchCampaigns();\n  }, [isMounted, statusFilter]); // Empty dependency array means this effect runs once on mount\n\n  const handleActionChange = event => {\n    setSelectedAction(event.target.value);\n  };\n  const handleCheckboxChange = campaignId => {\n    const selectedIndex = selectedCampaigns.indexOf(campaignId);\n    let newSelected = [];\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selectedCampaigns, campaignId);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selectedCampaigns.slice(1));\n    } else if (selectedIndex === selectedCampaigns.length - 1) {\n      newSelected = newSelected.concat(selectedCampaigns.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(selectedCampaigns.slice(0, selectedIndex), selectedCampaigns.slice(selectedIndex + 1));\n    }\n    setSelectedCampaigns(newSelected);\n  };\n  const handleLaunchCampaign = async () => {\n    const creatorNames = dialogContent.creators.map(creator => creator.name);\n    const creatorPrices = dialogContent.creators.reduce((acc, creator) => {\n      acc[creator.name] = creator.price; // Map each creator's name to their price\n      return acc;\n    }, {});\n    try {\n      const response = await fetch(`http://localhost:5000/api/campaign_handler/launch_campaign`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          campaignId: dialogContent.id,\n          campaignBrief: dialogContent.brief,\n          // Ensure this is the key expected by your backend\n          creatorNames,\n          creatorPrices,\n          // Mapping of creator names to their prices\n          blitzautocampaign: blitzAutoCampaign // Include blitzAutoCampaign in the request body\n        })\n      });\n      if (!response.ok) {\n        // Here, you could extract more detailed error information if your backend sends it\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to launch campaign\");\n      }\n      const result = await response.json();\n      console.log(result);\n      alert(\"Campaign launched successfully!\");\n\n      // Assuming fetchCampaigns is a function that updates the UI with the latest campaigns list\n      fetchCampaigns();\n    } catch (error) {\n      console.error(\"Error launching campaign:\", error);\n      alert(\"Error launching campaign: \" + error.message);\n    }\n  };\n  const handleRowDoubleClick = campaign => {\n    setDialogContent(campaign);\n    setOpenDialog(true);\n  };\n  const applyAction = async () => {\n    if (selectedAction === \"delete\") {\n      await fetch(\"http://localhost:5000/api/campaigns/delete\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          id: selectedCampaigns\n        }) // Changed from campaignIds to id\n      });\n      fetchCampaigns(); // Refresh campaigns after deletion\n    } else if (selectedAction === \"Archive\" || selectedAction === \"pause\") {\n      const status = selectedAction === \"archive\" ? \"Archived\" : \"Paused\";\n      await fetch(\"http://localhost:5000/api/campaigns/updateStatus\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          campaignIds: selectedCampaigns,\n          status\n        })\n      });\n      fetchCampaigns(); // Refresh campaigns after status update\n    }\n    setSelectedCampaigns([]); // Clear selection after action\n  };\n  function formatIdealDueDate(dateString) {\n    // Directly use the dateString to create a new Date object\n    const date = new Date(dateString);\n    if (isNaN(date.getTime())) {\n      return \"Invalid Date\"; // Or any placeholder you prefer\n    } else {\n      // Ensure timezone does not affect the output, consider formatting like so:\n      // Extract month, day, and year, then format it as MM/DD/YY\n      const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n      const day = date.getDate().toString().padStart(2, \"0\");\n      const year = date.getFullYear().toString().substr(-2);\n      return `${month}/${day}/${year}`; // Returns \"MM/DD/YY\"\n    }\n  }\n  const CampaignDetailDialog = () => {\n    _s();\n    // Calculate total sum and number of creators\n    const [newPrices, setNewPrices] = useState({}); // Hold new prices for creators    const [selectedCreatorForAction, setSelectedCreatorForAction] = useState(null);\n    useState(null);\n    const [postingInstructions, setPostingInstructions] = useState('');\n    // Function to handle the selection of a creator for a specific action\n    const handleActionSelection = event => {\n      const action = event.target.value;\n      setSelectedAction(action);\n      // Additional logic to prepare for the action (e.g., set up for removal or price update)\n    };\n    // Calculate total sum and number of creatorsr\n    const totalCampaignSum = dialogContent.creators ? dialogContent.creators.reduce((acc, creator) => {\n      // Remove any characters that are not digits or a dot, then parse\n      const price = parseFloat((newPrices[creator.id] || creator.price || \"0\").replace(/[^\\d.]/g, \"\"));\n      return acc + price;\n    }, 0) : 0;\n    const totalCreators = dialogContent.creators ? dialogContent.creators.length : 0;\n\n    // Function to stage creator removals without immediate effect\n    // Toggle creator removal\n    const toggleCreatorRemoval = creatorId => {\n      setCreatorsToRemove(prevCreators => {\n        if (prevCreators.includes(creatorId)) {\n          return prevCreators.filter(id => id !== creatorId);\n        } else {\n          return [...prevCreators, creatorId];\n        }\n      });\n    };\n    const handleAddPostingInstructions = async () => {\n      // Ensuring campaignId is properly defined from dialogContent\n      const campaignId = dialogContent.id;\n      // Using dialogContent.id to ensure the correct campaign ID is referenced\n      const data = {\n        campaignId: campaignId,\n        // Correctly referencing the campaign ID from dialogContent\n        creators: dialogContent.creators.map(creator => {\n          if (creator.id === currentCreatorIdForInstructions) {\n            return {\n              ...creator,\n              postingInstructions: postingInstructions\n            };\n          }\n          return creator;\n        })\n      };\n      try {\n        const response = await fetch('http://localhost:5000/api/campaigns/updateCreatorDetails', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(data)\n        });\n        if (!response.ok) {\n          throw new Error('Failed to update posting instructions');\n        }\n        alert('Posting instructions added successfully');\n        setPostingInstructions(''); // Reset the instructions input\n        // Optionally refresh or update the UI here\n      } catch (error) {\n        console.error('Error adding posting instructions:', error);\n        alert('Error adding posting instructions');\n      }\n    };\n\n    // Update price function\n    const updatePrice = (creatorId, event) => {\n      const price = event.target.value; // Assuming you want to capture the value directly\n      setNewPrices(prevPrices => ({\n        ...prevPrices,\n        [creatorId]: price // Ensure this captures the correct value format\n      }));\n    };\n    const applyChanges = async () => {\n      // Early exit if no action is selected or no modifications are specified\n      const requestBody = {\n        campaignId: dialogContent.id,\n        creators: dialogContent.creators,\n        blitzAutoCampaign: dialogContent.blitzautocampaign\n      };\n      try {\n        const response = await fetch(`http://localhost:5000/api/campaigns/updateCreatorDetails`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(requestBody)\n        });\n        if (!response.ok) throw new Error(\"Failed to update creator details.\");\n        alert(\"Creator details updated successfully.\");\n        fetchCampaigns(); // Refresh the campaign data\n      } catch (error) {\n        console.error(\"Error updating creator details:\", error);\n        alert(\"Failed to update creator details.\");\n      }\n      handleCloseDialog();\n      if (selectedAction === \"remove\" && creatorsToRemove.length > 0) {\n        try {\n          const response = await fetch(\"http://localhost:5000/api/campaigns/removeCreators\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              campaignId: dialogContent.id,\n              creatorIds: creatorsToRemove\n            })\n          });\n          if (!response.ok) {\n            // Handle error response\n            const errorData = await response.json();\n            console.error(`Failed to remove creators: ${errorData.message}`);\n            return; // Exit if there is an error\n          }\n          // Success - Optionally, you can refresh the campaign data or clear the state\n          setCreatorsToRemove([]);\n          updateCampaignSum();\n          fetchCampaigns(); // Refresh the campaigns to reflect the removal\n        } catch (error) {\n          console.error(\"Error removing creators:\", error);\n        }\n      }\n\n      // Inside your applyChanges function for the \"counter\" action\n      if (selectedAction === \"counter\" && Object.keys(newPrices).length > 0) {\n        try {\n          const response = await fetch(\"http://localhost:5000/api/campaigns/updateCreatorPrices\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n              campaignId: dialogContent.id,\n              // Ensure this is an integer\n              newPrices // This should be an object mapping creator IDs to their new prices\n            })\n          });\n          if (response.ok) {\n            // After successful removal\n            updateCampaignSum();\n            fetchCampaigns(); // Refresh the campaign data\n          }\n          if (!response.ok) {\n            const errorData = await response.json();\n            throw new Error(`Failed to update creator prices: ${errorData.message}`);\n          }\n\n          // If successful, reset the newPrices\n          setNewPrices({});\n        } catch (error) {\n          console.error(\"Error updating prices:\", error);\n          // Handle error (e.g., show a message to the user)\n        }\n      }\n      // Close the dialog regardless of outcome\n      updateCampaignSum();\n      updateLiveLinksAndBoostCodes();\n      handleCloseDialog();\n      fetchCampaigns(); // Refresh the campaign data\n    };\n    const updateCampaignSum = async () => {\n      try {\n        const campaignSumToUpdate = totalCampaignSum; // Use the calculated totalCampaignSum\n        const response = await fetch(\"http://localhost:5000/api/campaigns/updateCampaignSum\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            campaignId: dialogContent.id,\n            campaignSum: campaignSumToUpdate.toString() // Convert to string if needed\n          })\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to update campaign sum\");\n        }\n        alert(\"Campaign sum updated successfully\");\n        fetchCampaigns(); // Refresh the campaign list to reflect the updated sum\n      } catch (error) {\n        console.error(\"Error updating campaign sum:\", error);\n      }\n    };\n    const updateLiveLinksAndBoostCodes = async () => {\n      // Constructing the updates payload\n      const updates = dialogContent.creators.map(creator => ({\n        id: creator.id,\n        liveLink: liveLinks[creator.id] || \"\",\n        boostCode: boostCodes[creator.id] || \"\"\n      })).filter(update => update.liveLink || update.boostCode); // Filter out entries without updates\n\n      if (updates.length === 0) {\n        alert(\"No updates to apply\");\n        return false; // Early exit if no updates\n      }\n      try {\n        const response = await fetch(\"http://localhost:5000/api/campaigns/updateLinksAndCodes\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            campaignId: dialogContent.id,\n            // Assuming `dialogContent` holds the current campaign's data\n            updates: updates\n          })\n        });\n        if (!response.ok) throw new Error(\"Failed to update live links and boost codes\");\n\n        // Success handling\n        alert(\"Live links and boost codes updated successfully\");\n        setLiveLinks({});\n        setBoostCodes({});\n        // You might want to refresh or update the UI accordingly here\n\n        return true; // Indicate success\n      } catch (error) {\n        console.error(\"Error updating live links and boost codes:\", error);\n        alert(\"Failed to update live links and boost codes\");\n        return false; // Indicate failure\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: handleCloseDialog,\n      maxWidth: \"xl\",\n      fullWidth: true,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [\"Campaign Name: \", dialogContent === null || dialogContent === void 0 ? void 0 : dialogContent.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: (dialogContent === null || dialogContent === void 0 ? void 0 : dialogContent.drivelink) && /*#__PURE__*/_jsxDEV(Link, {\n                href: dialogContent.drivelink,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                children: \"View Campaign Assets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 645,\n                columnNumber: 3\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 643,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 639,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h6\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"Ideal Due Date:\", \" \", formatIdealDueDate(dialogContent === null || dialogContent === void 0 ? void 0 : dialogContent.idealduedate)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 654,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"PO Number\",\n              required: true,\n              fullWidth: true,\n              value: poNumber,\n              onChange: e => setPoNumber(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 3,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => setPoNumber(`PO-${Math.floor(Math.random() * 10000)}`),\n              fullWidth: true,\n              children: \"Generate New PO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            style: {\n              marginTop: 8\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              gap: 2,\n              children: [/*#__PURE__*/_jsxDEV(Select, {\n                value: selectedAction // Tracks the current selected action within the dialog\n                ,\n                displayEmpty: true,\n                onChange: handleActionSelection,\n                style: {\n                  flexGrow: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"\",\n                  disabled: true,\n                  children: \"Actions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 688,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"remove\",\n                  children: \"Remove Creator\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"counter\",\n                  children: \"Counter Offer Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 692,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  children: \"Blitz SMS and Email Automation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 695,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                  checked: dialogContent.blitzautocampaign // Use dialogContent's blitzAutoCampaign\n                  ,\n                  onChange: handleToggleChange,\n                  name: \"blitzautocampaign\",\n                  inputProps: {\n                    \"aria-label\": \"Blitz SMS and Email Automation toggle\"\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 697,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"This is in alpha mode, so there may be errors if you try to run a campaign this way\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: /*#__PURE__*/_jsxDEV(HelpOutlineIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 708,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 707,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 706,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 694,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: () => handleLaunchCampaign(dialogContent.id),\n                children: \"Launch Campaign\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 713,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"success\",\n                onClick: () => handleAddCreatorsClick(dialogContent === null || dialogContent === void 0 ? void 0 : dialogContent.id) // Pass the current dialog's campaign ID\n                ,\n                children: \"Add Creators\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 721,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleGenerateReport,\n                children: \"Generate Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 728,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"secondary\",\n                onClick: applyChanges,\n                children: \"Approve Changes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 735,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"warning\",\n                onClick: handleCompleteCampaign,\n                children: \"Complete Campaign\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 742,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: dialogContent !== null && dialogContent !== void 0 && dialogContent.creators ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              \"aria-label\": \"creator details\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 761,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Name/ID\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 762,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 763,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Offer Sent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 764,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Assets Sent\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 767,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Approve Assets\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 770,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Live Link\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 773,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Usage or Boost Code\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 776,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Post Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 779,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Total Views\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 782,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Total Likes\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 785,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Total Comments\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 788,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Total Engagement\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 791,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Report\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 794,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 795,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 760,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 759,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: dialogContent.creators.map((creator, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: creatorsToRemove.includes(creator.id),\n                      onChange: () => toggleCreatorRemoval(creator.id),\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 802,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 801,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: creator.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 808,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: selectedAction === \"counter\" ? /*#__PURE__*/_jsxDEV(TextField, {\n                      type: \"text\",\n                      value: newPrices[creator.id] || creator.price.toString(),\n                      onChange: e => updatePrice(creator.id, e),\n                      fullWidth: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 812,\n                      columnNumber: 29\n                    }, this) : creator.price\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 809,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: blitzAutoCampaign ? creator.offerSent ? \"Yes\" : \"No\" : /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: creator.offerSent || false,\n                      onChange: e => handleCreatorFieldChange(creator.id, \"offerSent\", e.target.checked),\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 833,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 825,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: blitzAutoCampaign ? creator.assetsSent ? \"Yes\" : \"No\" : /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: creator.assetsSent || false,\n                      onChange: e => handleCreatorFieldChange(creator.id, \"assetsSent\", e.target.checked),\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 854,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 846,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: creator.assetsApproved || false,\n                      onChange: e => handleCreatorFieldChange(creator.id, \"assetsApproved\", e.target.checked),\n                      color: \"primary\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 869,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 867,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      size: \"small\",\n                      placeholder: \"Live Link\",\n                      value: liveLinks[creator.id] !== undefined ? liveLinks[creator.id] : creator.liveLink || \"\",\n                      onChange: e => setLiveLinks({\n                        ...liveLinks,\n                        [creator.id]: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 882,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      size: \"small\",\n                      placeholder: \"Boost Code\",\n                      value: boostCodes[creator.id] !== undefined ? boostCodes[creator.id] : creator.boostCode || \"\",\n                      onChange: e => setBoostCodes({\n                        ...boostCodes,\n                        [creator.id]: e.target.value\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 900,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 899,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: blitzAutoCampaign ? creator.postDate || \"N/A\" : /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      size: \"small\",\n                      placeholder: \"YYYY-MM-DD\",\n                      value: creator.postDate || \"\",\n                      onChange: e => handleCreatorFieldChange(creator.id, \"postDate\", e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 921,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 917,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: blitzAutoCampaign ? creator.totalViews || \"N/A\" : /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      size: \"small\",\n                      placeholder: \"Total Views\",\n                      value: creator.totalViews || \"\",\n                      onChange: e => handleCreatorFieldChange(creator.id, \"totalViews\", e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 940,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 936,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: blitzAutoCampaign ? creator.likes || \"N/A\" : /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      size: \"small\",\n                      placeholder: \"Likes\",\n                      value: creator.likes || \"\",\n                      onChange: e => handleCreatorFieldChange(creator.id, \"likes\", e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 959,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 955,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: blitzAutoCampaign ? creator.comments || \"N/A\" : /*#__PURE__*/_jsxDEV(TextField, {\n                      variant: \"outlined\",\n                      size: \"small\",\n                      placeholder: \"Comments\",\n                      value: creator.comments || \"\",\n                      onChange: e => handleCreatorFieldChange(creator.id, \"comments\", e.target.value)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 978,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 974,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: creator.totalEngagement || \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 993,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: creator.campaignRecap || \"N/A\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 997,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: blitzAutoCampaign ? creator.status : /*#__PURE__*/_jsxDEV(Select, {\n                      value: creator.status,\n                      onChange: e => handleCreatorFieldChange(creator.id, \"status\", e.target.value),\n                      displayEmpty: true,\n                      inputProps: {\n                        \"aria-label\": \"Without label\"\n                      },\n                      variant: \"outlined\",\n                      size: \"small\",\n                      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"\",\n                        children: /*#__PURE__*/_jsxDEV(\"em\", {\n                          children: \"None\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1020,\n                          columnNumber: 31\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1019,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"Accepted\",\n                        children: \"Accepted\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1022,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                        value: \"declined\",\n                        children: \"Declined\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1023,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1005,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1001,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 800,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            marginTop: 2,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Total Campaign Sum: $\", totalCampaignSum.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1033,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              margin: \"dense\",\n              label: \"Posting Instructions\",\n              type: \"text\",\n              fullWidth: true,\n              multiline: true,\n              minRows: 3,\n              value: postingInstructions,\n              onChange: e => setPostingInstructions(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1036,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: handleAddPostingInstructions,\n                children: \"Add Posting Instructions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1047,\n                columnNumber: 9\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1046,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              children: [\"Total Creators: \", totalCreators]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1049,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1032,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Typography, {\n          children: \"No creator data available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1053,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleCloseDialog,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1058,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1057,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 7\n    }, this);\n  };\n  _s(CampaignDetailDialog, \"Kc/dcmN33Ha8At15UGlNdzkf5MM=\");\n  const sortedCampaigns = campaigns.sort((a, b) => new Date(b.proposaldate) - new Date(a.proposaldate));\n  const handleSelectCampaign = campaign => {\n    setDialogContent(campaign); // Set the selected campaign as dialog content\n    setOpenDialog(true); // Open the dialog\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1073,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        my: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        component: \"div\",\n        style: {\n          color: \"#1976d2\"\n        },\n        children: \"Campaigns\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1075,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1084,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [sortedCampaigns.slice(0, 3).map(campaign => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(RecentCampaign, {\n              campaign: campaign,\n              onSelectCampaign: handleSelectCampaign\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1088,\n              columnNumber: 17\n            }, this)\n          }, campaign.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1087,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              elevation: 3,\n              sx: {\n                minWidth: 275,\n                margin: 2\n              },\n              children: /*#__PURE__*/_jsxDEV(CardContent, {\n                onDoubleClick: () => onSelectCampaign(campaign),\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h5\",\n                  component: \"div\",\n                  gutterBottom: true,\n                  children: \"Summary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1101,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Total Campaigns: \", campaigns.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Active Campaigns:\", \" \", campaigns.filter(campaign => campaign.campaignstatus === \"Launched\").length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1107,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Total Budget: $\", campaigns.reduce((sum, campaign) => sum + Number(campaign.campaign_sum || 0), 0).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1115,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Total Posts Up:\", \" \", campaigns.reduce((sum, campaign) => sum + campaign.creators.filter(creator => creator.liveLink).length, 0)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1125,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Total Posts Remaining:\", \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1136,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Total Views:\", \" \", campaigns.reduce((sum, campaign) => sum + campaign.creators.reduce((cSum, creator) => cSum + Number(creator.totalViews || 0), 0), 0).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1140,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: [\"Total Engagement:\", \" \", campaigns.reduce((sum, campaign) => sum + campaign.creators.reduce((cSum, creator) => cSum + Number(creator.totalEngagement || 0), 0), 0).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1155,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1099,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1085,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 12,\n          sx: {\n            paddingRight: \"2%\"\n          },\n          children: [\" \", \" \", /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              justifyContent: \"flex-start\",\n              alignItems: \"center\",\n              gap: 2,\n              mb: 4\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              size: \"small\",\n              sx: {\n                minWidth: 240,\n                marginLeft: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"status-filter-label\",\n                children: \"Filter by Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"status-filter-label\",\n                value: statusFilter,\n                onChange: event => {\n                  setStatusFilter(event.target.value);\n                },\n                label: \"Filter by Status\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"All\",\n                  children: \"All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1203,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Draft\",\n                  children: \"Draft\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1204,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Paused\",\n                  children: \"Paused\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1205,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Completed\",\n                  children: \"Completed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"Launched\",\n                  children: \"Launched\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1207,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1195,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              variant: \"outlined\",\n              size: \"small\",\n              sx: {\n                minWidth: 240\n              },\n              children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                id: \"action-type-label\",\n                children: \"Action Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1216,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Select, {\n                labelId: \"action-type-label\",\n                value: selectedAction,\n                onChange: handleActionChange,\n                label: \"Action Type\",\n                children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"edit\",\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1223,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"delete\",\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1224,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"archive\",\n                  children: \"Archive\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1225,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: \"pause\",\n                  children: \"Pause\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1226,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1217,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: applyAction,\n              children: \"Apply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n            component: Paper,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              \"aria-label\": \"campaigns table\",\n              sx: {\n                minWidth: 650\n              },\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                style: {\n                  backgroundColor: \"black\",\n                  color: \"white\"\n                },\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Select\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1237,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Campaign Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1238,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Brief\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1241,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Campaign Sum\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1242,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Proposal Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1245,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Product Type\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1248,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Creators\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1251,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Video Amount\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1252,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Ideal Due Date\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1255,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    style: {\n                      color: \"white\"\n                    },\n                    children: \"Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1259,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1236,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: campaigns.length > 0 ? campaigns.map(campaign => /*#__PURE__*/_jsxDEV(TableRow, {\n                  onDoubleClick: () => handleRowDoubleClick(campaign),\n                  hover: true,\n                  children: [\" \", /*#__PURE__*/_jsxDEV(TableCell, {\n                    padding: \"checkbox\",\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: selectedCampaigns.indexOf(campaign.id) !== -1,\n                      onChange: () => handleCheckboxChange(campaign.id)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1272,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1271,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    onClick: () => handleOpenDialog(campaign),\n                    style: {\n                      cursor: \"pointer\",\n                      textDecoration: \"underline\"\n                    },\n                    children: campaign.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1279,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: campaign.brief\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1288,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: formatCampaignSum(campaign.campaign_sum)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1289,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: formatProposalDate(campaign.proposaldate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1292,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: campaign.campaigntype\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1295,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: campaign.creators.map(creator => creator.name).join(\", \")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1296,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: campaign.videoamount\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1301,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h6\",\n                      children: formatIdealDueDate(dialogContent === null || dialogContent === void 0 ? void 0 : dialogContent.idealduedate)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1303,\n                      columnNumber: 27\n                    }, this), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1302,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: campaign.campaignstatus\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1307,\n                    columnNumber: 25\n                  }, this)]\n                }, campaign.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1265,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: \"8\",\n                    align: \"center\",\n                    children: \"No campaigns available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1312,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1311,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1262,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1234,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1233,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1174,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1083,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1074,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CampaignDetailDialog, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1323,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostingInstructionsDialog, {\n      open: isPostingDialogOpen,\n      onClose: () => setPostingDialogOpen(false),\n      onSave: handleSavePostingInstructions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1325,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1072,\n    columnNumber: 5\n  }, this);\n};\n_s2(Campaigns, \"ZDaeBvqZK3IYnEwIDOQbeBnCWR0=\", false, function () {\n  return [useNavigate, useMutation, useMutation];\n});\n_c = Campaigns;\nexport default Campaigns;\nvar _c;\n$RefreshReg$(_c, \"Campaigns\");","map":{"version":3,"names":["React","useState","useEffect","Container","Box","Typography","Table","TableBody","TextField","TableCell","TableContainer","TableHead","TableRow","Paper","Checkbox","FormControl","InputLabel","Select","MenuItem","Button","Card","Grid","CardContent","Navbar","Dialog","DialogTitle","DialogContent","DialogActions","Link","RecentCampaign","useNavigate","Switch","Tooltip","IconButton","HelpOutlineIcon","useMutation","client","PostingInstructionsDialog","jsxDEV","_jsxDEV","Fragment","_Fragment","Campaigns","_s2","_s","$RefreshSig$","campaigns","setCampaigns","selectedCampaigns","setSelectedCampaigns","selectedAction","setSelectedAction","openDialog","setOpenDialog","dialogContent","setDialogContent","creatorsToRemove","setCreatorsToRemove","liveLinks","setLiveLinks","boostCodes","setBoostCodes","poNumber","setPoNumber","statusFilter","setStatusFilter","blitzAutoCampaign","setBlitzAutoCampaign","isPostingDialogOpen","setPostingDialogOpen","currentCreatorIdForInstructions","setCurrentCreatorIdForInstructions","navigate","handleToggleChange","event","newBlitzAutoCampaignValue","target","checked","prevState","blitzautocampaign","handleAddCreatorsClick","campaignId","mutate","fetchCampaigns","list","onSuccess","data","filteredData","filter","campaign","campaignstatus","onError","error","console","handleSavePostingInstructions","instructions","updatedCreators","creators","map","creator","id","postingInstructions","handleCompleteCampaign","alert","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","statusText","responseData","log","handleGenerateReport","creatorLinks","liveLink","link","reportData","handleOpenDialog","campaignData","handleCreatorFieldChange","creatorId","field","value","sendPostingInstructions","handleCloseDialog","formatCampaignSum","sum","numericSum","parseFloat","replace","toFixed","formatProposalDate","dateString","date","Date","getMonth","toString","padStart","getDate","getFullYear","substr","fetchAndInitializeCampaigns","isLoading","initializedCampaigns","status","find","c","phoneNumber","isMounted","handleActionChange","handleCheckboxChange","selectedIndex","indexOf","newSelected","concat","slice","length","handleLaunchCampaign","creatorNames","name","creatorPrices","reduce","acc","price","campaignBrief","brief","result","handleRowDoubleClick","applyAction","campaignIds","formatIdealDueDate","isNaN","getTime","month","day","year","CampaignDetailDialog","newPrices","setNewPrices","setPostingInstructions","handleActionSelection","action","totalCampaignSum","totalCreators","toggleCreatorRemoval","prevCreators","includes","handleAddPostingInstructions","updatePrice","prevPrices","applyChanges","requestBody","creatorIds","updateCampaignSum","Object","keys","updateLiveLinksAndBoostCodes","campaignSumToUpdate","campaignSum","updates","boostCode","update","open","onClose","maxWidth","fullWidth","children","container","alignItems","spacing","item","xs","md","variant","fileName","_jsxFileName","lineNumber","columnNumber","drivelink","href","rel","idealduedate","label","required","onChange","e","onClick","Math","floor","random","style","marginTop","display","justifyContent","gap","displayEmpty","flexGrow","disabled","inputProps","title","color","component","index","padding","type","offerSent","assetsSent","assetsApproved","size","placeholder","undefined","postDate","totalViews","likes","comments","totalEngagement","campaignRecap","margin","multiline","minRows","sortedCampaigns","sort","a","b","proposaldate","handleSelectCampaign","sx","my","gutterBottom","onSelectCampaign","elevation","minWidth","onDoubleClick","Number","campaign_sum","toLocaleString","cSum","paddingRight","mb","marginLeft","labelId","backgroundColor","hover","cursor","textDecoration","campaigntype","join","videoamount","colSpan","align","onSave","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/GitHub/blitz/src/Pages/Dashboard/Campaigns/campaigns.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Box,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TextField,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Checkbox,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Button,\r\n  Card,\r\n  Grid,\r\n  CardContent,\r\n} from \"@mui/material\";\r\nimport Navbar from \"../../../Components/Navbar/NavBar\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  Link,\r\n} from \"@mui/material\";\r\nimport RecentCampaign from \"./recentCampaigns\";\r\nimport { useNavigate } from \"react-router-dom\"; // Use useNavigate instead of useHistory\r\nimport Switch from \"@mui/material/Switch\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport HelpOutlineIcon from \"@mui/icons-material/HelpOutline\";\r\nimport { useMutation } from \"react-query\";\r\nimport client from \"../../../API\";\r\nimport PostingInstructionsDialog from './postingInstructionsDialog';\r\n\r\nconst Campaigns = () => {\r\n  const [campaigns, setCampaigns] = useState([]);\r\n  const [selectedCampaigns, setSelectedCampaigns] = useState([]);\r\n  const [selectedAction, setSelectedAction] = useState(\"\");\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [dialogContent, setDialogContent] = useState({});\r\n  const [creatorsToRemove, setCreatorsToRemove] = useState([]);\r\n  const [liveLinks, setLiveLinks] = useState({});\r\n  const [boostCodes, setBoostCodes] = useState({});\r\n  const [poNumber, setPoNumber] = useState(\"\");\r\n  const [statusFilter, setStatusFilter] = useState(\"All\");\r\n  const [blitzAutoCampaign, setBlitzAutoCampaign] = useState(false);\r\n  const [isPostingDialogOpen, setPostingDialogOpen] = useState(false);\r\n  const [currentCreatorIdForInstructions, setCurrentCreatorIdForInstructions] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const handleToggleChange = async (event) => {\r\n    const newBlitzAutoCampaignValue = event.target.checked;\r\n    setBlitzAutoCampaign(newBlitzAutoCampaignValue); // Update local state\r\n    setDialogContent(prevState => ({\r\n      ...prevState,\r\n      blitzautocampaign: blitzAutoCampaign,\r\n    }));\r\n    // Optionally, if you want to immediately update the backend about this change (outside the launch campaign process), you can call the API here. This step is optional and depends on your specific requirements.\r\n  };\r\n\r\n  const handleAddCreatorsClick = (campaignId) => {\r\n    navigate(`/add-creators/${campaignId}`);\r\n  };\r\n\r\n  const { mutate: fetchCampaigns } = useMutation(client.campaigns.list, {\r\n    onSuccess: (data) => {\r\n      const filteredData =\r\n        statusFilter === \"All\"\r\n          ? data\r\n          : data.filter((campaign) => campaign.campaignstatus === statusFilter);\r\n      setCampaigns(filteredData);\r\n    },\r\n    onError: (error) => {\r\n      console.error(\"Error fetching campaigns:\", error);\r\n    },\r\n  });\r\n  const handleSavePostingInstructions = (instructions) => {\r\n    // Find the creator by ID and add the posting instructions\r\n    const updatedCreators = dialogContent.creators.map((creator) => {\r\n      if (creator.id === currentCreatorIdForInstructions) {\r\n        return { ...creator, postingInstructions: instructions };\r\n      }\r\n      return creator;\r\n    });\r\n    \r\n    // Update the dialogContent with the new creators list\r\n    setDialogContent({ ...dialogContent, creators: updatedCreators });\r\n    \r\n    // Reset the currentCreatorIdForInstructions and close the PostingInstructionsDialog\r\n    setCurrentCreatorIdForInstructions(null);\r\n    setPostingDialogOpen(false);\r\n  };\r\n  \r\n  const handleCompleteCampaign = async () => {\r\n    // Check if campaignId and poNumber are available\r\n    if (!dialogContent.id) {\r\n      alert(\"Campaign ID is missing\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/campaigns/completeCampaign/${dialogContent.id}`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ poNumber }), // Include poNumber in the body of the POST request\r\n        },\r\n      );\r\n\r\n      if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(\r\n          `Failed to complete campaign: ${\r\n            errorData.message || response.statusText\r\n          }`,\r\n        );\r\n      }\r\n\r\n      // Assuming the response includes some JSON data you might want to check or log\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n      alert(\"Campaign completed successfully, PO number updated.\");\r\n\r\n      // Optionally, refresh your campaigns data or update UI accordingly\r\n      fetchCampaigns();\r\n    } catch (error) {\r\n      console.error(\"Error completing campaign:\", error);\r\n      alert(`Error: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleGenerateReport = async () => {\r\n    const campaignId = dialogContent.id; // Ensure you have the campaignId correctly obtained from your dialog content\r\n    const creatorLinks = dialogContent.creators\r\n      .map((creator) => creator.liveLink)\r\n      .filter((link) => link);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"http://localhost:5000/api/campaigns/generate_report\",\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ campaignId, creatorLinks }), // Ensure both campaignId and creatorLinks are included\r\n        },\r\n      );\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to generate report\");\r\n      }\r\n\r\n      const reportData = await response.json();\r\n      console.log(reportData); // For now, just logging the report data. You can update the UI based on this data.\r\n      alert(\"Report generated successfully. Check the console for details.\");\r\n    } catch (error) {\r\n      console.error(\"Error generating report:\", error);\r\n      alert(\"Failed to generate report.\");\r\n    }\r\n  };\r\n\r\n  const handleOpenDialog = (campaignData) => {\r\n    setDialogContent(campaignData); // Assuming campaignData is the object with details about the campaign\r\n    setOpenDialog(true);\r\n  };\r\n  const handleCreatorFieldChange = (creatorId, field, value) => {\r\n    if (field === \"assetsApproved\" && value === true) {\r\n      // When assets are approved, we want to open the dialog to enter posting instructions\r\n      setCurrentCreatorIdForInstructions(creatorId); // Save the current creator ID\r\n      setPostingDialogOpen(true); // Open the Posting Instructions Dialog\r\n      const updatedCreators = dialogContent.creators.map((creator) => {\r\n        if (creator.id === creatorId) {\r\n          return { ...creator, [field]: value };\r\n        }\r\n        return creator;\r\n      });\r\n      setDialogContent({ ...dialogContent, creators: updatedCreators });\r\n      sendPostingInstructions();\r\n    } else {\r\n      const updatedCreators = dialogContent.creators.map((creator) => {\r\n        if (creator.id === creatorId) {\r\n          return { ...creator, [field]: value };\r\n        }\r\n        return creator;\r\n      });\r\n      setDialogContent({ ...dialogContent, creators: updatedCreators });\r\n    }\r\n  };\r\n\r\n  // Function to handle closing the dialog\r\n  const handleCloseDialog = () => {\r\n    setOpenDialog(false);\r\n  };\r\n  const formatCampaignSum = (sum) => {\r\n    const numericSum = parseFloat(sum.replace(/[^\\d.]/g, \"\")); // Remove any non-numeric characters\r\n    return `$${numericSum.toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}`; // Format with commas and prefix with $\r\n  };\r\n\r\n  // Utility function to format proposal date\r\n  const formatProposalDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    // Format the date as mm/dd/yy\r\n    return `${(date.getMonth() + 1).toString().padStart(2, \"0\")}/${date\r\n      .getDate()\r\n      .toString()\r\n      .padStart(2, \"0\")}/${date.getFullYear().toString().substr(-2)}`;\r\n  };\r\n\r\n  const { mutate: fetchAndInitializeCampaigns, isLoading } = useMutation(\r\n    client.campaigns.list,\r\n    {\r\n      onSuccess: (data) => {\r\n        const initializedCampaigns = data.map((campaign) => ({\r\n          ...campaign,\r\n          status: \"Pending\", // Assuming you want to set all fetched campaigns to \"Pending\"\r\n        }));\r\n        setCampaigns(initializedCampaigns);\r\n      },\r\n      onError: (error) => {\r\n        console.error(\"Error fetching campaigns:\", error);\r\n      },\r\n    },\r\n  );\r\n// This function could be added within your existing React component\r\nconst sendPostingInstructions = async (creatorId) => {\r\n  const creator = dialogContent.creators.find(c => c.id === creatorId);\r\n  if (!creator || !creator.postingInstructions) {\r\n    console.error(\"Creator or posting instructions not found.\");\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch('http://localhost:5000/api/sendPostingInstructions', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        creatorId: creator.id,\r\n        postingInstructions: creator.postingInstructions,\r\n        phoneNumber: creator.phoneNumber, // Assuming each creator has a phoneNumber attribute\r\n      }),\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Failed to send posting instructions');\r\n    }\r\n\r\n    const data = await response.json();\r\n    console.log('Posting instructions sent successfully:', data);\r\n  } catch (error) {\r\n    console.error('Error sending posting instructions:', error);\r\n  }\r\n};\r\n\r\n  useEffect(() => {\r\n    if (!isMounted) return;\r\n    // Call the function\r\n    fetchAndInitializeCampaigns();\r\n    fetchCampaigns();\r\n  }, [isMounted, statusFilter]); // Empty dependency array means this effect runs once on mount\r\n\r\n  const handleActionChange = (event) => {\r\n    setSelectedAction(event.target.value);\r\n  };\r\n\r\n  const handleCheckboxChange = (campaignId) => {\r\n    const selectedIndex = selectedCampaigns.indexOf(campaignId);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selectedCampaigns, campaignId);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selectedCampaigns.slice(1));\r\n    } else if (selectedIndex === selectedCampaigns.length - 1) {\r\n      newSelected = newSelected.concat(selectedCampaigns.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selectedCampaigns.slice(0, selectedIndex),\r\n        selectedCampaigns.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n\r\n    setSelectedCampaigns(newSelected);\r\n  };\r\n\r\n  const handleLaunchCampaign = async () => {\r\n    const creatorNames = dialogContent.creators.map((creator) => creator.name);\r\n    const creatorPrices = dialogContent.creators.reduce((acc, creator) => {\r\n      acc[creator.name] = creator.price; // Map each creator's name to their price\r\n      return acc;\r\n    }, {});\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `http://localhost:5000/api/campaign_handler/launch_campaign`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({\r\n            campaignId: dialogContent.id,\r\n            campaignBrief: dialogContent.brief, // Ensure this is the key expected by your backend\r\n            creatorNames,\r\n            creatorPrices, // Mapping of creator names to their prices\r\n            blitzautocampaign: blitzAutoCampaign, // Include blitzAutoCampaign in the request body\r\n          }),\r\n        },\r\n      );\r\n\r\n      if (!response.ok) {\r\n        // Here, you could extract more detailed error information if your backend sends it\r\n        const errorData = await response.json();\r\n        throw new Error(errorData.message || \"Failed to launch campaign\");\r\n      }\r\n\r\n      const result = await response.json();\r\n      console.log(result);\r\n      alert(\"Campaign launched successfully!\");\r\n\r\n      // Assuming fetchCampaigns is a function that updates the UI with the latest campaigns list\r\n      fetchCampaigns();\r\n    } catch (error) {\r\n      console.error(\"Error launching campaign:\", error);\r\n      alert(\"Error launching campaign: \" + error.message);\r\n    }\r\n  };\r\n\r\n  const handleRowDoubleClick = (campaign) => {\r\n    setDialogContent(campaign);\r\n    setOpenDialog(true);\r\n  };\r\n\r\n  const applyAction = async () => {\r\n    if (selectedAction === \"delete\") {\r\n      await fetch(\"http://localhost:5000/api/campaigns/delete\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ id: selectedCampaigns }), // Changed from campaignIds to id\r\n      });\r\n\r\n      fetchCampaigns(); // Refresh campaigns after deletion\r\n    } else if (selectedAction === \"Archive\" || selectedAction === \"pause\") {\r\n      const status = selectedAction === \"archive\" ? \"Archived\" : \"Paused\";\r\n      await fetch(\"http://localhost:5000/api/campaigns/updateStatus\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ campaignIds: selectedCampaigns, status }),\r\n      });\r\n      fetchCampaigns(); // Refresh campaigns after status update\r\n    }\r\n    setSelectedCampaigns([]); // Clear selection after action\r\n  };\r\n  function formatIdealDueDate(dateString) {\r\n    // Directly use the dateString to create a new Date object\r\n    const date = new Date(dateString);\r\n    if (isNaN(date.getTime())) {\r\n      return \"Invalid Date\"; // Or any placeholder you prefer\r\n    } else {\r\n      // Ensure timezone does not affect the output, consider formatting like so:\r\n      // Extract month, day, and year, then format it as MM/DD/YY\r\n      const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\r\n      const day = date.getDate().toString().padStart(2, \"0\");\r\n      const year = date.getFullYear().toString().substr(-2);\r\n      return `${month}/${day}/${year}`; // Returns \"MM/DD/YY\"\r\n    }\r\n  }\r\n\r\n  const CampaignDetailDialog = () => {\r\n    // Calculate total sum and number of creators\r\n    const [newPrices, setNewPrices] = useState({}); // Hold new prices for creators    const [selectedCreatorForAction, setSelectedCreatorForAction] = useState(null);\r\n    useState(null);\r\n    const [postingInstructions, setPostingInstructions] = useState('');\r\n    // Function to handle the selection of a creator for a specific action\r\n    const handleActionSelection = (event) => {\r\n      const action = event.target.value;\r\n      setSelectedAction(action);\r\n      // Additional logic to prepare for the action (e.g., set up for removal or price update)\r\n    };\r\n    // Calculate total sum and number of creatorsr\r\n    const totalCampaignSum = dialogContent.creators\r\n      ? dialogContent.creators.reduce((acc, creator) => {\r\n          // Remove any characters that are not digits or a dot, then parse\r\n          const price = parseFloat(\r\n            (newPrices[creator.id] || creator.price || \"0\").replace(\r\n              /[^\\d.]/g,\r\n              \"\",\r\n            ),\r\n          );\r\n          return acc + price;\r\n        }, 0)\r\n      : 0;\r\n    const totalCreators = dialogContent.creators\r\n      ? dialogContent.creators.length\r\n      : 0;\r\n\r\n    // Function to stage creator removals without immediate effect\r\n    // Toggle creator removal\r\n    const toggleCreatorRemoval = (creatorId) => {\r\n      setCreatorsToRemove((prevCreators) => {\r\n        if (prevCreators.includes(creatorId)) {\r\n          return prevCreators.filter((id) => id !== creatorId);\r\n        } else {\r\n          return [...prevCreators, creatorId];\r\n        }\r\n      });\r\n    };\r\n    const handleAddPostingInstructions = async () => {\r\n      // Ensuring campaignId is properly defined from dialogContent\r\n      const campaignId = dialogContent.id;\r\n      // Using dialogContent.id to ensure the correct campaign ID is referenced\r\n      const data = {\r\n        campaignId: campaignId, // Correctly referencing the campaign ID from dialogContent\r\n        creators: dialogContent.creators.map(creator => {\r\n          if (creator.id === currentCreatorIdForInstructions) {\r\n            return { ...creator, postingInstructions: postingInstructions };\r\n          }\r\n          return creator;\r\n        })\r\n      };\r\n    \r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/campaigns/updateCreatorDetails', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify(data),\r\n        });\r\n    \r\n        if (!response.ok) {\r\n          throw new Error('Failed to update posting instructions');\r\n        }\r\n    \r\n        alert('Posting instructions added successfully');\r\n        setPostingInstructions(''); // Reset the instructions input\r\n        // Optionally refresh or update the UI here\r\n      } catch (error) {\r\n        console.error('Error adding posting instructions:', error);\r\n        alert('Error adding posting instructions');\r\n      }\r\n    };\r\n    \r\n    // Update price function\r\n    const updatePrice = (creatorId, event) => {\r\n      const price = event.target.value; // Assuming you want to capture the value directly\r\n      setNewPrices((prevPrices) => ({\r\n        ...prevPrices,\r\n        [creatorId]: price, // Ensure this captures the correct value format\r\n      }));\r\n    };\r\n\r\n    const applyChanges = async () => {\r\n      // Early exit if no action is selected or no modifications are specified\r\n      const requestBody = {\r\n        campaignId: dialogContent.id,\r\n        creators: dialogContent.creators,\r\n        blitzAutoCampaign: dialogContent.blitzautocampaign,\r\n      };\r\n      try {\r\n        const response = await fetch(\r\n          `http://localhost:5000/api/campaigns/updateCreatorDetails`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(requestBody),\r\n          },\r\n        );\r\n\r\n        if (!response.ok) throw new Error(\"Failed to update creator details.\");\r\n\r\n        alert(\"Creator details updated successfully.\");\r\n        fetchCampaigns(); // Refresh the campaign data\r\n      } catch (error) {\r\n        console.error(\"Error updating creator details:\", error);\r\n        alert(\"Failed to update creator details.\");\r\n      }\r\n      handleCloseDialog();\r\n\r\n      if (selectedAction === \"remove\" && creatorsToRemove.length > 0) {\r\n        try {\r\n          const response = await fetch(\r\n            \"http://localhost:5000/api/campaigns/removeCreators\",\r\n            {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify({\r\n                campaignId: dialogContent.id,\r\n                creatorIds: creatorsToRemove,\r\n              }),\r\n            },\r\n          );\r\n          if (!response.ok) {\r\n            // Handle error response\r\n            const errorData = await response.json();\r\n            console.error(`Failed to remove creators: ${errorData.message}`);\r\n            return; // Exit if there is an error\r\n          }\r\n          // Success - Optionally, you can refresh the campaign data or clear the state\r\n          setCreatorsToRemove([]);\r\n          updateCampaignSum();\r\n          fetchCampaigns(); // Refresh the campaigns to reflect the removal\r\n        } catch (error) {\r\n          console.error(\"Error removing creators:\", error);\r\n        }\r\n      }\r\n\r\n      // Inside your applyChanges function for the \"counter\" action\r\n      if (selectedAction === \"counter\" && Object.keys(newPrices).length > 0) {\r\n        try {\r\n          const response = await fetch(\r\n            \"http://localhost:5000/api/campaigns/updateCreatorPrices\",\r\n            {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              body: JSON.stringify({\r\n                campaignId: dialogContent.id, // Ensure this is an integer\r\n                newPrices, // This should be an object mapping creator IDs to their new prices\r\n              }),\r\n            },\r\n          );\r\n          if (response.ok) {\r\n            // After successful removal\r\n            updateCampaignSum();\r\n            fetchCampaigns(); // Refresh the campaign data\r\n          }\r\n          if (!response.ok) {\r\n            const errorData = await response.json();\r\n            throw new Error(\r\n              `Failed to update creator prices: ${errorData.message}`,\r\n            );\r\n          }\r\n\r\n          // If successful, reset the newPrices\r\n          setNewPrices({});\r\n        } catch (error) {\r\n          console.error(\"Error updating prices:\", error);\r\n          // Handle error (e.g., show a message to the user)\r\n        }\r\n      }\r\n      // Close the dialog regardless of outcome\r\n      updateCampaignSum();\r\n      updateLiveLinksAndBoostCodes();\r\n      handleCloseDialog();\r\n      fetchCampaigns(); // Refresh the campaign data\r\n    };\r\n\r\n    const updateCampaignSum = async () => {\r\n      try {\r\n        const campaignSumToUpdate = totalCampaignSum; // Use the calculated totalCampaignSum\r\n        const response = await fetch(\r\n          \"http://localhost:5000/api/campaigns/updateCampaignSum\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              campaignId: dialogContent.id,\r\n              campaignSum: campaignSumToUpdate.toString(), // Convert to string if needed\r\n            }),\r\n          },\r\n        );\r\n        if (!response.ok) {\r\n          throw new Error(\"Failed to update campaign sum\");\r\n        }\r\n        alert(\"Campaign sum updated successfully\");\r\n        fetchCampaigns(); // Refresh the campaign list to reflect the updated sum\r\n      } catch (error) {\r\n        console.error(\"Error updating campaign sum:\", error);\r\n      }\r\n    };\r\n\r\n    const updateLiveLinksAndBoostCodes = async () => {\r\n      // Constructing the updates payload\r\n      const updates = dialogContent.creators\r\n        .map((creator) => ({\r\n          id: creator.id,\r\n          liveLink: liveLinks[creator.id] || \"\",\r\n          boostCode: boostCodes[creator.id] || \"\",\r\n        }))\r\n        .filter((update) => update.liveLink || update.boostCode); // Filter out entries without updates\r\n\r\n      if (updates.length === 0) {\r\n        alert(\"No updates to apply\");\r\n        return false; // Early exit if no updates\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(\r\n          \"http://localhost:5000/api/campaigns/updateLinksAndCodes\",\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              campaignId: dialogContent.id, // Assuming `dialogContent` holds the current campaign's data\r\n              updates: updates,\r\n            }),\r\n          },\r\n        );\r\n\r\n        if (!response.ok)\r\n          throw new Error(\"Failed to update live links and boost codes\");\r\n\r\n        // Success handling\r\n        alert(\"Live links and boost codes updated successfully\");\r\n        setLiveLinks({});\r\n        setBoostCodes({});\r\n        // You might want to refresh or update the UI accordingly here\r\n\r\n        return true; // Indicate success\r\n      } catch (error) {\r\n        console.error(\"Error updating live links and boost codes:\", error);\r\n        alert(\"Failed to update live links and boost codes\");\r\n        return false; // Indicate failure\r\n      }\r\n    };\r\n    return (\r\n      <Dialog\r\n        open={openDialog}\r\n        onClose={handleCloseDialog}\r\n        maxWidth=\"xl\"\r\n        fullWidth\r\n      >\r\n        <DialogTitle>\r\n          <Grid container alignItems=\"center\" spacing={2}>\r\n            <Grid item xs={12} md={3}>\r\n              <Typography variant=\"h6\">\r\n                Campaign Name: {dialogContent?.name}\r\n              </Typography>\r\n              <Typography>\r\n              {dialogContent?.drivelink && (\r\n  <Link href={dialogContent.drivelink} target=\"_blank\" rel=\"noopener noreferrer\">\r\n    View Campaign Assets\r\n  </Link>\r\n)}\r\n\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <Typography variant=\"h6\">\r\n                <Typography variant=\"h6\">\r\n                  Ideal Due Date:{\" \"}\r\n                  {formatIdealDueDate(dialogContent?.idealduedate)}\r\n                </Typography>{\" \"}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <TextField\r\n                label=\"PO Number\"\r\n                required\r\n                fullWidth\r\n                value={poNumber}\r\n                onChange={(e) => setPoNumber(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <Button\r\n                variant=\"contained\"\r\n                onClick={() =>\r\n                  setPoNumber(`PO-${Math.floor(Math.random() * 10000)}`)\r\n                }\r\n                fullWidth\r\n              >\r\n                Generate New PO\r\n              </Button>\r\n            </Grid>\r\n            <Grid item xs={12} style={{ marginTop: 8 }}>\r\n              <Box display=\"flex\" justifyContent=\"flex-end\" gap={2}>\r\n                <Select\r\n                  value={selectedAction} // Tracks the current selected action within the dialog\r\n                  displayEmpty\r\n                  onChange={handleActionSelection}\r\n                  style={{ flexGrow: 1 }}\r\n                >\r\n                  <MenuItem value=\"\" disabled>\r\n                    Actions\r\n                  </MenuItem>\r\n                  <MenuItem value=\"remove\">Remove Creator</MenuItem>\r\n                  <MenuItem value=\"counter\">Counter Offer Price</MenuItem>\r\n                </Select>\r\n                <div>\r\n                  <Typography>Blitz SMS and Email Automation</Typography>\r\n\r\n                  <Switch\r\n                    checked={dialogContent.blitzautocampaign} // Use dialogContent's blitzAutoCampaign\r\n                    onChange={handleToggleChange}\r\n                    name=\"blitzautocampaign\"\r\n                    inputProps={{\r\n                      \"aria-label\": \"Blitz SMS and Email Automation toggle\",\r\n                    }}\r\n                  />\r\n\r\n                  <Tooltip title=\"This is in alpha mode, so there may be errors if you try to run a campaign this way\">\r\n                    <IconButton>\r\n                      <HelpOutlineIcon />\r\n                    </IconButton>\r\n                  </Tooltip>\r\n                </div>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={() => handleLaunchCampaign(dialogContent.id)}\r\n                >\r\n                  Launch Campaign\r\n                </Button>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"success\"\r\n                  onClick={() => handleAddCreatorsClick(dialogContent?.id)} // Pass the current dialog's campaign ID\r\n                >\r\n                  Add Creators\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleGenerateReport}\r\n                >\r\n                  Generate Report\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  onClick={applyChanges}\r\n                >\r\n                  Approve Changes\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"warning\"\r\n                  onClick={handleCompleteCampaign}\r\n                >\r\n                  Complete Campaign\r\n                </Button>\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          {dialogContent?.creators ? (\r\n            <>\r\n              <TableContainer component={Paper}>\r\n                <Table aria-label=\"creator details\">\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell style={{ color: \"white\" }}>Select</TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>Name/ID</TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>Price</TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>\r\n                        Offer Sent\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>\r\n                        Assets Sent\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>\r\n                        Approve Assets\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>\r\n                        Live Link\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>\r\n                        Usage or Boost Code\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>\r\n                        Post Date\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>\r\n                        Total Views\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>\r\n                        Total Likes\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>\r\n                        Total Comments\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>\r\n                        Total Engagement\r\n                      </TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>Report</TableCell>\r\n                      <TableCell style={{ color: \"white\" }}>Status</TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n                  <TableBody>\r\n                    {dialogContent.creators.map((creator, index) => (\r\n                      <TableRow key={index}>\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            checked={creatorsToRemove.includes(creator.id)}\r\n                            onChange={() => toggleCreatorRemoval(creator.id)}\r\n                            color=\"primary\"\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>{creator.name}</TableCell>\r\n                        <TableCell>\r\n                          {/* Render editable price field if counter offer is selected */}\r\n                          {selectedAction === \"counter\" ? (\r\n                            <TextField\r\n                              type=\"text\"\r\n                              value={\r\n                                newPrices[creator.id] ||\r\n                                creator.price.toString()\r\n                              }\r\n                              onChange={(e) => updatePrice(creator.id, e)}\r\n                              fullWidth\r\n                            />\r\n                          ) : (\r\n                            creator.price\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {blitzAutoCampaign ? (\r\n                            creator.offerSent ? (\r\n                              \"Yes\"\r\n                            ) : (\r\n                              \"No\"\r\n                            )\r\n                          ) : (\r\n                            <Checkbox\r\n                              checked={creator.offerSent || false}\r\n                              onChange={(e) =>\r\n                                handleCreatorFieldChange(\r\n                                  creator.id,\r\n                                  \"offerSent\",\r\n                                  e.target.checked,\r\n                                )\r\n                              }\r\n                              color=\"primary\"\r\n                            />\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {blitzAutoCampaign ? (\r\n                            creator.assetsSent ? (\r\n                              \"Yes\"\r\n                            ) : (\r\n                              \"No\"\r\n                            )\r\n                          ) : (\r\n                            <Checkbox\r\n                              checked={creator.assetsSent || false}\r\n                              onChange={(e) =>\r\n                                handleCreatorFieldChange(\r\n                                  creator.id,\r\n                                  \"assetsSent\",\r\n                                  e.target.checked,\r\n                                )\r\n                              }\r\n                              color=\"primary\"\r\n                            />\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {/* Assets Approved checkbox remains static, reflecting stored value */}\r\n                          <Checkbox\r\n                            checked={creator.assetsApproved || false}\r\n                            onChange={(e) =>\r\n                              handleCreatorFieldChange(\r\n                                creator.id,\r\n                                \"assetsApproved\",\r\n                                e.target.checked,\r\n                              )\r\n                            }\r\n                            color=\"primary\"\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            placeholder=\"Live Link\"\r\n                            value={\r\n                              liveLinks[creator.id] !== undefined\r\n                                ? liveLinks[creator.id]\r\n                                : creator.liveLink || \"\"\r\n                            }\r\n                            onChange={(e) =>\r\n                              setLiveLinks({\r\n                                ...liveLinks,\r\n                                [creator.id]: e.target.value,\r\n                              })\r\n                            }\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <TextField\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                            placeholder=\"Boost Code\"\r\n                            value={\r\n                              boostCodes[creator.id] !== undefined\r\n                                ? boostCodes[creator.id]\r\n                                : creator.boostCode || \"\"\r\n                            }\r\n                            onChange={(e) =>\r\n                              setBoostCodes({\r\n                                ...boostCodes,\r\n                                [creator.id]: e.target.value,\r\n                              })\r\n                            }\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {blitzAutoCampaign ? (\r\n                            creator.postDate || \"N/A\"\r\n                          ) : (\r\n                            <TextField\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\"YYYY-MM-DD\"\r\n                              value={creator.postDate || \"\"}\r\n                              onChange={(e) =>\r\n                                handleCreatorFieldChange(\r\n                                  creator.id,\r\n                                  \"postDate\",\r\n                                  e.target.value,\r\n                                )\r\n                              }\r\n                            />\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {blitzAutoCampaign ? (\r\n                            creator.totalViews || \"N/A\"\r\n                          ) : (\r\n                            <TextField\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\"Total Views\"\r\n                              value={creator.totalViews || \"\"}\r\n                              onChange={(e) =>\r\n                                handleCreatorFieldChange(\r\n                                  creator.id,\r\n                                  \"totalViews\",\r\n                                  e.target.value,\r\n                                )\r\n                              }\r\n                            />\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {blitzAutoCampaign ? (\r\n                            creator.likes || \"N/A\"\r\n                          ) : (\r\n                            <TextField\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\"Likes\"\r\n                              value={creator.likes || \"\"}\r\n                              onChange={(e) =>\r\n                                handleCreatorFieldChange(\r\n                                  creator.id,\r\n                                  \"likes\",\r\n                                  e.target.value,\r\n                                )\r\n                              }\r\n                            />\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {blitzAutoCampaign ? (\r\n                            creator.comments || \"N/A\"\r\n                          ) : (\r\n                            <TextField\r\n                              variant=\"outlined\"\r\n                              size=\"small\"\r\n                              placeholder=\"Comments\"\r\n                              value={creator.comments || \"\"}\r\n                              onChange={(e) =>\r\n                                handleCreatorFieldChange(\r\n                                  creator.id,\r\n                                  \"comments\",\r\n                                  e.target.value,\r\n                                )\r\n                              }\r\n                            />\r\n                          )}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {/* Total Engagement field might be calculated automatically or remain static */}\r\n                          {creator.totalEngagement || \"N/A\"}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {/* Campaign Recap might remain static or link to a detailed view */}\r\n                          {creator.campaignRecap || \"N/A\"}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                        {blitzAutoCampaign ? (\r\n                            creator.status\r\n                          ) : (\r\n                          <Select\r\n                            value={creator.status}\r\n                            onChange={(e) =>\r\n                              handleCreatorFieldChange(\r\n                                creator.id,\r\n                                \"status\",\r\n                                e.target.value,\r\n                              )\r\n                            }\r\n                            displayEmpty\r\n                            inputProps={{ \"aria-label\": \"Without label\" }}\r\n                            variant=\"outlined\"\r\n                            size=\"small\"\r\n                          >\r\n                            <MenuItem value=\"\">\r\n                              <em>None</em>\r\n                            </MenuItem>\r\n                            <MenuItem value=\"Accepted\">Accepted</MenuItem>\r\n                            <MenuItem value=\"declined\">Declined</MenuItem>\r\n                          </Select>\r\n                        )}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n              <Box display=\"flex\" justifyContent=\"space-between\" marginTop={2}>\r\n                <Typography>\r\n                  Total Campaign Sum: ${totalCampaignSum.toFixed(2)}\r\n                </Typography>\r\n                <TextField\r\n        margin=\"dense\"\r\n        label=\"Posting Instructions\"\r\n        type=\"text\"\r\n        fullWidth\r\n        multiline\r\n        minRows={3}\r\n        value={postingInstructions}\r\n        onChange={(e) => setPostingInstructions(e.target.value)}\r\n      />\r\n      <DialogActions>\r\n        <Button onClick={handleAddPostingInstructions}>Add Posting Instructions</Button>\r\n      </DialogActions>\r\n                <Typography>Total Creators: {totalCreators}</Typography>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <Typography>No creator data available.</Typography>\r\n          )}\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  };\r\n  const sortedCampaigns = campaigns.sort(\r\n    (a, b) => new Date(b.proposaldate) - new Date(a.proposaldate),\r\n  );\r\n  const handleSelectCampaign = (campaign) => {\r\n    setDialogContent(campaign); // Set the selected campaign as dialog content\r\n    setOpenDialog(true); // Open the dialog\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Navbar />\r\n      <Box sx={{ my: 4 }}>\r\n        <Typography\r\n          variant=\"h4\"\r\n          gutterBottom\r\n          component=\"div\"\r\n          style={{ color: \"#1976d2\" }}\r\n        >\r\n          Campaigns\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          <Grid container spacing={2}></Grid>\r\n          <Grid container spacing={2}>\r\n            {sortedCampaigns.slice(0, 3).map((campaign) => (\r\n              <Grid item xs={12} md={6} key={campaign.id}>\r\n                <RecentCampaign\r\n                  campaign={campaign}\r\n                  onSelectCampaign={handleSelectCampaign}\r\n                />\r\n              </Grid>\r\n            ))}\r\n\r\n            {/* Summary block and other content... */}\r\n\r\n            {/* Summary Block */}\r\n            <Grid item xs={12} md={6}>\r\n              <Card elevation={3} sx={{ minWidth: 275, margin: 2 }}>\r\n                <CardContent onDoubleClick={() => onSelectCampaign(campaign)}>\r\n                  <Typography variant=\"h5\" component=\"div\" gutterBottom>\r\n                    Summary\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Total Campaigns: {campaigns.length}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Active Campaigns:{\" \"}\r\n                    {\r\n                      campaigns.filter(\r\n                        (campaign) => campaign.campaignstatus === \"Launched\",\r\n                      ).length\r\n                    }\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Total Budget: $\r\n                    {campaigns\r\n                      .reduce(\r\n                        (sum, campaign) =>\r\n                          sum + Number(campaign.campaign_sum || 0),\r\n                        0,\r\n                      )\r\n                      .toLocaleString()}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Total Posts Up:{\" \"}\r\n                    {campaigns.reduce(\r\n                      (sum, campaign) =>\r\n                        sum +\r\n                        campaign.creators.filter((creator) => creator.liveLink)\r\n                          .length,\r\n                      0,\r\n                    )}\r\n                  </Typography>\r\n                  {/* Assuming each campaign should have a fixed number of posts (e.g., 5) */}\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Total Posts Remaining:{\" \"}\r\n                    {/* Calculation would depend on your data structure */}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Total Views:{\" \"}\r\n                    {campaigns\r\n                      .reduce(\r\n                        (sum, campaign) =>\r\n                          sum +\r\n                          campaign.creators.reduce(\r\n                            (cSum, creator) =>\r\n                              cSum + Number(creator.totalViews || 0),\r\n                            0,\r\n                          ),\r\n                        0,\r\n                      )\r\n                      .toLocaleString()}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Total Engagement:{\" \"}\r\n                    {campaigns\r\n                      .reduce(\r\n                        (sum, campaign) =>\r\n                          sum +\r\n                          campaign.creators.reduce(\r\n                            (cSum, creator) =>\r\n                              cSum + Number(creator.totalEngagement || 0),\r\n                            0,\r\n                          ),\r\n                        0,\r\n                      )\r\n                      .toLocaleString()}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12} md={12} sx={{ paddingRight: \"2%\" }}>\r\n            {\" \"}\r\n            {/* Allocate 80% width and add padding */}{\" \"}\r\n            {/* Adjusted from md={8} to md={9} for the main content */}\r\n            <Box\r\n              sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n                gap: 2,\r\n                mb: 4,\r\n              }}\r\n            >\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                sx={{ minWidth: 240, marginLeft: 2 }}\r\n              >\r\n                <InputLabel id=\"status-filter-label\">\r\n                  Filter by Status\r\n                </InputLabel>\r\n                <Select\r\n                  labelId=\"status-filter-label\"\r\n                  value={statusFilter}\r\n                  onChange={(event) => {\r\n                    setStatusFilter(event.target.value);\r\n                  }}\r\n                  label=\"Filter by Status\"\r\n                >\r\n                  <MenuItem value=\"All\">All</MenuItem>\r\n                  <MenuItem value=\"Draft\">Draft</MenuItem>\r\n                  <MenuItem value=\"Paused\">Paused</MenuItem>\r\n                  <MenuItem value=\"Completed\">Completed</MenuItem>\r\n                  <MenuItem value=\"Launched\">Launched</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                sx={{ minWidth: 240 }}\r\n              >\r\n                <InputLabel id=\"action-type-label\">Action Type</InputLabel>\r\n                <Select\r\n                  labelId=\"action-type-label\"\r\n                  value={selectedAction}\r\n                  onChange={handleActionChange}\r\n                  label=\"Action Type\"\r\n                >\r\n                  <MenuItem value=\"edit\">Edit</MenuItem>\r\n                  <MenuItem value=\"delete\">Delete</MenuItem>\r\n                  <MenuItem value=\"archive\">Archive</MenuItem>\r\n                  <MenuItem value=\"pause\">Pause</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n              <Button variant=\"contained\" color=\"primary\" onClick={applyAction}>\r\n                Apply\r\n              </Button>\r\n            </Box>\r\n            <TableContainer component={Paper}>\r\n              <Table aria-label=\"campaigns table\" sx={{ minWidth: 650 }}>\r\n                <TableHead style={{ backgroundColor: \"black\", color: \"white\" }}>\r\n                  <TableRow>\r\n                    <TableCell style={{ color: \"white\" }}>Select</TableCell>\r\n                    <TableCell style={{ color: \"white\" }}>\r\n                      Campaign Name\r\n                    </TableCell>\r\n                    <TableCell style={{ color: \"white\" }}>Brief</TableCell>\r\n                    <TableCell style={{ color: \"white\" }}>\r\n                      Campaign Sum\r\n                    </TableCell>\r\n                    <TableCell style={{ color: \"white\" }}>\r\n                      Proposal Date\r\n                    </TableCell>\r\n                    <TableCell style={{ color: \"white\" }}>\r\n                      Product Type\r\n                    </TableCell>\r\n                    <TableCell style={{ color: \"white\" }}>Creators</TableCell>\r\n                    <TableCell style={{ color: \"white\" }}>\r\n                      Video Amount\r\n                    </TableCell>\r\n                    <TableCell style={{ color: \"white\" }}>\r\n                      Ideal Due Date\r\n                    </TableCell>\r\n\r\n                    <TableCell style={{ color: \"white\" }}>Status</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {campaigns.length > 0 ? (\r\n                    campaigns.map((campaign) => (\r\n                      <TableRow\r\n                        key={campaign.id}\r\n                        onDoubleClick={() => handleRowDoubleClick(campaign)}\r\n                        hover\r\n                      >\r\n                        {\" \"}\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox\r\n                            checked={\r\n                              selectedCampaigns.indexOf(campaign.id) !== -1\r\n                            }\r\n                            onChange={() => handleCheckboxChange(campaign.id)}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell\r\n                          onClick={() => handleOpenDialog(campaign)}\r\n                          style={{\r\n                            cursor: \"pointer\",\r\n                            textDecoration: \"underline\",\r\n                          }}\r\n                        >\r\n                          {campaign.name}\r\n                        </TableCell>\r\n                        <TableCell>{campaign.brief}</TableCell>\r\n                        <TableCell>\r\n                          {formatCampaignSum(campaign.campaign_sum)}\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          {formatProposalDate(campaign.proposaldate)}\r\n                        </TableCell>\r\n                        <TableCell>{campaign.campaigntype}</TableCell>\r\n                        <TableCell>\r\n                          {campaign.creators\r\n                            .map((creator) => creator.name)\r\n                            .join(\", \")}\r\n                        </TableCell>\r\n                        <TableCell>{campaign.videoamount}</TableCell>\r\n                        <TableCell>\r\n                          <Typography variant=\"h6\">\r\n                            {formatIdealDueDate(dialogContent?.idealduedate)}\r\n                          </Typography>{\" \"}\r\n                        </TableCell>\r\n                        <TableCell>{campaign.campaignstatus}</TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  ) : (\r\n                    <TableRow>\r\n                      <TableCell colSpan=\"8\" align=\"center\">\r\n                        No campaigns available\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <CampaignDetailDialog />\r\n      \r\n      <PostingInstructionsDialog\r\n      open={isPostingDialogOpen}\r\n      onClose={() => setPostingDialogOpen(false)}\r\n      onSave={handleSavePostingInstructions}\r\n    />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Campaigns;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}