{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Documents\\\\GitHub\\\\blitz\\\\src\\\\Pages\\\\Dashboard\\\\Campaigns\\\\editcreatordialog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from '@mui/material';\nimport { ConfigValue } from \"../../../Config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditCreatorDialog = ({\n  open,\n  onClose,\n  creator,\n  onSave,\n  brief\n}) => {\n  _s();\n  const [creatorBrief, setCreatorBrief] = useState('');\n  const [postingInstructions, setPostingInstructions] = useState('');\n  const [creatorName, setCreatorName] = useState('');\n  const [campaignId, setCampaignId] = useState('');\n  console.log(creator);\n  // Whenever the dialog opens with a new creator, reset the fields\n  useEffect(() => {\n    console.log('Dialog opened for creator:', creator); // Debug log\n    if (open) {\n      setCreatorBrief(creator.creatorBrief || brief || ''); // Assuming 'brief' is the key for the creator's brief\n      setPostingInstructions(creator.postingInstructions || '');\n      setCreatorName(creator.id || ''); // Assuming 'postingInstructions' is the key\n      setCampaignId(creator.campaignId || ''); // Assuming 'postingInstructions' is the key\n    }\n  }, [creator, open]);\n  const handleSave = async () => {\n    if (!campaignId) {\n      // Change from creator.campaignId to campaignId since it's state you're setting and checking\n      console.error('No campaign ID provided');\n      return; // Alert or show an error that the campaign ID is necessary\n    }\n    const updatedCreator = {\n      id: creator.id,\n      // Pass the creator's id to identify it in the backend\n      creatorBrief: creatorBrief,\n      // Ensure values are taken from state\n      postingInstructions: postingInstructions\n    };\n    const payload = {\n      campaignId: campaignId,\n      // Taken from state\n      creators: [updatedCreator]\n    };\n    try {\n      // Make the API call to update creator details\n      const response = await fetch(`${ConfigValue.PUBLIC_REST_API_ENDPOINT}/campaigns/updateCreatorSpecifics`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        // If the response is not OK, throw an error with the response's error message\n        const errorData = await response.json();\n        throw new Error(errorData.message || \"Failed to save posting instructions\");\n      }\n\n      // Show a success message\n      alert(\"Posting instructions updated successfully for all creators.\");\n      onClose(); // Maybe call onSave as well if you need to trigger parent component updates\n    } catch (error) {\n      // Log and alert any errors encountered during the update\n      console.error(\"Error updating posting instructions:\", error);\n      alert(`Error: ${error.message}`);\n      onClose(); // Maybe call onSave as well if you need to trigger parent component updates\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    open: open,\n    onClose: onClose,\n    maxWidth: \"sm\",\n    fullWidth: true,\n    children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n      children: [\"Edit Creator: \", creatorName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        autoFocus: true,\n        margin: \"dense\",\n        label: \"Creator Brief\",\n        type: \"text\",\n        fullWidth: true,\n        variant: \"outlined\",\n        value: creatorBrief,\n        onChange: e => setCreatorBrief(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        margin: \"dense\",\n        label: \"Posting Instructions\",\n        type: \"text\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        variant: \"outlined\",\n        value: postingInstructions,\n        onChange: e => setPostingInstructions(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(EditCreatorDialog, \"PPLYsii0kkSqkYVo7nEmTCovbRs=\");\n_c = EditCreatorDialog;\nexport default EditCreatorDialog;\nvar _c;\n$RefreshReg$(_c, \"EditCreatorDialog\");","map":{"version":3,"names":["React","useState","useEffect","Dialog","DialogTitle","DialogContent","TextField","DialogActions","Button","ConfigValue","jsxDEV","_jsxDEV","EditCreatorDialog","open","onClose","creator","onSave","brief","_s","creatorBrief","setCreatorBrief","postingInstructions","setPostingInstructions","creatorName","setCreatorName","campaignId","setCampaignId","console","log","id","handleSave","error","updatedCreator","payload","creators","response","fetch","PUBLIC_REST_API_ENDPOINT","method","headers","body","JSON","stringify","ok","errorData","json","Error","message","alert","maxWidth","fullWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","autoFocus","margin","label","type","variant","value","onChange","e","target","multiline","rows","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Documents/GitHub/blitz/src/Pages/Dashboard/Campaigns/editcreatordialog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button } from '@mui/material';\r\nimport { ConfigValue } from \"../../../Config\";\r\n\r\nconst EditCreatorDialog = ({ open, onClose, creator, onSave, brief }) => {\r\n  const [creatorBrief, setCreatorBrief] = useState('');\r\n  const [postingInstructions, setPostingInstructions] = useState('');\r\n  const [creatorName, setCreatorName] = useState('');\r\n  const [campaignId, setCampaignId] = useState('');\r\n\r\n  console.log(creator)\r\n  // Whenever the dialog opens with a new creator, reset the fields\r\n  useEffect(() => {\r\n    console.log('Dialog opened for creator:', creator); // Debug log\r\n    if (open) {\r\n      setCreatorBrief(creator.creatorBrief || brief || '');  // Assuming 'brief' is the key for the creator's brief\r\n      setPostingInstructions(creator.postingInstructions || ''); \r\n      setCreatorName(creator.id || '');  // Assuming 'postingInstructions' is the key\r\n      setCampaignId(creator.campaignId || '');  // Assuming 'postingInstructions' is the key\r\n    }\r\n  }, [creator, open]);\r\n\r\n  const handleSave = async() => {\r\n    if (!campaignId) { // Change from creator.campaignId to campaignId since it's state you're setting and checking\r\n      console.error('No campaign ID provided');\r\n      return; // Alert or show an error that the campaign ID is necessary\r\n    }\r\n  \r\n    const updatedCreator = {\r\n      id: creator.id, // Pass the creator's id to identify it in the backend\r\n      creatorBrief: creatorBrief, // Ensure values are taken from state\r\n      postingInstructions: postingInstructions\r\n    };\r\n    const payload = {\r\n      campaignId: campaignId, // Taken from state\r\n      creators: [updatedCreator]\r\n    };\r\n  \r\n    try {\r\n      // Make the API call to update creator details\r\n      const response = await fetch(\r\n        `${ConfigValue.PUBLIC_REST_API_ENDPOINT}/campaigns/updateCreatorSpecifics`,\r\n        {\r\n          method: \"POST\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(payload),\r\n        }\r\n      );\r\n\r\n      if (!response.ok) {\r\n        // If the response is not OK, throw an error with the response's error message\r\n        const errorData = await response.json();\r\n        throw new Error(\r\n          errorData.message || \"Failed to save posting instructions\"\r\n        );\r\n      }\r\n\r\n      // Show a success message\r\n      alert(\"Posting instructions updated successfully for all creators.\");\r\n      onClose(); // Maybe call onSave as well if you need to trigger parent component updates\r\n\r\n    } catch (error) {\r\n      // Log and alert any errors encountered during the update\r\n      console.error(\"Error updating posting instructions:\", error);\r\n      alert(`Error: ${error.message}`);\r\n      onClose(); // Maybe call onSave as well if you need to trigger parent component updates\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <Dialog open={open} onClose={onClose} maxWidth=\"sm\" fullWidth>\r\n      <DialogTitle>Edit Creator: {creatorName}</DialogTitle>\r\n      <DialogContent>\r\n        <TextField\r\n          autoFocus\r\n          margin=\"dense\"\r\n          label=\"Creator Brief\"\r\n          type=\"text\"\r\n          fullWidth\r\n          variant=\"outlined\"\r\n          value={creatorBrief}\r\n          onChange={(e) => setCreatorBrief(e.target.value)}\r\n        />\r\n        <TextField\r\n          margin=\"dense\"\r\n          label=\"Posting Instructions\"\r\n          type=\"text\"\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          variant=\"outlined\"\r\n          value={postingInstructions}\r\n          onChange={(e) => setPostingInstructions(e.target.value)}\r\n        />\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button onClick={onClose}>Cancel</Button>\r\n        <Button onClick={handleSave}>Save</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default EditCreatorDialog;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}